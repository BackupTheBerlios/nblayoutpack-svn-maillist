From ikysil at berlios.de  Fri Dec 30 11:16:07 2005
From: ikysil at berlios.de (ikysil at BerliOS)
Date: Fri, 30 Dec 2005 11:16:07 +0100
Subject: [nblayoutpack-svn] r29 - in FormLayout/trunk: nb3.6 nb4.0/nblayoutpack nb4.1/nblayoutpack src/de/berlios/nblayoutpack/formlayout
Message-ID: <200512301016.jBUAG7pH029399@sheep.berlios.de>

Author: ikysil
Date: 2005-12-30 11:16:07 +0100 (Fri, 30 Dec 2005)
New Revision: 29

Modified:
   FormLayout/trunk/nb3.6/build.xml
   FormLayout/trunk/nb4.0/nblayoutpack/build.xml
   FormLayout/trunk/nb4.1/nblayoutpack/build.xml
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java
Log:
[CHANGE] FormLayout: corrected typos referring to TableLayout.

Modified: FormLayout/trunk/nb3.6/build.xml
===================================================================
--- FormLayout/trunk/nb3.6/build.xml	2005-11-19 21:47:45 UTC (rev 28)
+++ FormLayout/trunk/nb3.6/build.xml	2005-12-30 10:16:07 UTC (rev 29)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project name="nblayoutpack-tablelayout" basedir=".." default="all">
+<project name="nblayoutpack-formlayout" basedir=".." default="all">
 
     <!-- Sample Ant script to create a NetBeans module and test it. -->
     <!-- Sample directory layout: -->

Modified: FormLayout/trunk/nb4.0/nblayoutpack/build.xml
===================================================================
--- FormLayout/trunk/nb4.0/nblayoutpack/build.xml	2005-11-19 21:47:45 UTC (rev 28)
+++ FormLayout/trunk/nb4.0/nblayoutpack/build.xml	2005-12-30 10:16:07 UTC (rev 29)
@@ -12,7 +12,7 @@
 Microsystems, Inc. All Rights Reserved.
 -->
 
-<project name="nblayoutpack-tablelayout" default="netbeans" basedir=".">
+<project name="nblayoutpack-formlayout" default="netbeans" basedir=".">
 
     <property file="../../build.properties"/>
     <tstamp>

Modified: FormLayout/trunk/nb4.1/nblayoutpack/build.xml
===================================================================
--- FormLayout/trunk/nb4.1/nblayoutpack/build.xml	2005-11-19 21:47:45 UTC (rev 28)
+++ FormLayout/trunk/nb4.1/nblayoutpack/build.xml	2005-12-30 10:16:07 UTC (rev 29)
@@ -12,7 +12,7 @@
 Microsystems, Inc. All Rights Reserved.
 -->
 
-<project name="nblayoutpack-tablelayout" default="netbeans" basedir=".">
+<project name="nblayoutpack-formlayout" default="netbeans" basedir=".">
 
     <property file="../../build.properties"/>
     <tstamp>

Modified: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java	2005-11-19 21:47:45 UTC (rev 28)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java	2005-12-30 10:16:07 UTC (rev 29)
@@ -37,7 +37,7 @@
   /** The icon for FormLayout. */
   private static String iconURL =
       "de/berlios/nblayoutpack/formlayout/resources/formlayout16.png"; // NOI18N
-  /** The icon for TableLayout. */
+  /** The icon for FormLayout. */
   private static String icon32URL =
       "de/berlios/nblayoutpack/formlayout/resources/formlayout32.png"; // NOI18N
 
@@ -170,11 +170,11 @@
   private static final String baseVarName = "_formLayoutInstance";
 
   /** Creates code structures for a new layout manager (opposite to
-   * readInitLayoutCode). As the TableLayout is not a bean, this method must
+   * readInitLayoutCode). As the FormLayout is not a bean, this method must
    * override from AbstractLayoutSupport.
    * @param layoutCode CodeGroup to be filled with relevant
    *        initialization code;
-   * @return new CodeExpression representing the TableLayout
+   * @return new CodeExpression representing the FormLayout
    */
   protected CodeExpression createInitLayoutCode(CodeGroup layoutCode){
     CodeStructure codeStructure = getCodeStructure();



From ikysil at berlios.de  Fri Dec 30 15:26:34 2005
From: ikysil at berlios.de (ikysil at BerliOS)
Date: Fri, 30 Dec 2005 15:26:34 +0100
Subject: [nblayoutpack-svn] r30 - /
Message-ID: <200512301426.jBUEQYsw019718@sheep.berlios.de>

Author: ikysil
Date: 2005-12-30 15:26:34 +0100 (Fri, 30 Dec 2005)
New Revision: 30

Added:
   RiverLayout/
Log:
[NEW]    RiverLayout module root.



From ikysil at berlios.de  Fri Dec 30 15:27:13 2005
From: ikysil at berlios.de (ikysil at BerliOS)
Date: Fri, 30 Dec 2005 15:27:13 +0100
Subject: [nblayoutpack-svn] r31 - RiverLayout
Message-ID: <200512301427.jBUERD9d019860@sheep.berlios.de>

Author: ikysil
Date: 2005-12-30 15:27:13 +0100 (Fri, 30 Dec 2005)
New Revision: 31

Added:
   RiverLayout/trunk/
Log:
[NEW]    RiverLayout trunk.



From ikysil at berlios.de  Fri Dec 30 15:31:12 2005
From: ikysil at berlios.de (ikysil at BerliOS)
Date: Fri, 30 Dec 2005 15:31:12 +0100
Subject: [nblayoutpack-svn] r32 - RiverLayout
Message-ID: <200512301431.jBUEVCcn020480@sheep.berlios.de>

Author: ikysil
Date: 2005-12-30 15:31:11 +0100 (Fri, 30 Dec 2005)
New Revision: 32

Added:
   RiverLayout/tag/
Log:
[NEW]    RiverLayout root for tags.



From ikysil at berlios.de  Fri Dec 30 15:41:52 2005
From: ikysil at berlios.de (ikysil at BerliOS)
Date: Fri, 30 Dec 2005 15:41:52 +0100
Subject: [nblayoutpack-svn] r33 - in RiverLayout/trunk: . lib nb5.0 nb5.0/nblayoutpack-riverlayout nb5.0/nblayoutpack-riverlayout/nbproject nb5.0/nblayoutpack-riverlayout-library nb5.0/nblayoutpack-riverlayout-library/nbproject nb5.0/nblayoutpack-riverlayout-library/release nb5.0/nblayoutpack-riverlayout-library/release/modules nb5.0/nblayoutpack-riverlayout-library/release/modules/ext nb5.0/nblayoutpack-riverlayout-library/release/modules/ext/nblayoutpack nb5.0/nblayoutpack-riverlayout-library/src nb5.0/nblayoutpack-riverlayout-library/src/de nb5.0/nblayoutpack-riverlayout-library/src/de/berlios nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library nb5.0/nblayoutpack-riverlayout-suite nb5.0/nblayoutpack-riverlayout-suite/nbproject src src/de src/de/berlios src/de/berlios/nblayoutpack src/de/berlios/nblayoutpack/river!
 layout src/de/berlios/nblayoutpack/riverlayout/editors src/de/berlios/nblayoutpack/riverlayout/nb5.x src/de/berlios/nblayoutpack/riverlayout/nb5.x/palette
Message-ID: <200512301441.jBUEfqRk021554@sheep.berlios.de>

Author: ikysil
Date: 2005-12-30 15:41:50 +0100 (Fri, 30 Dec 2005)
New Revision: 33

Added:
   RiverLayout/trunk/build.properties
   RiverLayout/trunk/lib/
   RiverLayout/trunk/lib/license.txt
   RiverLayout/trunk/lib/riverlayout-1.1.jar
   RiverLayout/trunk/license.txt
   RiverLayout/trunk/nb5.0/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/build.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/license.txt
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/manifest.mf
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/build-impl.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/genfiles.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/project.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/project.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/suite.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/release/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/release/modules/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/release/modules/ext/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/release/modules/ext/nblayoutpack/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/release/modules/ext/nblayoutpack/riverlayout-1.1.jar
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/Bundle.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/layer.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/riverlayout.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/build.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/build-impl.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/genfiles.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/platform.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/project.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/project.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/build.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/manifest.mf
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/build-impl.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/genfiles.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/project.properties
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/project.xml
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/suite.properties
   RiverLayout/trunk/src/
   RiverLayout/trunk/src/de/
   RiverLayout/trunk/src/de/berlios/
   RiverLayout/trunk/src/de/berlios/nblayoutpack/
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/Bundle.properties
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutIntrospector.java
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutModule.java
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutSupport.java
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/HAlignEditor.java
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/VAlignEditor.java
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/RiverLayoutClasses.txt
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/layer.xml
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/palette/
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/palette/RiverLayout.palette_item
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/resources/
Log:
[NEW]    RiverLayout: initial supporting module implementation.

Added: RiverLayout/trunk/build.properties
===================================================================
--- RiverLayout/trunk/build.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/build.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,5 @@
+package=de/berlios/nblayoutpack/riverlayout
+name=nblayoutpack-riverlayout
+src=src
+
+spec.version=1.0.0
\ No newline at end of file

Added: RiverLayout/trunk/lib/license.txt
===================================================================
--- RiverLayout/trunk/lib/license.txt	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/lib/license.txt	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,11 @@
+RiverLayout License
+---------------------------------------
+
+RiverLayout is released under the LGPL licence. You may therefore freely
+use it in both non-commerical and commercial applications and you don't
+need to open up your source code. Improvements made to RiverLayout should
+however be returned to the project for the benefit of everyone.
+
+Copyright (C) 2005 David Ekholm.
+
+---------------------------------------

Added: RiverLayout/trunk/lib/riverlayout-1.1.jar
===================================================================
(Binary files differ)


Property changes on: RiverLayout/trunk/lib/riverlayout-1.1.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: RiverLayout/trunk/license.txt
===================================================================
--- RiverLayout/trunk/license.txt	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/license.txt	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,19 @@
+NetBeans Layout Pack License
+---------------------------------------
+
+Version: SPL 1.0
+
+NetBeans Layout Pack, the Module, is subject to the Sun Public License
+Version 1.0 (the "License"); you may not use this Module except
+in compliance with the License. You may obtain a copy of the License
+at http://www.sun.com/
+
+Software distributed under the License is distributed on an "AS IS" basis,
+WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+for the specific language governing rights and limitations under the
+License.
+
+The Initial Developer of the Module is Illya Kysil.
+Portions created by the Initial Developer are
+Copyright (C) 2004-2005 the Initial Developer.
+All Rights Reserved.

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/build.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/build.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/build.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
+<!-- for some information on what you could do (e.g. targets to override). -->
+<!-- If you delete this file and reopen the project it will be recreated. -->
+<project name="de.berlios.nblayoutpack.riverlayout" default="netbeans" basedir=".">
+    <description>Builds, tests, and runs the project de.berlios.nblayoutpack.riverlayout.</description>
+    <import file="nbproject/build-impl.xml"/>
+
+    <property file="../../build.properties"/>
+    <tstamp>
+      <format property="buildnumber" pattern="yyyyMMdd.HHmm"/>
+    </tstamp>
+    <property name="impl.version" value="${spec.version}.${buildnumber}"/>
+    <property name="spec.version.base" value="${spec.version}"/>
+
+</project>

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/manifest.mf
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/manifest.mf	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/manifest.mf	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,5 @@
+Manifest-Version: 1.0
+OpenIDE-Module: de.berlios.nblayoutpack.riverlayout/1
+OpenIDE-Module-Layer: de/berlios/nblayoutpack/riverlayout/nb5.x/layer.xml
+OpenIDE-Module-Localizing-Bundle: de/berlios/nblayoutpack/riverlayout/Bundle.properties
+OpenIDE-Module-Install: de/berlios/nblayoutpack/riverlayout/RiverLayoutModule.class


Property changes on: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject
___________________________________________________________________
Name: svn:ignore
   + private


Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/build-impl.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/build-impl.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/build-impl.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+*** GENERATED FROM project.xml - DO NOT EDIT  ***
+***         EDIT ../build.xml INSTEAD         ***
+-->
+<project name="de.berlios.nblayoutpack.riverlayout-impl" basedir=".." xmlns:nbmproject="http://www.netbeans.org/ns/nb-module-project/2">
+    <property file="nbproject/private/suite-private.properties"/>
+    <property file="nbproject/suite.properties"/>
+    <fail unless="suite.dir">You must set 'suite.dir' to point to your containing module suite</fail>
+    <property file="${suite.dir}/nbproject/private/platform-private.properties"/>
+    <property file="${suite.dir}/nbproject/platform.properties"/>
+    <macrodef name="property" uri="http://www.netbeans.org/ns/nb-module-project/2">
+        <attribute name="name"/>
+        <attribute name="value"/>
+        <sequential>
+            <property name="@{name}" value="${@{value}}"/>
+        </sequential>
+    </macrodef>
+    <property file="${user.properties.file}"/>
+    <nbmproject:property name="harness.dir" value="nbplatform.${nbplatform.active}.harness.dir"/>
+    <nbmproject:property name="netbeans.dest.dir" value="nbplatform.${nbplatform.active}.netbeans.dest.dir"/>
+    <fail message="You must define 'nbplatform.${nbplatform.active}.harness.dir'">
+        <condition>
+            <not>
+                <available file="${harness.dir}" type="dir"/>
+            </not>
+        </condition>
+    </fail>
+    <import file="${harness.dir}/build.xml"/>
+</project>

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/genfiles.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/genfiles.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/genfiles.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,8 @@
+build.xml.data.CRC32=d2a7cf6f
+build.xml.script.CRC32=f93f646a
+build.xml.stylesheet.CRC32=1101b4cf
+# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.
+# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.
+nbproject/build-impl.xml.data.CRC32=00f8b62e
+nbproject/build-impl.xml.script.CRC32=ea6e207d
+nbproject/build-impl.xml.stylesheet.CRC32=d126b16b

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/project.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/project.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/project.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,10 @@
+license.file=../../license.txt
+nbm.homepage=http://nblayoutpack.berlios.de
+nbm.module.author=Illya Kysil
+
+src.dir=../../src
+
+build.package.compress=true
+build.package.index=true
+
+nbm=${name}-nb5.0beta-${impl.version}.nbm

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/project.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/project.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/project.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://www.netbeans.org/ns/project/1">
+    <type>org.netbeans.modules.apisupport.project</type>
+    <configuration>
+        <data xmlns="http://www.netbeans.org/ns/nb-module-project/2">
+            <code-name-base>de.berlios.nblayoutpack.riverlayout</code-name-base>
+            <suite-component/>
+            <module-dependencies>
+                <dependency>
+                    <code-name-base>de.berlios.nblayoutpack.riverlayout.library</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <implementation-version/>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.netbeans.modules.form</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>2</release-version>
+                        <implementation-version/>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.openide.explorer</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <specification-version>6.2</specification-version>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.openide.modules</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <specification-version>6.2</specification-version>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.openide.nodes</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <specification-version>6.2</specification-version>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.openide.util</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <specification-version>6.2</specification-version>
+                    </run-dependency>
+                </dependency>
+            </module-dependencies>
+            <public-packages/>
+        </data>
+    </configuration>
+</project>

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/suite.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/suite.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/nbproject/suite.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1 @@
+suite.dir=${basedir}/../nblayoutpack-riverlayout-suite

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/build.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/build.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/build.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
+<!-- for some information on what you could do (e.g. targets to override). -->
+<!-- If you delete this file and reopen the project it will be recreated. -->
+<project name="de.berlios.nblayoutpack.riverlayout.library" default="netbeans" basedir=".">
+    <description>Builds, tests, and runs the project de.berlios.nblayoutpack.riverlayout.library.</description>
+    <import file="nbproject/build-impl.xml"/>
+</project>

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/license.txt
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/license.txt	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/license.txt	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,9 @@
+RiverLayout License
+---------------------------------------
+
+RiverLayout is released under the LGPL licence. You may therefore freely
+use it in both non-commerical and commercial applications and you don't
+need to open up your source code. Improvements made to RiverLayout should
+however be returned to the project for the benefit of everyone.
+
+Copyright (C) 2005 David Ekholm.

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/manifest.mf
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/manifest.mf	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/manifest.mf	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,6 @@
+Manifest-Version: 1.0
+OpenIDE-Module: de.berlios.nblayoutpack.riverlayout.library
+OpenIDE-Module-Implementation-Version: 1
+OpenIDE-Module-Localizing-Bundle: de/berlios/nblayoutpack/riverlayout/library/Bundle.properties
+OpenIDE-Module-Layer: de/berlios/nblayoutpack/riverlayout/library/layer.xml
+


Property changes on: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject
___________________________________________________________________
Name: svn:ignore
   + private


Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/build-impl.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/build-impl.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/build-impl.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+*** GENERATED FROM project.xml - DO NOT EDIT  ***
+***         EDIT ../build.xml INSTEAD         ***
+-->
+<project name="de.berlios.nblayoutpack.riverlayout.library-impl" basedir=".." xmlns:nbmproject="http://www.netbeans.org/ns/nb-module-project/2">
+    <property file="nbproject/private/suite-private.properties"/>
+    <property file="nbproject/suite.properties"/>
+    <fail unless="suite.dir">You must set 'suite.dir' to point to your containing module suite</fail>
+    <property file="${suite.dir}/nbproject/private/platform-private.properties"/>
+    <property file="${suite.dir}/nbproject/platform.properties"/>
+    <macrodef name="property" uri="http://www.netbeans.org/ns/nb-module-project/2">
+        <attribute name="name"/>
+        <attribute name="value"/>
+        <sequential>
+            <property name="@{name}" value="${@{value}}"/>
+        </sequential>
+    </macrodef>
+    <property file="${user.properties.file}"/>
+    <nbmproject:property name="harness.dir" value="nbplatform.${nbplatform.active}.harness.dir"/>
+    <nbmproject:property name="netbeans.dest.dir" value="nbplatform.${nbplatform.active}.netbeans.dest.dir"/>
+    <fail message="You must define 'nbplatform.${nbplatform.active}.harness.dir'">
+        <condition>
+            <not>
+                <available file="${harness.dir}" type="dir"/>
+            </not>
+        </condition>
+    </fail>
+    <import file="${harness.dir}/build.xml"/>
+</project>

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/genfiles.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/genfiles.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/genfiles.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,8 @@
+build.xml.data.CRC32=83d42751
+build.xml.script.CRC32=f28f2192
+build.xml.stylesheet.CRC32=1101b4cf
+# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.
+# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.
+nbproject/build-impl.xml.data.CRC32=83d42751
+nbproject/build-impl.xml.script.CRC32=69021bd2
+nbproject/build-impl.xml.stylesheet.CRC32=d126b16b

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/project.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/project.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/project.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,5 @@
+is.autoload=true
+license.file=${basedir}/license.txt
+nbm.homepage=http://www.datadosen.se/riverlayout/
+nbm.module.author=David Ekholm
+spec.version.base=1.1

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/project.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/project.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/project.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://www.netbeans.org/ns/project/1">
+    <type>org.netbeans.modules.apisupport.project</type>
+    <configuration>
+        <data xmlns="http://www.netbeans.org/ns/nb-module-project/2">
+            <code-name-base>de.berlios.nblayoutpack.riverlayout.library</code-name-base>
+            <suite-component/>
+            <module-dependencies/>
+            <public-packages>
+                <package>se.datadosen.component</package>
+            </public-packages>
+            <class-path-extension>
+                <runtime-relative-path>ext/nblayoutpack/riverlayout-1.1.jar</runtime-relative-path>
+                <binary-origin>release/modules/ext/nblayoutpack/riverlayout-1.1.jar</binary-origin>
+            </class-path-extension>
+        </data>
+    </configuration>
+</project>

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/suite.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/suite.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/nbproject/suite.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1 @@
+suite.dir=${basedir}/../nblayoutpack-riverlayout-suite

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/release/modules/ext/nblayoutpack/riverlayout-1.1.jar
===================================================================
(Binary files differ)


Property changes on: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/release/modules/ext/nblayoutpack/riverlayout-1.1.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/Bundle.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/Bundle.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/Bundle.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,2 @@
+OpenIDE-Module-Display-Category=NetBeans Layout Pack
+OpenIDE-Module-Name=RiverLayout 1.1 library

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/layer.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/layer.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/layer.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.1//EN" "http://www.netbeans.org/dtds/filesystem-1_1.dtd">
+<filesystem>
+
+  <folder name="org-netbeans-api-project-libraries">
+    <folder name="Libraries">
+      <file name="riverlayout.xml" url="riverlayout.xml"/>
+    </folder>
+  </folder>
+
+</filesystem>
+

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/riverlayout.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/riverlayout.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/src/de/berlios/nblayoutpack/riverlayout/library/riverlayout.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!DOCTYPE library PUBLIC "-//NetBeans//DTD Library Declaration 1.0//EN" "http://www.netbeans.org/dtds/library-declaration-1_0.dtd">
+
+<library version="1.0">
+    <name>RiverLayout 1.1</name>
+    <type>j2se</type>
+    <localizing-bundle>de/berlios/nblayoutpack/riverlayout/library/Bundle</localizing-bundle>
+    <volume>
+        <type>classpath</type>
+        <resource>jar:nbinst:///modules/ext/nblayoutpack/riverlayout-1.1.jar!/</resource>
+    </volume>
+</library>

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/build.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/build.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/build.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
+<!-- for some information on what you could do (e.g. targets to override). -->
+<!-- If you delete this file and reopen the project it will be recreated. -->
+<project name="nblayoutpack-riverlayout-suite" basedir=".">
+    <description>Builds the module suite nblayoutpack-riverlayout-suite.</description>
+    <import file="nbproject/build-impl.xml"/>
+</project>


Property changes on: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject
___________________________________________________________________
Name: svn:ignore
   + private


Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/build-impl.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/build-impl.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/build-impl.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+*** GENERATED FROM project.xml - DO NOT EDIT  ***
+***         EDIT ../build.xml INSTEAD         ***
+-->
+<project name="nblayoutpack-riverlayout-suite-impl" basedir=".." xmlns:sproject="http://www.netbeans.org/ns/nb-module-suite-project/1">
+    <property file="nbproject/private/platform-private.properties"/>
+    <property file="nbproject/platform.properties"/>
+    <macrodef name="property" uri="http://www.netbeans.org/ns/nb-module-suite-project/1">
+        <attribute name="name"/>
+        <attribute name="value"/>
+        <sequential>
+            <property name="@{name}" value="${@{value}}"/>
+        </sequential>
+    </macrodef>
+    <property file="${user.properties.file}"/>
+    <sproject:property name="harness.dir" value="nbplatform.${nbplatform.active}.harness.dir"/>
+    <sproject:property name="netbeans.dest.dir" value="nbplatform.${nbplatform.active}.netbeans.dest.dir"/>
+    <fail message="You must define 'nbplatform.${nbplatform.active}.harness.dir'">
+        <condition>
+            <not>
+                <available file="${harness.dir}" type="dir"/>
+            </not>
+        </condition>
+    </fail>
+    <import file="${harness.dir}/suite.xml"/>
+</project>

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/genfiles.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/genfiles.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/genfiles.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,8 @@
+build.xml.data.CRC32=02df6fa3
+build.xml.script.CRC32=2c75aaa6
+build.xml.stylesheet.CRC32=9af4a295
+# This file is used by a NetBeans-based IDE to track changes in generated files such as build-impl.xml.
+# Do not edit this file. You may delete it but then the IDE will never regenerate such files for you.
+nbproject/build-impl.xml.data.CRC32=02df6fa3
+nbproject/build-impl.xml.script.CRC32=8ababe72
+nbproject/build-impl.xml.stylesheet.CRC32=66c54bd3

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/platform.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/platform.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/platform.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1 @@
+nbplatform.active=default

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/project.properties
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/project.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/project.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,5 @@
+modules=\
+    ${project.de.berlios.nblayoutpack.riverlayout.library}:\
+    ${project.de.berlios.nblayoutpack.riverlayout}
+project.de.berlios.nblayoutpack.riverlayout=../nblayoutpack-riverlayout
+project.de.berlios.nblayoutpack.riverlayout.library=../nblayoutpack-riverlayout-library

Added: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/project.xml
===================================================================
--- RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/project.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/nbproject/project.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://www.netbeans.org/ns/project/1">
+    <type>org.netbeans.modules.apisupport.project.suite</type>
+    <configuration>
+        <data xmlns="http://www.netbeans.org/ns/nb-module-suite-project/1">
+            <name>nblayoutpack-riverlayout-suite</name>
+        </data>
+    </configuration>
+</project>

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/Bundle.properties
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/Bundle.properties	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/Bundle.properties	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,48 @@
+# Resource bundle for package de.berlios.nblayoutpack.riverlayout
+OpenIDE-Module-Display-Category=NetBeans Layout Pack
+OpenIDE-Module-Name=RiverLayout 1.1 support
+OpenIDE-Module-Long-Description=RiverLayout layout manager support.
+Mount/java/riverlayout.xml=RiverLayout 1.1
+Palette/Layouts/se-datadosen-component-RiverLayout.instance=RiverLayout
+
+PROP_hGap=Horizontal Gap
+HINT_hGap=
+
+PROP_vGap=Vertical Gap
+HINT_vGap=
+
+PROP_extraInsets=Extra Insets
+HINT_extraInsets=
+
+PROP_constraints=Constraints
+HINT_constraints=
+
+PROP_lineBreak=Line Break
+HINT_lineBreak=
+
+PROP_parBreak=Paragraph Break
+HINT_parBreak=
+
+PROP_tabStop=Tab Stop
+HINT_tabStop
+
+PROP_hFill=Fill Horizontally
+HINT_hFill=
+
+PROP_vFill=Fill Vertically
+HINT_vFill=
+
+PROP_hAlign=Horizontal alignment
+HINT_hAlign=
+
+PROP_vAlign=Vertical alignment
+HINT_vAlign=
+
+VALUE_hAlign_DEFAULT=Default
+VALUE_hAlign_CENTER=Center
+VALUE_hAlign_LEFT=Left
+VALUE_hAlign_RIGHT=Right
+
+VALUE_vAlign_DEFAULT=Default
+VALUE_vAlign_CENTER=Center
+VALUE_vAlign_TOP=Top

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutIntrospector.java
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutIntrospector.java	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutIntrospector.java	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,54 @@
+/*
+ * RiverLayoutIntrospector.java
+ *
+ * Created on December 30, 2005, 1:04 PM
+ */
+
+package de.berlios.nblayoutpack.riverlayout;
+
+import java.awt.*;
+import java.lang.reflect.*;
+
+import org.openide.ErrorManager;
+
+import se.datadosen.component.*;
+
+/**
+ *
+ * @author Illya Kysil
+ */
+public class RiverLayoutIntrospector {
+
+    private static Constructor layoutConstructor;
+
+    private static Method setExtraInsetsMethod;
+
+    /** Creates a new instance of RiverLayoutIntrospector */
+    private RiverLayoutIntrospector() {
+    }
+
+    public static Constructor getLayoutConstructor() {
+        if (layoutConstructor == null) {
+            try {
+                layoutConstructor = RiverLayout.class.getConstructor(new Class[]{int.class, int.class});
+            }
+            catch (NoSuchMethodException e){
+                ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+            }
+        }
+        return layoutConstructor;
+    }
+
+    public static Method getSetExtraInsetsMethod() {
+        if (setExtraInsetsMethod == null) {
+            try {
+                setExtraInsetsMethod = RiverLayout.class.getMethod("setExtraInsets", new Class[]{Insets.class});
+            }
+            catch (NoSuchMethodException e){
+                ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+            }
+        }
+        return setExtraInsetsMethod;
+    }
+
+}

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutModule.java
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutModule.java	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutModule.java	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,37 @@
+/*
+ * RiverLayoutModule.java
+ *
+ * Created on December 30, 2005, 12:02 PM
+ */
+
+package de.berlios.nblayoutpack.riverlayout;
+
+import org.openide.modules.ModuleInstall;
+
+import org.netbeans.modules.form.layoutsupport.LayoutSupportRegistry;
+
+/**
+ *
+ * @author Illya Kysil
+ */
+public class RiverLayoutModule extends ModuleInstall {
+
+    /** Creates a new instance of RiverLayoutModule */
+    public RiverLayoutModule() {
+    }
+
+    public void restored(){
+        LayoutSupportRegistry.registerSupportForLayout(
+                "se.datadosen.component.RiverLayout",
+                "de.berlios.nblayoutpack.riverlayout.RiverLayoutSupport"
+        );
+    }
+
+    public void close(){
+        LayoutSupportRegistry.registerSupportForLayout(
+                "se.datadosen.component.RiverLayout",
+                LayoutSupportRegistry.DEFAULT_SUPPORT
+        );
+    }
+
+}

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutSupport.java
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutSupport.java	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/RiverLayoutSupport.java	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,735 @@
+/*
+ * RiverLayoutSupport.java
+ *
+ * Created on December 30, 2005, 12:05 PM
+ */
+
+package de.berlios.nblayoutpack.riverlayout;
+
+import java.awt.*;
+import java.beans.*;
+import java.lang.reflect.*;
+import java.text.*;
+import java.util.*;
+
+import javax.swing.*;
+
+import org.openide.ErrorManager;
+import org.openide.nodes.*;
+import org.openide.util.Utilities;
+
+import org.netbeans.modules.form.*;
+import org.netbeans.modules.form.codestructure.*;
+import org.netbeans.modules.form.layoutsupport.*;
+
+import se.datadosen.component.*;
+import se.datadosen.util.*;
+
+import de.berlios.nblayoutpack.riverlayout.editors.*;
+
+/**
+ *
+ * @author Illya Kysil
+ */
+public class RiverLayoutSupport extends AbstractLayoutSupport {
+
+    /** The icon for RiverLayout. */
+    private static String iconURL =
+            "de/berlios/nblayoutpack/riverlayout/resources/riverlayout16.png"; // NOI18N
+    /** The icon for RiverLayout. */
+    private static String icon32URL =
+            "de/berlios/nblayoutpack/riverlayout/resources/riverlayout32.png"; // NOI18N
+
+    private int hgap;
+
+    private int vgap;
+
+    private Insets extraInsets;
+
+    /** Creates a new instance of RiverLayoutSupport */
+    public RiverLayoutSupport() {
+        RiverLayout riverLayout = new RiverLayout();
+        hgap = riverLayout.getHgap(); 
+        vgap = riverLayout.getVgap(); 
+        extraInsets = riverLayout.getExtraInsets(); 
+    }
+
+    public Class getSupportedClass() {
+        return se.datadosen.component.RiverLayout.class;
+    }
+
+    public int getHgap() {
+        return hgap;
+    }
+
+    public void setHgap(int hgap) {
+        this.hgap = hgap;
+    }
+
+    public int getVgap() {
+        return vgap;
+    }
+
+    public void setVgap(int vgap) {
+        this.vgap = vgap;
+    }
+
+    public Insets getExtraInsets() {
+        return extraInsets;
+    }
+
+    public void setExtraInsets(Insets extraInsets) {
+        this.extraInsets = extraInsets;
+    }
+
+    /** Provides an icon to be used for the layout node in Component
+     * Inspector. Only 16x16 color icon is required.
+     * @param type is one of BeanInfo constants: ICON_COLOR_16x16,
+     *        ICON_COLOR_32x32, ICON_MONO_16x16, ICON_MONO_32x32
+     * @return icon to be displayed for node in Component Inspector
+     */
+    public Image getIcon(int type) {
+        switch (type) {
+            case BeanInfo.ICON_COLOR_16x16:
+            case BeanInfo.ICON_MONO_16x16:
+                return Utilities.loadImage(iconURL);
+            default:
+                return Utilities.loadImage(icon32URL);
+        }
+    }
+
+    public static ResourceBundle getBundle() {
+        return org.openide.util.NbBundle.getBundle(RiverLayoutSupport.class);
+    }
+
+    /** Sets up the layout (without adding components) on a real container,
+     * according to the internal metadata representation. This method must
+     * override AbstractLayoutSupport because FormLayout instance cannot
+     * be used universally - new instance must be created for each container.
+     * @param container instance of a real container to be set
+     * @param containerDelegate effective container delegate of the container;
+     *        for layout managers we always use container delegate instead of
+     *        the container
+     */
+    public void setLayoutToContainer(Container container, Container containerDelegate) {
+        try {
+            containerDelegate.setLayout(cloneLayoutInstance(container, containerDelegate));
+        }
+        catch(Exception e) {
+            ErrorManager.getDefault().notify(ErrorManager.WARNING, e);
+        }
+    }
+
+    protected LayoutManager cloneLayoutInstance(Container container, Container containerDelegate) {
+        RiverLayout result = new RiverLayout(hgap, vgap);
+        result.setExtraInsets(extraInsets);
+        return result;
+    }
+
+    protected LayoutManager createDefaultLayoutInstance() throws Exception {
+        return new RiverLayout();
+    }
+
+    private static final String baseVarName = "_riverLayoutInstance";
+
+    /** Creates code structures for a new layout manager (opposite to
+     * readInitLayoutCode). As the RiverLayout is not a bean, this method must
+     * override from AbstractLayoutSupport.
+     * @param layoutCode CodeGroup to be filled with relevant
+     *        initialization code;
+     * @return new CodeExpression representing the FormLayout
+     */
+    protected CodeExpression createInitLayoutCode(CodeGroup layoutCode){
+        CodeStructure codeStructure = getCodeStructure();
+        FormProperty[] properties = getProperties();
+        CodeExpression[] constrParams = new CodeExpression[2];
+        constrParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[0]));
+        constrParams[1] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[1]));
+        CodeExpression varExpression = codeStructure.createExpression(RiverLayoutIntrospector.getLayoutConstructor(), constrParams);
+        String varName = baseVarName;
+        CodeVariable var = codeStructure.getVariable(varName);
+        int i = 1;
+        while(var != null){
+            varName = baseVarName + (i++);
+            var = codeStructure.getVariable(varName);
+        };
+        var = codeStructure.createVariable(CodeVariable.LOCAL /*| CodeVariable.EXPLICIT_DECLARATION*/, RiverLayout.class, varName);
+        codeStructure.attachExpressionToVariable(varExpression, var);
+        layoutCode.addStatement(0, var.getAssignment(varExpression));
+        CodeExpression[] setExtraInsetsParams = new CodeExpression[1];
+        setExtraInsetsParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[2]));
+        layoutCode.addStatement(codeStructure.createStatement(varExpression, RiverLayoutIntrospector.getSetExtraInsetsMethod(), setExtraInsetsParams));
+        return varExpression;
+    }
+
+    protected void readInitLayoutCode(CodeExpression codeExpression, CodeGroup layoutCode){
+        CodeVariable var = codeExpression.getVariable();
+        layoutCode.addStatement(0, var.getAssignment(codeExpression));
+        CodeExpression[] constructorParams = var.getAssignment(codeExpression).getStatementParameters();
+        FormProperty[] properties = getProperties();
+        FormCodeSupport.readPropertyExpression(constructorParams[0], properties[0], false);
+        FormCodeSupport.readPropertyExpression(constructorParams[1], properties[1], true);
+        Iterator it = CodeStructure.getDefinedStatementsIterator(codeExpression);
+        while(it.hasNext()){
+            CodeStatement statement = (CodeStatement)it.next();
+            if(isMethod(statement, RiverLayoutIntrospector.getSetExtraInsetsMethod())){
+                FormCodeSupport.readPropertyStatement(statement, properties[2], true);
+            }
+            layoutCode.addStatement(statement);
+        }
+        updateLayoutInstance();
+    }
+
+    public boolean isMethod(CodeStatement statement, Method method){
+        Object obj = statement.getMetaObject();
+        if (obj != null && obj instanceof Method) {
+            Method other = (Method)obj;
+            // Compare class names only since classes can be loaded by different ClassLoaders
+            if ((method.getDeclaringClass().getName().equals(other.getDeclaringClass().getName()))
+                && (method.getName() == other.getName())) {
+                if (!method.getReturnType().equals(other.getReturnType())) {
+                    return false;
+                }
+                Class[] params1 = method.getParameterTypes();
+                Class[] params2 = other.getParameterTypes();
+                if (params1.length == params2.length) {
+                    for (int i = 0; i < params1.length; i++) {
+                        if (params1[i] != params2[i])
+                            return false;
+                    }
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+    /** Called from createComponentCode method, creates code for a component
+     * layout constraints (opposite to readConstraintsCode).
+     * @param constrCode CodeGroup to be filled with constraints code; not
+     *        needed here because AbsoluteConstraints object is represented
+     *        only by a single constructor code expression and no statements
+     * @param constr layout constraints metaobject representing the constraints
+     * @param compExp CodeExpression object representing the component; not
+     *        needed here
+     * @return created CodeExpression representing the layout constraints
+     */
+    protected CodeExpression createConstraintsCode(CodeGroup constrCode,
+            LayoutConstraints constr, CodeExpression compExp, int index) {
+        if (!(constr instanceof RiverLayoutSupportConstraints))
+            return null;
+        
+        RiverLayoutSupportConstraints rlsConstr = (RiverLayoutSupportConstraints) constr;
+        // code expressions for constructor parameters are created in
+        // RiverLayoutSupportConstraints
+        CodeExpression[] params = rlsConstr.createPropertyExpressions(getCodeStructure());
+        return params[0];
+    }
+    
+    protected LayoutConstraints readConstraintsCode(CodeExpression constrExp, CodeGroup constrCode, CodeExpression compExp) {
+        RiverLayoutSupportConstraints constr = new RiverLayoutSupportConstraints();
+        // reading is done in RiverLayoutSupportConstraints
+        constr.readCodeExpression(constrExp, constrCode);
+        return constr;
+    }
+    
+    private FormProperty[] properties;
+    
+    protected FormProperty[] getProperties() {
+        if (properties == null){
+            properties = createProperties();
+        }
+        return properties;
+    }
+    
+    protected FormProperty[] createProperties() {
+        FormProperty[] properties = new FormProperty[] {
+            new FormProperty("hgap", // NOI18N
+                    Integer.class,
+                    getBundle().getString("PROP_hGap"), // NOI18N
+                    getBundle().getString("HINT_hGap")) { // NOI18N
+                
+                public Object getTargetValue() {
+                    return new Integer(hgap);
+                }
+                public void setTargetValue(Object value) {
+                    hgap = ((Integer) value).intValue();
+                }
+                public void setPropertyContext(FormPropertyContext ctx) {
+                    // disabling this method due to limited persistence
+                    // capabilities (compatibility with previous versions)
+                }
+            },
+            
+            new FormProperty("vgap", // NOI18N
+                    Integer.class,
+                    getBundle().getString("PROP_vGap"), // NOI18N
+                    getBundle().getString("HINT_vGap")) { // NOI18N
+                
+                public Object getTargetValue() {
+                    return new Integer(vgap);
+                }
+                public void setTargetValue(Object value) {
+                    vgap = ((Integer) value).intValue();
+                }
+                public void setPropertyContext(FormPropertyContext ctx) {
+                    // disabling this method due to limited persistence
+                    // capabilities (compatibility with previous versions)
+                }
+            },
+            
+            new FormProperty("extraInsets", // NOI18N
+                    Insets.class,
+                    getBundle().getString("PROP_extraInsets"), // NOI18N
+                    getBundle().getString("HINT_extraInsets")) { // NOI18N
+                
+                public Object getTargetValue() {
+                    return extraInsets;
+                }
+                public void setTargetValue(Object value) {
+                    extraInsets = (Insets) value;
+                }
+                public void setPropertyContext(FormPropertyContext ctx) {
+                    // disabling this method due to limited persistence
+                    // capabilities (compatibility with previous versions)
+                }
+            }
+        };
+        return properties;
+    }
+    
+    public LayoutConstraints createDefaultConstraints() {
+        return new RiverLayoutSupportConstraints();
+    }
+
+    /** Provides resizing options for given component. It can combine the
+     * bit-flag constants RESIZE_UP, RESIZE_DOWN, RESIZE_LEFT, RESIZE_RIGHT.
+     * @param container instance of a real container in which the
+     *        component is to be resized
+     * @param containerDelegate effective container delegate of the container
+     *        (e.g. like content pane of JFrame)
+     * @param component real component to be resized
+     * @param index position of the component in its container
+     * @return resizing options for the component; 0 if no resizing is possible
+     */
+    public int getResizableDirections(Container container, Container containerDelegate,
+            Component component, int index) {
+        //TODO: evaluate feasibility
+        return 0;
+    }
+
+    /** This method should paint a feedback for a component dragged over
+     * a container (or just for mouse cursor being moved over container).
+     * In principle, it should present given component layout constraints or
+     * index graphically.
+     * @param container instance of a real container over/in which the
+     *        component is dragged
+     * @param containerDelegate effective container delegate of the container
+     *        (e.g. like content pane of JFrame) - here the feedback is painted
+     * @param component the real component being dragged, can be null
+     * @param newConstraints component layout constraints to be presented
+     * @param newIndex component's index position to be presented
+     *        (if newConstraints == null)
+     * @param g Graphics object for painting (with color and line style set)
+     * @return whether any feedback was painted (may return false if the
+     *         constraints or index are invalid, or if the painting is not
+     *         implemented)
+     */
+    public boolean paintDragFeedback(Container container, Container containerDelegate,
+            Component component, LayoutConstraints newConstraints, int newIndex, Graphics g) {
+        //TODO: evaluate feasibility
+        return false;
+    }
+
+    /** This method should calculate layout constraints for a component dragged
+     * over a container (or just for mouse cursor being moved over container).
+     * @param container instance of a real container over/in which the
+     *        component is dragged
+     * @param containerDelegate effective container delegate of the container
+     *        (e.g. like content pane of JFrame)
+     * @param component the real component being dragged, can be null
+     * @param index position (index) of the component in its current container;
+     *        -1 if there's no dragged component
+     * @param posInCont position of mouse in the container delegate
+     * @param posInComp position of mouse in the dragged component; null if
+     *        there's no dragged component
+     * @return new LayoutConstraints object corresponding to the position of
+     *         the component in the container; may return null if the layout
+     *         does not use component constraints, or if default constraints
+     *         should be used
+     */
+    public LayoutConstraints getNewConstraints(Container container, Container containerDelegate,
+            Component component, int index, Point posInCont, Point posInComp) {
+        //TODO: evaluate feasibility
+        return null;
+    }
+
+    /** This method should calculate layout constraints for a component being
+     * resized.
+     * @param container instance of a real container in which the
+     *        component is to be resized
+     * @param containerDelegate effective container delegate of the container
+     *        (e.g. like content pane of JFrame)
+     * @param component real component to be resized
+     * @param index position of the component in its container
+     * @param sizeChanges Insets object with size differences
+     * @param posInCont position of mouse in the container delegate
+     * @return component layout constraints for resized component; null if
+     *         resizing is not possible or not implemented
+     */
+    public LayoutConstraints getResizedConstraints(Container container, Container containerDelegate,
+            Component component, int index, Insets sizeChanges, Point posInCont) {
+        //TODO: evaluate feasibility
+        return null;
+    }
+
+    /** This method is called when switching layout - giving an opportunity to
+     * convert the previous constrainst of components to constraints of the new
+     * layout (this layout). The default implementation does nothing.
+     * @param previousConstraints [input] layout constraints of components in
+     *                                    the previous layout
+     * @param currentConstraints [output] array of converted constraints for
+     *                                    the new layout - to be filled
+     * @param components [input] real components in a real container having the
+     *                           previous layout
+     */
+    public void convertConstraints(LayoutConstraints[] previousConstraints,
+            LayoutConstraints[] currentConstraints, Component[] components) {
+        if ((components == null) || (components.length == 0)){
+            return;
+        }
+        //TODO
+//        ConstraintsConverter converter = new DefaultConstraintsConverter();
+//        converter.convertConstraints(getLayoutContext(), this, previousConstraints, currentConstraints, components);
+    }
+    
+    public static String encodeConstraints(RiverLayoutSupportConstraints rlsc) {
+        StringBuffer sb = new StringBuffer();
+        appendIf(sb, rlsc.lineBreak, RiverLayout.LINE_BREAK);
+        appendIf(sb, rlsc.parBreak, RiverLayout.PARAGRAPH_BREAK);
+        appendIf(sb, rlsc.tabStop, RiverLayout.TAB_STOP);
+        appendIf(sb, rlsc.hFill, RiverLayout.HFILL);
+        appendIf(sb, rlsc.vFill, RiverLayout.VFILL);
+        appendIf(sb, rlsc.hAlign == RiverLayoutSupportConstraints.HALIGN_LEFT, RiverLayout.LEFT);
+        appendIf(sb, rlsc.hAlign == RiverLayoutSupportConstraints.HALIGN_CENTER, RiverLayout.CENTER);
+        appendIf(sb, rlsc.hAlign == RiverLayoutSupportConstraints.HALIGN_RIGHT, RiverLayout.RIGHT);
+        appendIf(sb, rlsc.vAlign == RiverLayoutSupportConstraints.VALIGN_CENTER, RiverLayout.VCENTER);
+        appendIf(sb, rlsc.vAlign == RiverLayoutSupportConstraints.VALIGN_TOP, RiverLayout.VTOP);
+        return sb.toString().trim();
+    }
+
+    private static StringBuffer appendIf(StringBuffer sb, boolean flag, String value) {
+        if (flag) {
+            sb.append(value).append(" ");
+        }
+        return sb;
+    }
+
+    public static RiverLayoutSupportConstraints decodeConstraints(String value) {
+        RiverLayoutSupportConstraints result = new RiverLayoutSupportConstraints();
+        StringTokenizer st = new StringTokenizer(value.trim(), " ");
+        for (; st.hasMoreTokens(); ) {
+            String token = st.nextToken();
+            if (token.equalsIgnoreCase(RiverLayout.LINE_BREAK)) {
+                result.lineBreak = true;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.PARAGRAPH_BREAK)) {
+                result.parBreak = true;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.TAB_STOP)) {
+                result.tabStop = true;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.HFILL)) {
+                result.hFill = true;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.VFILL)) {
+                result.vFill = true;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.LEFT)) {
+                result.hAlign = RiverLayoutSupportConstraints.HALIGN_LEFT;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.CENTER)) {
+                result.hAlign = RiverLayoutSupportConstraints.HALIGN_CENTER;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.RIGHT)) {
+                result.hAlign = RiverLayoutSupportConstraints.HALIGN_RIGHT;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.VCENTER)) {
+                result.vAlign = RiverLayoutSupportConstraints.VALIGN_CENTER;
+            }
+            if (token.equalsIgnoreCase(RiverLayout.VTOP)) {
+                result.vAlign = RiverLayoutSupportConstraints.VALIGN_TOP;
+            }
+        }
+        return result;
+    }
+
+    public static class RiverLayoutSupportConstraints implements LayoutConstraints {
+
+        public static final int HALIGN_DEFAULT = 0;
+        public static final int HALIGN_LEFT    = 1;
+        public static final int HALIGN_CENTER  = 2;
+        public static final int HALIGN_RIGHT   = 3;
+
+        public static final int VALIGN_DEFAULT = 0;
+        public static final int VALIGN_TOP     = 1;
+        public static final int VALIGN_CENTER  = 2;
+
+        private Node.Property[] properties;
+
+        // br - Add a line break
+        public boolean lineBreak;
+        // p - Add a paragraph break
+        public boolean parBreak;
+        // tab - Add a tab stop (handy for constructing forms with labels followed by fields)
+        public boolean tabStop;
+
+        // hfill - Extend component horizontally
+        // vfill - Extent component vertically (currently only one allowed)
+        public boolean hFill;
+        public boolean vFill;
+        
+        // left - Align following components to the left (default)
+        // center - Align following components horizontally centered
+        // right - Align following components to the right
+        public int hAlign = HALIGN_DEFAULT;
+
+        // vtop - Align following components vertically top aligned
+        // vcenter - Align following components vertically centered (default) 
+        public int vAlign = VALIGN_DEFAULT;
+
+        /**
+         * Creates a new instance of RiverLayoutSupportConstraints
+         */
+        public RiverLayoutSupportConstraints() {
+        }
+
+        public RiverLayoutSupportConstraints(RiverLayoutSupportConstraints prototype) {
+            this (prototype.lineBreak, prototype.parBreak, prototype.tabStop,
+                    prototype.hFill, prototype.vFill, prototype.hAlign, prototype.vAlign);
+        }
+
+        public RiverLayoutSupportConstraints(boolean lineBreak, boolean parBreak,
+                boolean tabStop, boolean hFill, boolean vFill, int hAlign, int vAlign) {
+            this.lineBreak = lineBreak;
+            this.parBreak = parBreak;
+            this.tabStop = tabStop;
+            this.hFill = hFill;
+            this.vFill = vFill;
+            this.hAlign = hAlign;
+            this.vAlign = vAlign;
+        }
+
+        public void copyFrom(RiverLayoutSupportConstraints prototype) {
+            this.lineBreak = prototype.lineBreak;
+            this.parBreak = prototype.parBreak;
+            this.tabStop = prototype.tabStop;
+            this.hFill = prototype.hFill;
+            this.vFill = prototype.vFill;
+            this.hAlign = prototype.hAlign;
+            this.vAlign = prototype.vAlign;
+        }
+
+        public String toString() {
+            StringBuffer sb = new StringBuffer(getClass().getName()).append("[");
+            sb.append("lineBreak=").append(lineBreak).append(",");
+            sb.append("parBreak=").append(parBreak).append(",");
+            sb.append("tabStop=").append(tabStop).append(",");
+            sb.append("hFill=").append(hFill).append(",");
+            sb.append("vFill=").append(vFill).append(",");
+            sb.append("hAlign=").append(hAlign).append(",");
+            sb.append("vAlign=").append(vAlign).append("]");
+            return sb.toString();
+        }
+
+        public Node.Property[] getProperties() {
+            if (properties == null) {
+                properties = createProperties();
+                reinstateProperties();
+            }
+            return properties;
+        }
+
+        public Object getConstraintsObject() {
+            return encodeConstraints(this);
+        }
+
+        public LayoutConstraints cloneConstraints() {
+            return new RiverLayoutSupportConstraints(this);
+        }
+
+        protected Node.Property[] createProperties() {
+            return new Node.Property[] {
+                new FormProperty("RiverLayoutConstraints.constraints", // NOI18N
+                        String.class,
+                        getBundle().getString("PROP_constraints"), // NOI18N
+                        getBundle().getString("HINT_constraints")) { // NOI18N
+                    
+                    public Object getTargetValue() {
+                        return encodeConstraints(RiverLayoutSupportConstraints.this);
+                    }
+                    public void setTargetValue(Object value) {
+                        copyFrom(decodeConstraints((String) value));
+                    }
+                    public void setPropertyContext(FormPropertyContext ctx) {
+                        // disabling this method due to limited persistence
+                        // capabilities (compatibility with previous versions)
+                    }
+                },
+
+                new FormProperty("RiverLayoutConstraints.lineBreak", // NOI18N
+                        Boolean.class,
+                        getBundle().getString("PROP_lineBreak"), // NOI18N
+                        getBundle().getString("HINT_lineBreak")) { // NOI18N
+                    
+                    public Object getTargetValue() {
+                        return new Boolean(lineBreak);
+                    }
+                    public void setTargetValue(Object value) {
+                        lineBreak = ((Boolean) value).booleanValue();
+                    }
+                    public void setPropertyContext(FormPropertyContext ctx) {
+                        // disabling this method due to limited persistence
+                        // capabilities (compatibility with previous versions)
+                    }
+                },
+
+                new FormProperty("RiverLayoutConstraints.parBreak", // NOI18N
+                        Boolean.class,
+                        getBundle().getString("PROP_parBreak"), // NOI18N
+                        getBundle().getString("HINT_parBreak")) { // NOI18N
+                    
+                    public Object getTargetValue() {
+                        return new Boolean(parBreak);
+                    }
+                    public void setTargetValue(Object value) {
+                        parBreak = ((Boolean) value).booleanValue();
+                    }
+                    public void setPropertyContext(FormPropertyContext ctx) {
+                        // disabling this method due to limited persistence
+                        // capabilities (compatibility with previous versions)
+                    }
+                },
+
+                new FormProperty("RiverLayoutConstraints.tabStop", // NOI18N
+                        Boolean.class,
+                        getBundle().getString("PROP_tabStop"), // NOI18N
+                        getBundle().getString("HINT_tabStop")) { // NOI18N
+                    
+                    public Object getTargetValue() {
+                        return new Boolean(tabStop);
+                    }
+                    public void setTargetValue(Object value) {
+                        tabStop = ((Boolean) value).booleanValue();
+                    }
+                    public void setPropertyContext(FormPropertyContext ctx) {
+                        // disabling this method due to limited persistence
+                        // capabilities (compatibility with previous versions)
+                    }
+                },
+
+                new FormProperty("RiverLayoutConstraints.hFill", // NOI18N
+                        Boolean.class,
+                        getBundle().getString("PROP_hFill"), // NOI18N
+                        getBundle().getString("HINT_hFill")){ // NOI18N
+                    
+                    public Object getTargetValue() {
+                        return new Boolean(hFill);
+                    }
+                    public void setTargetValue(Object value) {
+                        hFill = ((Boolean) value).booleanValue();
+                    }
+                    public void setPropertyContext(FormPropertyContext ctx) {
+                        // disabling this method due to limited persistence
+                        // capabilities (compatibility with previous versions)
+                    }
+                },
+
+                new FormProperty("RiverLayoutConstraints.vFill", // NOI18N
+                        Boolean.class,
+                        getBundle().getString("PROP_vFill"), // NOI18N
+                        getBundle().getString("HINT_vFill")){ // NOI18N
+                    
+                    public Object getTargetValue() {
+                        return new Boolean(vFill);
+                    }
+                    public void setTargetValue(Object value) {
+                        vFill = ((Boolean) value).booleanValue();
+                    }
+                    public void setPropertyContext(FormPropertyContext ctx) {
+                        // disabling this method due to limited persistence
+                        // capabilities (compatibility with previous versions)
+                    }
+                },
+
+                new FormProperty("RiverLayoutConstraints.hAlign", // NOI18N
+                        Integer.class,
+                        getBundle().getString("PROP_hAlign"), // NOI18N
+                        getBundle().getString("HINT_hAlign")) { // NOI18N
+                    
+                    public Object getTargetValue() {
+                        return new Integer(hAlign);
+                    }
+                    public void setTargetValue(Object value) {
+                        hAlign = ((Integer) value).intValue();
+                    }
+                    public void setPropertyContext(FormPropertyContext ctx) {
+                        // disabling this method due to limited persistence
+                        // capabilities (compatibility with previous versions)
+                    }
+                    public PropertyEditor getExpliciteEditor() {
+                        return new HAlignEditor();
+                    }
+                },
+
+                new FormProperty("RiverLayoutConstraints.vAlign", // NOI18N
+                        Integer.class,
+                        getBundle().getString("PROP_vAlign"), // NOI18N
+                        getBundle().getString("HINT_vAlign")) { // NOI18N
+                    
+                    public Object getTargetValue() {
+                        return new Integer(vAlign);
+                    }
+                    public void setTargetValue(Object value) {
+                        vAlign = ((Integer) value).intValue();
+                    }
+                    public void setPropertyContext(FormPropertyContext ctx) {
+                        // disabling this method due to limited persistence
+                        // capabilities (compatibility with previous versions)
+                    }
+                    public PropertyEditor getExpliciteEditor() {
+                        return new VAlignEditor();
+                    }
+                }
+            };
+        }
+
+        private void reinstateProperties() {
+            try {
+                for (int i = 0; i < properties.length; i++) {
+                    FormProperty prop = (FormProperty) properties[i];
+                    prop.reinstateProperty();
+                }
+            }
+            catch (IllegalAccessException e1) {} // should not happen
+            catch (java.lang.reflect.InvocationTargetException e2) {} // should not happen
+        }
+
+        protected final CodeExpression[] createPropertyExpressions(CodeStructure codeStructure) {
+            // first make sure properties are created...
+            getProperties();
+            
+            // ...then create code expressions based on the properties
+            CodeExpression expr = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[0]));
+            return new CodeExpression[]{expr};
+        }
+
+        protected final void readCodeExpression(CodeExpression constrExp, CodeGroup codeGroup) {
+            // first make sure properties are created...
+            getProperties();
+            FormCodeSupport.readPropertyExpression(constrExp, properties[0], false);
+        }
+
+    }
+
+}

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/HAlignEditor.java
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/HAlignEditor.java	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/HAlignEditor.java	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,70 @@
+/*
+ * HAlignEditor.java
+ *
+ * Created on December 30, 2005, 2:43 PM
+ */
+
+package de.berlios.nblayoutpack.riverlayout.editors;
+
+import java.beans.*;
+import java.io.IOException;
+
+import org.w3c.dom.*;
+
+import org.openide.explorer.propertysheet.editors.*;
+
+import org.netbeans.modules.form.*;
+
+import de.berlios.nblayoutpack.riverlayout.*;
+
+/**
+ *
+ * @author Illya Kysil
+ */
+public class HAlignEditor extends PropertyEditorSupport {
+
+    /** Creates a new instance of HAlignEditor */
+    public HAlignEditor() {
+    }
+
+    private final String[] tags = {
+        RiverLayoutSupport.getBundle().getString("VALUE_hAlign_CENTER"), // NOI18N
+        RiverLayoutSupport.getBundle().getString("VALUE_hAlign_DEFAULT"), // NOI18N
+        RiverLayoutSupport.getBundle().getString("VALUE_hAlign_LEFT"), // NOI18N
+        RiverLayoutSupport.getBundle().getString("VALUE_hAlign_RIGHT") // NOI18N
+    };
+
+    private final Integer[] values = {
+        new Integer(RiverLayoutSupport.RiverLayoutSupportConstraints.HALIGN_CENTER),
+        new Integer(RiverLayoutSupport.RiverLayoutSupportConstraints.HALIGN_DEFAULT),
+        new Integer(RiverLayoutSupport.RiverLayoutSupportConstraints.HALIGN_LEFT),
+        new Integer(RiverLayoutSupport.RiverLayoutSupportConstraints.HALIGN_RIGHT)
+    };
+
+    public String[] getTags() {
+        return tags;
+    }
+
+    public String getAsText() {
+        Object value = getValue();
+        for (int i = 0; i < values.length; i++) {
+            if (values[i].equals(value)) {
+                return tags[i];
+            }
+        }
+        return null;
+    }
+
+    public void setAsText(String str) {
+        for (int i=0; i < tags.length; i++) {
+            if (tags[i].equals(str)) {
+                setValue(values[i]);
+            }
+        }
+    }
+
+    public String getJavaInitializationString() {
+        return null;
+    }
+
+}

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/VAlignEditor.java
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/VAlignEditor.java	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/editors/VAlignEditor.java	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,68 @@
+/*
+ * VAlignEditor.java
+ *
+ * Created on December 30, 2005, 2:46 PM
+ */
+
+package de.berlios.nblayoutpack.riverlayout.editors;
+
+import java.beans.*;
+import java.io.IOException;
+
+import org.w3c.dom.*;
+
+import org.openide.explorer.propertysheet.editors.*;
+
+import org.netbeans.modules.form.*;
+
+import de.berlios.nblayoutpack.riverlayout.*;
+
+/**
+ *
+ * @author Illya Kysil
+ */
+public class VAlignEditor extends PropertyEditorSupport {
+
+    /** Creates a new instance of VAlignEditor */
+    public VAlignEditor() {
+    }
+
+    private final String[] tags = {
+        RiverLayoutSupport.getBundle().getString("VALUE_vAlign_CENTER"), // NOI18N
+        RiverLayoutSupport.getBundle().getString("VALUE_vAlign_DEFAULT"), // NOI18N
+        RiverLayoutSupport.getBundle().getString("VALUE_vAlign_TOP") // NOI18N
+    };
+
+    private final Integer[] values = {
+        new Integer(RiverLayoutSupport.RiverLayoutSupportConstraints.VALIGN_CENTER),
+        new Integer(RiverLayoutSupport.RiverLayoutSupportConstraints.VALIGN_DEFAULT),
+        new Integer(RiverLayoutSupport.RiverLayoutSupportConstraints.VALIGN_TOP)
+    };
+
+    public String[] getTags() {
+        return tags;
+    }
+
+    public String getAsText() {
+        Object value = getValue();
+        for (int i = 0; i < values.length; i++) {
+            if (values[i].equals(value)) {
+                return tags[i];
+            }
+        }
+        return null;
+    }
+
+    public void setAsText(String str) {
+        for (int i=0; i < tags.length; i++) {
+            if (tags[i].equals(str)) {
+                setValue(values[i]);
+            }
+        }
+    }
+
+    public String getJavaInitializationString() {
+        return null;
+    }
+
+}

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/RiverLayoutClasses.txt
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/RiverLayoutClasses.txt	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/RiverLayoutClasses.txt	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1 @@
+de.berlios.nblayoutpack.riverlayout.**
\ No newline at end of file

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/layer.xml
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/layer.xml	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/layer.xml	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.1//EN" "http://www.netbeans.org/dtds/filesystem-1_1.dtd">
+<filesystem>
+
+  <folder name="FormDesignerPalette">
+    <folder name="_Layouts_only_for_internal_use_">
+      <attr name="SystemFileSystem.localizingBundle" stringvalue="de.berlios.nblayoutpack.riverlayout.Bundle"/>
+      <file name="RiverLayout.palette_item" url="palette/RiverLayout.palette_item"/>
+    </folder>
+  </folder>
+
+  <!-- form class loader type registration -->
+  <folder name="org-netbeans-modules-form">
+    <folder name="classloader">
+      <folder name="system">
+        <file name="RiverLayoutClasses.txt" url="RiverLayoutClasses.txt" />
+      </folder>
+    </folder>
+  </folder>
+
+</filesystem>
+

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/palette/RiverLayout.palette_item
===================================================================
--- RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/palette/RiverLayout.palette_item	2005-12-30 14:31:11 UTC (rev 32)
+++ RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/nb5.x/palette/RiverLayout.palette_item	2005-12-30 14:41:50 UTC (rev 33)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<palette_item version="1.0">
+  <component classname="se.datadosen.component.RiverLayout" type="layout" />
+  <icon16 urlvalue="nbres:/de/berlios/nblayoutpack/riverlayout/resources/riverlayout16.png" />
+  <icon32 urlvalue="nbres:/de/berlios/nblayoutpack/riverlayout/resources/riverlayout32.png" />
+  <description localizing-bundle="de.berlios.nblayoutpack.riverlayout.Bundle"
+               display-name-key="Palette/Layouts/se-datadosen-component-RiverLayout.instance" />
+  <classpath>
+      <resource type="library" name="RiverLayout 1.1" />
+  </classpath>
+</palette_item>



From ikysil at berlios.de  Fri Dec 30 19:03:23 2005
From: ikysil at berlios.de (ikysil at BerliOS)
Date: Fri, 30 Dec 2005 19:03:23 +0100
Subject: [nblayoutpack-svn] r34 - in RiverLayout/trunk: . images nb5.0/nblayoutpack-riverlayout nb5.0/nblayoutpack-riverlayout-library nb5.0/nblayoutpack-riverlayout-suite src/de/berlios/nblayoutpack/riverlayout/resources
Message-ID: <200512301803.jBUI3NI2000841@sheep.berlios.de>

Author: ikysil
Date: 2005-12-30 19:03:12 +0100 (Fri, 30 Dec 2005)
New Revision: 34

Added:
   RiverLayout/trunk/images/
   RiverLayout/trunk/images/riverlayout16.xcf
   RiverLayout/trunk/images/riverlayout32.xcf
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/resources/riverlayout16.png
   RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/resources/riverlayout32.png
Modified:
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite/
   RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout/
Log:
[NEW]    RiverLayout: palette item images.
[CHANGE] RiverLayout: 'build' folders added to ignored list.

Added: RiverLayout/trunk/images/riverlayout16.xcf
===================================================================
(Binary files differ)


Property changes on: RiverLayout/trunk/images/riverlayout16.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: RiverLayout/trunk/images/riverlayout32.xcf
===================================================================
(Binary files differ)


Property changes on: RiverLayout/trunk/images/riverlayout32.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream


Property changes on: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout
___________________________________________________________________
Name: svn:ignore
   + build



Property changes on: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-library
___________________________________________________________________
Name: svn:ignore
   + build



Property changes on: RiverLayout/trunk/nb5.0/nblayoutpack-riverlayout-suite
___________________________________________________________________
Name: svn:ignore
   + build


Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/resources/riverlayout16.png
===================================================================
(Binary files differ)


Property changes on: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/resources/riverlayout16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/resources/riverlayout32.png
===================================================================
(Binary files differ)


Property changes on: RiverLayout/trunk/src/de/berlios/nblayoutpack/riverlayout/resources/riverlayout32.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



