From ikysil at sheep.berlios.de  Wed May 25 08:51:46 2005
From: ikysil at sheep.berlios.de (Illya Kysil at BerliOS)
Date: Wed, 25 May 2005 08:51:46 +0200
Subject: [nblayoutpack-svn] r2 - / FormLayout FormLayout/trunk FormLayout/trunk/lib FormLayout/trunk/nb3.6 FormLayout/trunk/nb4.0 FormLayout/trunk/nb4.0/nbbuild FormLayout/trunk/nb4.0/nbbuild/cluster-scripts FormLayout/trunk/nb4.0/nbbuild/lib FormLayout/trunk/nb4.0/nbbuild/misc FormLayout/trunk/nb4.0/nbbuild/module-scripts FormLayout/trunk/nb4.0/nblayoutpack FormLayout/trunk/nb4.0/nblayoutpack/nbproject FormLayout/trunk/nb4.1 FormLayout/trunk/nb4.1/nbbuild FormLayout/trunk/nb4.1/nbbuild/cluster-scripts FormLayout/trunk/nb4.1/nbbuild/lib FormLayout/trunk/nb4.1/nbbuild/misc FormLayout/trunk/nb4.1/nbbuild/module-scripts FormLayout/trunk/nb4.1/nblayoutpack FormLayout/trunk/nb4.1/nblayoutpack/nbproject FormLayout/trunk/nb4.1/nblayoutpack/nbproject/private FormLayout/trunk/src FormLayout/trunk/src/de FormLayout/trunk/src/de/berlios FormLayout/trunk/src/de/berlios/nblayoutpack FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter For!
 mLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6 FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0 FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/palette FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources FormLayout/trunk/testsrc
Message-ID: <200505250651.j4P6pkFS025783@sheep.berlios.de>

Author: ikysil
Date: 2005-05-25 08:51:45 +0200 (Wed, 25 May 2005)
New Revision: 2

Added:
   FormLayout/
   FormLayout/trunk/
   FormLayout/trunk/build.properties
   FormLayout/trunk/lib/
   FormLayout/trunk/lib/forms-1.0.5.jar
   FormLayout/trunk/license.txt
   FormLayout/trunk/nb3.6/
   FormLayout/trunk/nb3.6/build.xml
   FormLayout/trunk/nb3.6/manifest.mf
   FormLayout/trunk/nb4.0/
   FormLayout/trunk/nb4.0/nbbuild/
   FormLayout/trunk/nb4.0/nbbuild/CHANGES.txt
   FormLayout/trunk/nb4.0/nbbuild/README.txt
   FormLayout/trunk/nb4.0/nbbuild/build.xml
   FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/
   FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster-description.properties
   FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.properties
   FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.xml
   FormLayout/trunk/nb4.0/nbbuild/lib/
   FormLayout/trunk/nb4.0/nbbuild/lib/nbantext.jar
   FormLayout/trunk/nb4.0/nbbuild/misc/
   FormLayout/trunk/nb4.0/nbbuild/misc/addSerialVer
   FormLayout/trunk/nb4.0/nbbuild/misc/bundlecheck.pl
   FormLayout/trunk/nb4.0/nbbuild/misc/bundlewc.pl
   FormLayout/trunk/nb4.0/nbbuild/misc/i18ncheck.pl
   FormLayout/trunk/nb4.0/nbbuild/module-scripts/
   FormLayout/trunk/nb4.0/nbbuild/module-scripts/default-properties.xml
   FormLayout/trunk/nb4.0/nbbuild/module-scripts/default.xml
   FormLayout/trunk/nb4.0/nbbuild/module-scripts/directories.properties
   FormLayout/trunk/nb4.0/nbbuild/module-scripts/projectized.xml
   FormLayout/trunk/nb4.0/nbbuild/module-scripts/standard-jar-excludes.txt
   FormLayout/trunk/nb4.0/nbbuild/module-scripts/standard-nbm-license.txt
   FormLayout/trunk/nb4.0/nbbuild/moduledefs-tmp.properties
   FormLayout/trunk/nb4.0/nbbuild/modules.xml
   FormLayout/trunk/nb4.0/nbbuild/user.build.properties
   FormLayout/trunk/nb4.0/nbbuild/user.cluster.properties
   FormLayout/trunk/nb4.0/nblayoutpack/
   FormLayout/trunk/nb4.0/nblayoutpack/build.xml
   FormLayout/trunk/nb4.0/nblayoutpack/manifest.mf
   FormLayout/trunk/nb4.0/nblayoutpack/nbproject/
   FormLayout/trunk/nb4.0/nblayoutpack/nbproject/project.properties
   FormLayout/trunk/nb4.0/nblayoutpack/nbproject/project.xml
   FormLayout/trunk/nb4.1/
   FormLayout/trunk/nb4.1/nbbuild/
   FormLayout/trunk/nb4.1/nbbuild/CHANGES.txt
   FormLayout/trunk/nb4.1/nbbuild/README.txt
   FormLayout/trunk/nb4.1/nbbuild/build.xml
   FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/
   FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster-description.properties
   FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.properties
   FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.xml
   FormLayout/trunk/nb4.1/nbbuild/lib/
   FormLayout/trunk/nb4.1/nbbuild/lib/nbantext.jar
   FormLayout/trunk/nb4.1/nbbuild/misc/
   FormLayout/trunk/nb4.1/nbbuild/misc/addSerialVer
   FormLayout/trunk/nb4.1/nbbuild/misc/bundlecheck.pl
   FormLayout/trunk/nb4.1/nbbuild/misc/bundlewc.pl
   FormLayout/trunk/nb4.1/nbbuild/misc/i18ncheck.pl
   FormLayout/trunk/nb4.1/nbbuild/module-scripts/
   FormLayout/trunk/nb4.1/nbbuild/module-scripts/default-properties.xml
   FormLayout/trunk/nb4.1/nbbuild/module-scripts/default.xml
   FormLayout/trunk/nb4.1/nbbuild/module-scripts/directories.properties
   FormLayout/trunk/nb4.1/nbbuild/module-scripts/projectized.xml
   FormLayout/trunk/nb4.1/nbbuild/module-scripts/standard-jar-excludes.txt
   FormLayout/trunk/nb4.1/nbbuild/module-scripts/standard-nbm-license.txt
   FormLayout/trunk/nb4.1/nbbuild/moduledefs-tmp.properties
   FormLayout/trunk/nb4.1/nbbuild/modules.xml
   FormLayout/trunk/nb4.1/nbbuild/user.build.properties
   FormLayout/trunk/nb4.1/nbbuild/user.cluster.properties
   FormLayout/trunk/nb4.1/nblayoutpack/
   FormLayout/trunk/nb4.1/nblayoutpack/build.xml
   FormLayout/trunk/nb4.1/nblayoutpack/manifest.mf
   FormLayout/trunk/nb4.1/nblayoutpack/nbproject/
   FormLayout/trunk/nb4.1/nblayoutpack/nbproject/private/
   FormLayout/trunk/nb4.1/nblayoutpack/nbproject/private/private.xml
   FormLayout/trunk/nb4.1/nblayoutpack/nbproject/project.properties
   FormLayout/trunk/nb4.1/nblayoutpack/nbproject/project.xml
   FormLayout/trunk/src/
   FormLayout/trunk/src/de/
   FormLayout/trunk/src/de/berlios/
   FormLayout/trunk/src/de/berlios/nblayoutpack/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/Bundle.properties
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutIntrospector.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutModule.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/ConstraintsConverter.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/DefaultConstraintsConverter.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/AbstractColumnRowCustomizerContext.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/AbstractGroupCustomizerContext.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnCustomizerContext.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnGroupCustomizerContext.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizer.form
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizer.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizerContext.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizer.form
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizer.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizerContext.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/RowCustomizerContext.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/RowGroupCustomizerContext.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/ColumnEditor.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/ColumnGroupsEditor.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/GroupsEditor.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/HAlignEditor.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/RowEditor.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/RowGroupsEditor.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/VAlignEditor.java
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/formlayout.xml
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/layer.xml
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/formlayout.xml
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/layer.xml
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/palette/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/palette/FormLayout.palette_item
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/add.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/formlayout16.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/formlayout32.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/insertafter.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/insertbefore.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/mergedown.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/mergeup.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/movedown.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/moveup.png
   FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/remove.png
   FormLayout/trunk/testsrc/
   FormLayout/trunk/testsrc/ColumnRowCustomizerTest.java
   FormLayout/trunk/testsrc/Main.form
   FormLayout/trunk/testsrc/Main.java
Log:
[NEW] Initial source import.

Added: FormLayout/trunk/build.properties
===================================================================
--- FormLayout/trunk/build.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/build.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,5 @@
+package=de/berlios/nblayoutpack/formlayout
+name=nblayoutpack-formlayout
+src=src
+
+spec.version=2.0.0
\ No newline at end of file

Added: FormLayout/trunk/lib/forms-1.0.5.jar
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/lib/forms-1.0.5.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/license.txt
===================================================================
--- FormLayout/trunk/license.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/license.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,57 @@
+NetBeans Layout Pack License
+---------------------------------------
+
+Version: SPL 1.0
+
+NetBeans Layout Pack, the Module, is subject to the Sun Public License
+Version 1.0 (the "License"); you may not use this Module except
+in compliance with the License. You may obtain a copy of the License
+at http://www.sun.com/
+
+Software distributed under the License is distributed on an "AS IS" basis,
+WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+for the specific language governing rights and limitations under the
+License.
+
+The Initial Developer of the Module is Illya Kysil.
+Portions created by the Initial Developer are
+Copyright (C) 2004-2005 the Initial Developer.
+All Rights Reserved.
+
+
+Third party code Licenses
+---------------------------------------
+
+FormLayout License
+
+
+              The BSD License for the JGoodies Forms
+              ======================================
+
+Copyright (c) 2002-2004 JGoodies Karsten Lentzsch. All rights reserved.
+
+Redistribution and use in source and binary forms, with or without 
+modification, are permitted provided that the following conditions are met:
+
+ o Redistributions of source code must retain the above copyright notice, 
+   this list of conditions and the following disclaimer. 
+    
+ o Redistributions in binary form must reproduce the above copyright notice, 
+   this list of conditions and the following disclaimer in the documentation 
+   and/or other materials provided with the distribution. 
+    
+ o Neither the name of JGoodies Karsten Lentzsch nor the names of 
+   its contributors may be used to endorse or promote products derived 
+   from this software without specific prior written permission. 
+    
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
+PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
+CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
+EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
+PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
+OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
+WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
+OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
+EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Added: FormLayout/trunk/nb3.6/build.xml
===================================================================
--- FormLayout/trunk/nb3.6/build.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb3.6/build.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project name="nblayoutpack-tablelayout" basedir=".." default="all">
+
+    <!-- Sample Ant script to create a NetBeans module and test it. -->
+    <!-- Sample directory layout: -->
+    <!-- build.xml   - this file -->
+    <!-- src/        - sources (package root) -->
+    <!-- manifest.mf - module manifest -->
+    <!-- netbeans/   - build products (root matches NB installation root) -->
+    <!-- You will need to have src/ mounted in order for Java-related IDE functions to work properly. -->
+    <!-- You can do this most conveniently using the "View over a Filesystem" module. -->
+
+    <!-- Permit external customizations: -->
+    <property file="build.properties"/>
+
+    <property name="netbeans.home" location="t:/netbeans/3.6"/>
+    <!-- Set this according to your NB installation. -->
+    <property name="nb" location="${netbeans.home}"/>
+    <!-- This might instead be in ${netbeans.user}/ant/extra/nbantext.jar: -->
+    <property name="nbantext.jar" location="${nb}/ant/extra/nbantext.jar"/>
+    <!-- Adjust to be the name of your module for JARs etc.: -->
+    <property name="name" value="nblayoutpack"/>
+    <!-- Location of sources (classpath root): -->
+    <property name="src" location="${basedir}/src"/>
+    <property name="output" location="${basedir}/../output"/>
+    <!-- Package prefix of sources, e.g. "org/netbeans/modules/mymodule": -->
+    <property name="package" value="de/berlios/nblayoutpack/formlayout"/>
+
+  <target name="init" unless="buildnumber">
+    <tstamp>
+      <format property="buildnumber" pattern="yyyyMMdd.HHmm"/>
+      <format property="buildtimestamp" pattern="yyyy'/'MM'/'dd' 'HH':'mm':'ss"/>
+    </tstamp>
+    <property name="impl.version" value="${spec.version}.${buildnumber}"/>
+    <mkdir dir="${output}"/>
+  </target>
+
+    <target name="compile" depends="init">
+        <javac srcdir="${src}" destdir="${src}">
+            <include name="${package}/"/>
+            <classpath>
+                <!-- Whatever you need, based on your dependencies. -->
+                <pathelement location="${nb}/lib/openide.jar"/>
+                <pathelement location="${nb}/lib/openide-loaders.jar"/>
+                <pathelement location="${nb}/modules/form.jar"/>
+                <pathelement location="lib/forms-1.0.5.jar"/>
+            </classpath>
+        </javac>
+    </target>
+
+    <target name="jars" depends="compile">
+        <mkdir dir="${output}/netbeans/modules"/>
+        <jar jarfile="${output}/netbeans/modules/${name}.jar" manifest="nb3.6/manifest.mf" compress="true">
+            <manifest>
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${src}">
+                <include name="${package}/"/>
+                <exclude name="**/*.java"/>
+                <exclude name="**/*.form"/>
+                <exclude name="**/.nbattrs"/>
+            </fileset>
+        </jar>
+    </target>
+
+    <target name="all" depends="clean,jars" description="Build the module.">
+      <mkdir dir="${output}/netbeans/modules/ext/nblayoutpack"/>
+      <copy todir="${output}/netbeans/modules/ext/nblayoutpack">
+        <fileset dir="lib">
+          <include name="*.jar"/>
+        </fileset>
+      </copy>
+    </target>
+
+    <!-- This target will only work *inside* the IDE! -->
+    <target name="reload" depends="all" description="Test the module inside the running IDE.">
+<!--
+        <nbinstaller module="netbeans/modules/${name}.jar" action="reinstall"/>
+-->
+        <!-- If you have some Class-Path extensions, you might want to test changes to these as well. -->
+        <!-- To do so, try: -->
+      <mkdir dir="${output}/reload"/>
+      <zip zipfile="${output}/reload/${name}.jar" compress="true">
+        <zipfileset src="${output}/netbeans/modules/${name}.jar"/>
+        <zipfileset src="${output}/netbeans/modules/ext/nblayoutpack/forms-1.0.5.jar">
+          <exclude name="META-INF/MANIFEST.MF"/>
+        </zipfileset>
+      </zip>
+      <nbinstaller module="${output}/reload/${name}.jar" action="reinstall"/>
+    </target>
+
+    <target name="nbm" depends="all" description="Prepare the module for distribution via Auto Update.">
+        <taskdef name="makenbm" classname="org.netbeans.nbbuild.MakeNBM" classpath="${nbantext.jar}"/>
+        <makenbm file="${output}/${name}-nb3.6-${impl.version}.nbm"
+                 topdir="${output}"
+                 module="${output}/netbeans/modules/${name}.jar"
+                 needsrestart="false"
+                 homepage="http://nblayoutpack.berlios.de/"
+                 distribution="http://nblayoutpack.berlios.de/">
+          <license file="license.txt"/>
+        </makenbm>
+    </target>
+
+    <target name="clean" description="Clean all build products.">
+        <delete>
+            <fileset dir="${src}">
+                <include name="${package}/*.class"/>
+            </fileset>
+        </delete>
+        <delete dir="${output}"/>
+    </target>
+
+</project>

Added: FormLayout/trunk/nb3.6/manifest.mf
===================================================================
--- FormLayout/trunk/nb3.6/manifest.mf	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb3.6/manifest.mf	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,7 @@
+Manifest-Version: 1.0
+OpenIDE-Module: de.berlios.nblayoutpack.formlayout
+OpenIDE-Module-Localizing-Bundle: de/berlios/nblayoutpack/formlayout/Bundle.properties
+OpenIDE-Module-Layer: de/berlios/nblayoutpack/formlayout/nb3.6/layer.xml
+OpenIDE-Module-Install: de/berlios/nblayoutpack/formlayout/FormLayoutModule.class
+OpenIDE-Module-Module-Dependencies: org.netbeans.modules.form/2
+Class-Path: ext/nblayoutpack/forms-1.0.5.jar

Added: FormLayout/trunk/nb4.0/nbbuild/CHANGES.txt
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/CHANGES.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/CHANGES.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,25 @@
+version 3
+======================
+1. removed apisupport modules that were added in version 2.  The patches have since been merged into
+the official sources.
+
+2. updated netbeans module definitions
+
+3. merged changes to projectized.xml
+
+
+version 2
+======================
+1. added modules for working with harness from within netbeans:
+    utilities/group
+    apisupport
+    apisupport/lite
+    apisupport/project
+
+Note: the first 3 are basically just copies from the netbeans source tree, and are only included here because they don't appear on the Update Center.  apisupport/project is modified to work with this harness instead of the setup in the official netbeans source tree.  apisupport/ant should be obtained from the update center.
+
+2. removed dependency on NETBEANS_HOME environment variable.  It's now specified as the netbeans.dest.dir property in user.build.properties (or site.build.properties)
+
+3. removed bootstrap target.  I now just include the nbantext.jar generated by the current netbeans source tree.
+
+4. fixed a few minor bugs

Added: FormLayout/trunk/nb4.0/nbbuild/README.txt
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/README.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/README.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,69 @@
+Netbeans Cluster Build Harness
+Author: Rich Unger
+Version: 3
+
+
+Getting Started:
+
+1. Set netbeans.dest.dir in user.build.properties to the location of your binary netbeans installation
+2. Give your cluster a name in user.build.properties
+3. Define the contents of your cluster in user.cluster.properties
+4. Add entries for your modules in modules.xml
+
+Shouldn't need to edit anything in folders underneath nbbuild/
+
+Use the snipe module as a model for your own modules.
+
+===========================================
+What is a cluster?
+
+Starting with Netbeans 4.0, the file layout of a Netbeans installation has changed to:
+
+NETBEANS_HOME
+  bin
+  conf
+  etc
+  cluster_one
+    modules
+    config
+    update_tracking
+  cluster_two
+    modules
+    config
+    update_tracking
+  cluster_three
+    modules
+    config
+    update_tracking
+
+Using this layout, a cluster can be packaged by itself, as a (xpi | rpm | deb | pkg | zip | tar.gz) and be installed separately from the Netbeans platform.
+
+A cluster has NO runtime significance.  A module doesn't care if it happens to live in cluster_one, cluster_two, or cluster_three, even if modules it depends on are in another cluster.  A cluster is merely a packaging convenience.
+
+When netbeans is launched, it needs to be told which clusters to activate.  The bin/netbeans.exe launcher, by default, activates the 'platform4', 'ide4', 'nb4.0', and 'extra' clusters.  Others can be specified in conf/netbeans.conf.
+
+This only works if you have the full IDE, though.  If you're building an app on the platform, you would distribute (with your cluster) a separate launch script or compiled executable which would call platform4/lib/nbexec.exe and pass it a list of clusters.
+
+===========================================
+
+About the included module:
+
+snipe: This is a real bare-bones module that edits a fictional file type.  It's meant to show how to construct a module and perform several common integration tasks.  I attempted to include as many helpful comments in the code as possible, so it would be useful as a tutorial.
+
+===========================================
+
+Using the harness from within NetBeans:
+
+You need the "Netbeans Module Projects" module, from the Update Center.  Alternatively you can build this module from the netbeans source tree.  It is located there under apisupport/project.  It has a few other dependencies, so the best way to build it is to run "ant all-apisupport" from the nbbuild/ directory in the netbeans tree.
+
+===========================================
+
+Unfinished Business:
+
+1. I'd like to add a target for generating launchers (i.e. ${netbeans.dest.dir}/bin/mycluster.exe, and analogous unix/OSX shell script).  However, as of right now I can't figure out how to pass absolute paths to the platform launcher in platform4/lib/nbexec (the --clusters argument requires absolute paths to the clusters).  The tryme and sanity-test tasks get around this by using the ${netbeans.dest.dir} variable that these scripts require to be set.  However, that should only be a requirement for a development box.  It shouldn't need to be required of your users.
+
+2. The next phase is to create a real UI/functional spec to support both the Sun netbeans developers and the external platform users, and evolve this harness to support that spec.  Discussion is currently happening on the nbdev list.
+
+===========================================
+
+Suggestions are welcome.  Questions to dev at openide.netbeans.org please.

Added: FormLayout/trunk/nb4.0/nbbuild/build.xml
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/build.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/build.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="nbbuild" default="all" basedir=".">
+  <import file="cluster-scripts/cluster.xml"/>
+
+  <target name="all" depends="netbeans-all" description="Build all the nbms in the cluster."/>
+
+  <!-- inherited targets -->
+  <!--
+  compile-all: compiles all your modules
+  jar-all: creates module jars for all your modules
+  netbeans-all: installs all your modules to $NETBEANS_HOME
+  nbm-all: makes NBM files of all your modules, puts them in nbbuild/nbms/
+  javadoc-all: generates javadocs for all your modules
+  test-all: runs junit tests for all your modules:
+  clean-all: runs 'clean' in all your modules
+  clean: same as clean-all
+  real-clean: cleans up everything in nbbuild/, as well as clean-all
+  cluster-zip: Zips up the whole cluster (after building with netbeans-all) into nbbuild/build/
+  sanity-check: Builds all modules, then starts netbeans for a brief period, then shuts down
+                (Useful for automated builds)
+  tryme: Builds all modules, then starts netbeans, optionally in debug mode
+  tryme-debg: forced debug mode with the tryme target
+  -->
+
+  <!-- Add your own stuff here ... -->
+
+</project>

Added: FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster-description.properties
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster-description.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster-description.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,40 @@
+nb.cluster.platform.pkg.filename=platform4
+nb.cluster.platform.extra.pkg.filename=platform4
+nb.cluster.platform.pkg.name=NetBeans 4 platform cluster
+nb.cluster.platform.pkg.version=4.0
+nb.cluster.platform.pkg.desc=NetBeans platform technology
+nb.cluster.platform.pkg.vendor=Sun Microsystems, Inc.
+nb.cluster.platform.pkg.email=
+
+nb.cluster.platform.pkg.svr4.pkg=SUNWnb4pf
+nb.cluster.platform.pkg.svr4.maxinst=1000
+nb.cluster.platform.pkg.svr4.sunw_pkgvers=1.0
+nb.cluster.platform.pkg.svr4.hotline=Please contact your local service provider
+nb.cluster.platform.pkg.svr4.classes=none
+nb.cluster.platform.pkg.svr4.basedir=/opt/netbeans
+nb.cluster.platform.pkg.svr4.pkginst=platform4
+nb.cluster.platform.pkg.svr4.category=application
+
+nb.cluster.platform.pkg.rpm.name=nb-platform
+nb.cluster.platform.pkg.rpm.requires=javahelp > 1.4
+nb.cluster.platform.pkg.rpm.group=Applications
+nb.cluster.platform.pkg.rpm.url=http://www.sun.com/
+nb.cluster.platform.pkg.rpm.copyright=commercial
+nb.cluster.platform.pkg.rpm.map=/opt/sun/netbeans
+nb.cluster.platform.pkg.rpm.prefix=/opt
+
+nb.cluster.nb.pkg.filename=nb4.0
+nb.cluster.ide.extra.pkg.filename=ide4-extra
+nb.cluster.ide.pkg.filename=ide4
+nb.pkg.idesupport.pkg.filename=idesupport4
+nb.pkg.ideextensions.pkg.filename=ideextensions4
+nb.pkg.javarefactoring.pkg.filename=javarefactoring4
+nb.pkg.webapp.pkg.filename=webapp4
+nb.pkg.ide.pkg.filename=ide4
+nb.pkg.nb.pkg.filename=nb4
+nb.features.basic.pkg.filename=features-basic4
+nb.features.desktop.pkg.filename=features-desktop4
+nb.features.ideplugin.pkg.filename=features-ideplugin4
+nb.features.web.pkg.filename=features-web4
+nb.pkg.testtools.pkg.filename=testtools4
+nb.pkg.mdr.pkg.filename=mdr4

Added: FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.properties
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,223 @@
+clusters.prefix=libnb
+
+local.config.tasklist4barracuda=\
+        tasklist/api, \
+        tasklist/core, \
+        tasklist/suggestions, \
+        tasklist/docscan
+
+local.config.tasklist4barracuda_auc=\
+        tasklist/copyright, \
+        tasklist/suggestions/ui, \
+        tasklist/usertasks, \
+        tasklist/javaparser, \
+        tasklist/javadoc, \
+        tasklist/compiler, \
+        tasklist/pmd, \
+        tasklist/checkstyle, \
+        tasklist/editor, \
+        tasklist/bugs
+
+local.config.libs=libs/xerces, \
+        libs/j2eeeditor, \
+        libs/commons_logging
+
+local.config.xml=xml/api, \
+        xml/tax, \
+        xml/core, \
+        xml/catalog, \
+        xml/tools, \
+        xml/text-edit, \
+        xml/css, \
+        xml/xsl, \
+        xml/schema
+
+local.config.vcsprofiles=vcsgeneric/profiles/cvsprofiles, \
+        vcsgeneric/profiles/pvcs, \
+        vcsgeneric/profiles/vss
+
+clusters.extra.list=nb.pkg.testtools,\
+        nb.cluster.platform.extra, \
+	nb.cluster.ide.extra
+
+#List of clusters in standard build
+nb.clusters.list=nb.cluster.platform, \
+        nb.cluster.ide, \
+        nb.cluster.nb
+
+clusters.list= \
+        ${nb.clusters.list}, \
+        ${clusters.extra.list}, \
+        ${user.cluster}
+
+nb.cluster.platform.extra.dir=platform4
+nb.cluster.platform.extra.depends=nb.cluster.platform
+nb.cluster.platform.extra=openide/util, \
+        openide/actions, \
+        openide/awt, \
+        openide/dialogs, \
+        openide/nodes, \
+        openide/explorer, \
+        openide/fs, \
+        openide/text, \
+        openide/windows
+
+nb.cluster.platform.dir=platform4
+nb.cluster.platform.depends=
+nb.cluster.platform=core, \
+        openide, \
+        openide/loaders, \
+        openide/io, \
+        openide/execution, \
+        openide/masterfs, \
+        core/bootstrap, \
+        core/output2, \
+        core/settings, \
+        core/javahelp, \
+        core/execution, \
+        core/ui, \
+        core/swing/plaf, \
+        core/swing/tabcontrol, \
+        core/windows, \
+        core/multiview, \
+        autoupdate, \
+        projects/queries
+
+nb.pkg.idesupport=\
+        debuggercore/api, \
+        debuggercore/viewmodel, \
+        debuggercore, \
+        diff, \
+        editor, \
+        editor/lib, \
+        editor/fold, \
+        editor/util, \
+        vcscore, \
+        javacvs/libmodule, \
+        ${local.config.vcsprofiles}, \
+        ${local.config.libs}, \
+        projects/projectapi, \
+        projects/projectuiapi, \
+        projects/projectui, \
+        projects/libraries, \
+        core/ide, \
+        core/favorites, \
+        vcsgeneric
+
+nb.pkg.ideextensions=\
+        properties, \
+        utilities, \
+        utilities/project, \
+        i18n, \
+        i18n/form, \
+        image, \
+        html, \
+        usersguide, \
+	usersguide/j2seexamples, \
+        openidex, \
+        ${local.config.tasklist4barracuda}, \
+        ${local.config.xml}
+
+nb.pkg.javarefactoring=\
+        classfile, \
+        clazz, \
+        java/srcmodel, \
+        java/api, \
+        java/javacore, \
+        java/javamodel, \
+        java, \
+        java/j2seproject, \
+        java/j2seplatform, \
+        java/parser, \
+        java/platform, \
+        java/project, \
+        refactoring, \
+        junit, \
+        javadoc, \
+        beans, \
+        debuggerjpda/api, \
+        debuggerjpda, \
+        debuggerjpda/ui, \
+        debuggerjpda/ant, \
+        ant, \
+        ant/project, \
+        ant/freeform, \
+        ant/grammar, \
+        ant/browsetask, \
+        apisupport/ant, \
+        apisupport/project, \
+        form
+
+nb.pkg.webapp=\
+        j2eeserver, \
+        j2eeserver/j2eeapis, \
+        j2eeserver/ant, \
+        schema2beans/rt, \
+        tomcatint/tomcat5, \
+        monitor, \
+        httpserver, \
+        httpserver/servletapi, \
+        db, \
+        extbrowser, \
+        web/servletapi23, \
+        web/servletapi24, \
+        web/core, \
+        web/project, \
+        web/webapi, \
+        web/ddapi, \
+        web/jspdebug, \
+        web/jspparser, \
+        web/jspsyntax, \
+        web/jstl11
+
+
+nb.pkg.ide=
+
+# special cluster for NetBeans IDE only extensions
+nb.pkg.nb=\
+        ide/branding, \
+        ide/updatecenters, \
+        ide/welcome, \
+        ide/launcher/upgrade, \
+        ide/applemenu, \
+        tomcatint/tomcat5/bundled, \
+        web/examples
+
+nb.pkg.testtools.dir=testtools
+nb.pkg.testtools.depends=nb.cluster.platform
+nb.pkg.testtools=jellytools, \
+        jemmy/idemodule, \
+        jemmysupport, \
+        xtest, \
+        xtest/nbjunit
+
+nb.cluster.ide.dir=ide4
+nb.cluster.ide.depends=nb.cluster.platform,nb.cluster.ide.extra
+nb.cluster.ide= \
+        ${nb.pkg.idesupport},\
+        ${nb.pkg.ideextensions},\
+        ${nb.pkg.javarefactoring},\
+        ${nb.pkg.webapp},\
+        ${nb.pkg.mdr}
+
+nb.cluster.ide.extra.depends=nb.cluster.platform
+nb.cluster.ide.extra.dir=extra
+nb.cluster.ide.extra= \
+        schema2beans/dev
+
+
+nb.cluster.nb.dir=nb4.0
+nb.cluster.nb.depends=nb.cluster.ide
+nb.cluster.nb= \
+        ${nb.pkg.ide},\
+        ${nb.pkg.nb}
+
+nb.pkg.mdr=mdr,\
+               mdr/module,\
+               mdr/nbjmiutils,\
+               mdr/jmiutils,\
+               mdr/mdrapi,\
+               mdr/jmi,\
+               mdr/mof, \
+               mdr/lib
+nb.pkg.mdr.dir=ide4

Added: FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.xml
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,230 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="cluster" default="tryme" basedir="..">
+  <import file="../module-scripts/default.xml"/>
+
+  <target name="check-for-jdk-1.4">
+    <available property="have-jdk-1.4" classname="java.lang.CharSequence"/>
+  </target>
+  <target name="assure-jdk-1.4" depends="check-for-jdk-1.4" unless="have-jdk-1.4">
+    <fail>You need JDK 1.4 or higher to build NetBeans.</fail>
+  </target>
+
+  <target name="init-module-list" depends="assure-jdk-1.4">
+    <!-- Define modules. -->
+    <!-- The following is not permitted by Ant: -->
+    <!-- <property name="modules" value="${config.modules.${clustername}}"/> -->
+    <!-- So this is a little trick to do it anyway. -->
+    <echo file="moduledefs-tmp.properties">modules=$${cluster.${clustername}}</echo>
+    <property file="moduledefs-tmp.properties"/>
+    <property name="allmodules" value="${modules}"/>
+  </target>
+
+  <target name="set-buildnumber" unless="buildnumber">
+    <tstamp>
+    	<format property="buildnumber" pattern="yyMMdd"/>
+    </tstamp>
+  </target>
+
+  <target name="init" depends="default.init,init-module-list,set-buildnumber">
+    <taskdef name="for-each" classname="org.netbeans.nbbuild.ForEach" classpath="lib/nbantext.jar"/>
+
+    <!-- Overridable. Note: need not necessarily be a number at all): -->
+    <property name="buildnum" value="dev-${buildnumber}"/>
+    <property name="sanitystart.args" value="-J-Dnetbeans.close=true ${sanitystart.args.additional}"/>
+  </target>
+
+  <macrodef name="resolve">
+    <attribute name="name"/>
+    <attribute name="property"/>
+    <sequential>
+      <property name="@{name}" value="${@{property}}"/>
+    </sequential>
+  </macrodef>
+
+  <target name="cluster-zip" depends="netbeans-all">
+    <taskdef name="setclusterpatternset" classname="org.netbeans.nbbuild.SetClusterPatternSet" classpath="lib/nbantext.jar"/>
+    <taskdef name="setcluster" classname="org.netbeans.nbbuild.SetCluster" classpath="lib/nbantext.jar"/>
+    <loadproperties srcFile="user.cluster.properties" />
+    <loadproperties srcFile="cluster-scripts/cluster.properties" />
+    <loadproperties srcFile="cluster-scripts/cluster-description.properties" />
+    <loadproperties srcFile="module-scripts/directories.properties" />
+    <setcluster cluster="${user.cluster}" name="one.cluster.dir" />
+    
+    <setclusterpatternset cluster="${user.cluster}" name="${user.cluster}.files" trackingpath="${netbeans.dest.dir}" clusterdir="${one.cluster.dir}"/>
+    
+    <property name="zipcluster.file" value="${user.cluster}"/>
+    <mkdir dir="${netbeans.build.dir}/zips"/>
+    <zip destfile="${netbeans.build.dir}/zips/${zipcluster.file}-${buildnum}.zip" update="true" duplicate="preserve">
+      <zipfileset dir="${netbeans.dest.dir}" filemode="755">
+        <include name="${one.cluster.dir}/${nb.bin.dir}/nbexec"/>
+      </zipfileset>
+      <zipfileset dir="${netbeans.dest.dir}">
+        <patternset refID="${user.cluster}.files"/>
+      </zipfileset>
+    </zip>
+  </target>
+
+  <target name="sanity-check" depends="testuserdir-delete,sanity-start" description="Test whether the build can start up without problems."/>
+  <target name="testuserdir-delete" depends="init">
+    <delete dir="${test.user.dir}"/>
+  </target>
+  <target name="sanity-start" depends="netbeans-all">
+    <mkdir dir="${test.user.dir}"/>
+    <echo>Starting the IDE as a sanity check...</echo>
+    <!-- XXX better would be to scan start log for stacktraces and just show those; -->
+    <!-- possibly after filtering for duplicates or something like this. -->
+    <!-- Timeout is ten minutes; should be enough for valid start, while preventing -->
+    <!-- a deadlock from hanging an automated build: -->
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes" timeout="600000">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${sanitystart.args}"/>
+    </exec>
+    <exec os="Linux SunOS Solaris Mac OS X" dir="." executable="sh" failonerror="yes" timeout="600000">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${sanitystart.args}"/>
+    </exec>
+    <echo>Finished starting the IDE, pay attention to any reported errors.</echo>
+  </target>
+
+  <target name="check-for-build"  >
+    <available property="have-build" file="${netbeans.dest.dir}/bin/netbeans"/>
+  </target>
+
+  <target name="tryme" depends="netbeans-all,tryme-debug,tryme-run"
+          description="Try running the IDE interactively (build it first if needed).
+It is possible to use -Ddebug.port=3234 -Ddebug.pause=y to start the system in debug mode" 
+   />
+          
+          
+  <target name="tryme-run" depends="init" unless="debug.port" >
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+    <exec os="Linux SunOS Solaris" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+    <exec os="Mac OS X" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="/Library/Java/Home"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+  </target>
+  
+  <target name="tryme-debug" depends="init" if="debug.port" >
+    <property name="debug.pause" value="n" />
+  
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+      <arg line="-J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,suspend=${debug.pause},server=y,address=${debug.port}" />
+    </exec>
+    <exec os="Linux SunOS Solaris Mac OS X" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+      <arg line="-J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,suspend=${debug.pause},server=y,address=${debug.port}" />
+    </exec>
+  </target>
+
+  <target name="real-clean" depends="clean,testuserdir-delete"
+          description="Clean everything possible.">
+    <echo message="Cleaning old builds..."/>
+
+    <!-- This step must be last: -->
+    <echo message="Cleaning NetBeans-specific Ant extensions..."/>
+    <delete file="moduledefs-tmp.properties"/>
+    <delete dir="nbms" failonerror="false"/>
+  </target>
+  
+  <target name="clean" depends="clean-all"
+          description="Run 'clean' on all the modules in the cluster.">
+    <echo message="Run `ant real-clean' if desired."/>
+  </target>
+
+
+  <!-- Delegating targets -->
+
+  <target name="compile-all" depends="init">
+      <for-each startdir=".." target="compile" locations="${allmodules}"/>
+  </target>
+
+  <target name="jar-all" depends="init">
+      <for-each startdir=".." target="jar" locations="${allmodules}"/>
+  </target>
+
+  <target name="netbeans-all" depends="init">
+      <for-each startdir=".." target="netbeans" locations="${allmodules}"/>
+  </target>
+
+  <target name="javadoc-all" depends="init">
+      <for-each startdir=".." target="javadoc" locations="${allmodules}"/>
+  </target>
+
+  <target name="test-all" depends="init">
+      <for-each startdir=".." target="test" locations="${allmodules}"/>
+  </target>
+
+  <target name="clean-all" depends="init">
+      <for-each startdir=".." target="clean" locations="${allmodules}"/>
+  </target>
+
+  <!-- Puts all the nbm's in nbbuild/nbms/ -->
+  <target name="nbm-all" depends="init">
+      <mkdir dir="nbms"/>
+      <property name="nbm.target.dir" location="nbms"/>
+      <for-each startdir=".." target="nbm" locations="${allmodules}"/>
+  </target>
+
+</project>

Added: FormLayout/trunk/nb4.0/nbbuild/lib/nbantext.jar
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/nb4.0/nbbuild/lib/nbantext.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/nb4.0/nbbuild/misc/addSerialVer
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/misc/addSerialVer	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/misc/addSerialVer	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,109 @@
+#
+#
+#
+if test "$#" -eq "0"; then
+  LIST=*
+else
+  LIST=$*
+fi
+
+# runs serialver and waits 3s for it to finish
+# then it kills it
+runSerialVer () {
+  # computes the serializable value and throws a signal
+  java -ms8m sun.tools.serialver.SerialVer $1 2>/dev/null&
+  SVPID=$!
+  
+  # sleep 3s and inform parent that time is up
+  sleep 3 && kill $SVPID 2>/dev/null &
+  SLPID=$!
+
+  # waits till the serial version number is computed
+  wait $SVPID
+
+  # kill timer
+  kill $SLPID 2>/dev/null
+}
+
+
+# compute serial version UID for a class,
+# if not serializable empty string is returned
+# otherwise string for initialization is given back
+computeUID () {
+  RES=`runSerialVer $1`
+  expr "$RES" : "$1: *\(.*;\)" 
+}
+
+AlphaNum="[A-Za-z\.0-9/]"
+
+
+find $LIST -name "*.class" | while read ClassFile; do
+  echo Working on $ClassFile
+
+  # 0 if not inner class 
+  InnerClass=`expr index $ClassFile \$`
+
+  Class=`tr "/" "." <<KONEC
+$ClassFile
+KONEC
+`
+  Class=`basename $Class ".class"`
+  # name of the class (if innner than name of the inner class)
+  ClassName=`tr "$." "//" <<KONEC
+$Class
+KONEC
+`
+  ClassName=`basename $ClassName`
+
+
+  # test if it is not anonymous innerclass
+  if test "$ClassName" -ge "0" 2>/dev/null; then
+    echo Anonymous inner class $Class
+  else
+    JavaFile=`expr $ClassFile : "\($AlphaNum*\).*\.class"`
+    JavaFile=$JavaFile".java"
+  
+    # compute UID for Class
+    uid=`computeUID $Class`
+    if test -n "$uid"; then
+      # there should be the UID
+      # try to see if it is there
+      if ! grep "$uid" $JavaFile >/dev/null; then
+        STOP=""
+        if ! test "0" -eq "$InnerClass"; then
+          # if inner class, test wheter it is static
+          if ! grep "static.*class *$ClassName" $JavaFile >/dev/null; then
+            echo Is not static inner class
+            STOP=true
+          fi
+        fi
+
+        if test -z "$STOP"; then
+          # we have to add it
+          echo Need to add the serialVersionUID
+          sed -e "/ class *$ClassName/a\\
+          /** generated Serialized Version UID */\\
+          $uid" <$JavaFile >/tmp/keke
+          # compare files
+          if diff -q /tmp/keke $JavaFile >/dev/null; then
+            # are same
+            echo Error files /tmp/keke and $JavaFile are same
+            grep  "$ClassName" $JavaFile
+            exit 1
+          fi
+          # overrides the original
+          mv /tmp/keke $JavaFile
+          # updated file to list of files
+          echo $JavaFile >>updated
+          echo Successfully Updated.
+        fi  
+      else
+        echo serialVersionUID already there
+      fi
+    else
+      echo Is not serializable
+    fi
+  fi
+  
+  rm $ClassFile
+done

Added: FormLayout/trunk/nb4.0/nbbuild/misc/bundlecheck.pl
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/misc/bundlecheck.pl	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/misc/bundlecheck.pl	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,114 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+require 5.005;
+use File::Find;
+
+my @files = ();
+my $quiet = 0;
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-q] file | directory ...\n";
+}
+
+if ($ARGV[0] eq "-q") {
+    $quiet = 1;
+    shift @ARGV;
+}
+
+foreach my $name (@ARGV) {
+    if (-f $name) {
+	push @files, $name;
+    } elsif (-d $name) {
+        find(sub {
+                 if (-f && m,\.java$, || -f && m,\bBundle.properties$,) {
+                     push @files, $File::Find::name;
+                 }
+             },
+             $name);
+    }
+}
+
+#
+# read Bundle.properties
+#
+
+ at props = ();
+
+foreach $f (@files) {
+    next if $f !~ m,\bBundle.properties$,i;
+
+    print STDERR "*** $f\n" unless $quiet;
+    
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    @lines = split /\r\n|\n|\r/, $all;
+    for ($lineno = 0; $lineno <= $#lines; $lineno++) {
+	$_ = $lines[$lineno];
+        
+        next if /^\s*#/;
+        next if /^\s*$/;
+
+        if (m,^([^=]+)=(.*)$,) {
+            $k = $1;
+            $k =~ s,\\ , ,g;
+            push @props, { key => $k,
+                           file => $f,
+                           lineno => $lineno + 1,
+                           line => $_,
+                           used => 0
+                         };
+        }
+
+        while (m,\\$, && $lineno <= $#lines) {
+            $lineno++;
+            $_ = $lines[$lineno];
+        }
+    }
+}
+
+#
+# go through *.java
+#
+  
+  
+foreach $f (@files) {
+    next if $f =~ m,\bBundle.properties$,i;
+
+    print STDERR "*** $f\n" unless $quiet;
+    
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    foreach $p (@props) {
+        next if $p->{used} > 0;
+        $pat = $p->{key};
+        $pat = quotemeta $pat;
+        $p->{used}++ if $all =~ m,\"$pat\",;
+    }
+}
+
+foreach $p (@props) {
+    next if $p->{line} =~ m!/!; # probably a filename localization, not in Java code
+    next if $p->{line} =~ m!^OpenIDE-Module-!; # manifest localization, not in Java code
+    print "$p->{file}:$p->{lineno}: $p->{line}\n" if $p->{used} == 0;
+}

Added: FormLayout/trunk/nb4.0/nbbuild/misc/bundlewc.pl
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/misc/bundlewc.pl	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/misc/bundlewc.pl	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,52 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+$totalwc = 0;
+$totallc = 0;
+
+printf "%7s %5s File\n", "Strings", "Words";
+printf "%7s %5s %s\n", "-------", "-----", "-" x 40;
+
+foreach $f (@ARGV) {
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    @lines = split /\r|\n/, $all;
+    
+    $wc = 0;
+    $lc = 0;
+    
+    foreach (@lines) {
+        next if /^\s*#/;
+        next if /^\s*$/;
+
+        if (/^[^=]+=(.*)$/) {
+            $_ = $1;
+            s/^\s*//;
+            s/\s*$//;
+            @words = split /\s+/;
+            $wc += @words ;
+            $lc++;
+        }
+    }
+    
+    printf "%7d %5d %s\n", $lc, $wc, $f;
+    $totalwc += $wc;
+    $totallc += $lc;
+}
+
+printf "\n%7d %5d Total\n", $totallc, $totalwc;

Added: FormLayout/trunk/nb4.0/nbbuild/misc/i18ncheck.pl
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/misc/i18ncheck.pl	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/misc/i18ncheck.pl	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,201 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+#
+# i18ncheck.pl - checks java source for internationalizable strings
+#                not 100% foolproof !!
+#
+#
+require 5.005;
+use File::Find;
+
+my $fixmode = 0;
+my @files = ();
+my @modifiedfiles = ();
+my @lines = ();
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-f] file | directory ...\n";
+}
+
+if ($ARGV[0] eq "-f") {
+    $fixmode = 1;
+    shift @ARGV;
+}
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-f] file | directory ...\n";
+}
+
+$SIG{'INT'} = sub {
+    print_summary() if $fixmode;
+    exit 255;
+};
+  
+foreach my $name (@ARGV) {
+    if (-f $name) {
+	push @files, $name;
+    } elsif (-d $name) {
+        find(sub {
+                 if (-f && m,\.java$,) {
+                     push @files, $File::Find::name;
+                 }
+             },
+             $name);
+    }
+}
+
+foreach my $name (@files) {
+    checkfile($name);
+}
+
+print_summary() if $fixmode;
+exit 0;
+
+#
+# subroutines
+#
+
+sub checkfile {
+    my $fname = shift;
+    @lines = ();
+
+    if (! open(FH, "< $fname")) {
+	warn "cannot open file '$fname': $!";
+	return;
+    }
+    @lines = <FH>;
+    close FH;
+    
+    my $lineno = 1;
+    my $modified = 0;
+    
+LOOP:
+    while ($lineno <= $#lines) {
+	$_ = $lines[$lineno - 1];
+        
+        if (m,/\*,,) {
+            while ($lineno <= $#lines) {
+                $_ = $lines[$lineno - 1];
+                if (! m,\*/,) {
+                    $lineno++;
+                    next;
+                } else {
+                    last;
+                }
+            }
+        }
+
+        # skip line comment
+        if (m,(^ *//.*$),) {
+            $_ = $`;
+        }
+        
+        if (checkline($_)) {
+            if ($fixmode) {
+                print "$fname:$lineno:\n";
+                if (fixline($fname, $lineno)) {
+                    $modified = 1;
+                }
+            } else {
+                print "$fname:$lineno: $_";
+            }
+        }
+
+        $lineno++;
+    }
+
+
+    if ($fixmode && $modified) {
+        savefile($fname);
+        push @modifiedfiles, $fname;
+    }
+}
+
+sub fixline {
+    my $fname = shift;
+    my $lineno = shift;
+    my $answer;
+    
+    print "\n";
+    print "   " . $lines[$lineno - 4] if $lineno >= 4;
+    print "   " . $lines[$lineno - 3] if $lineno >= 3;
+    print "   " . $lines[$lineno - 2] if $lineno >= 2;
+    print " =>" . $lines[$lineno - 1] if $lineno >= 1;
+    print "   " . $lines[$lineno] if $lineno <= $#lines;;
+    print "   " . $lines[$lineno + 1] if $lineno + 1 <= $#lines;;
+    print "   " . $lines[$lineno + 2] if $lineno + 2 <= $#lines;;
+    print "\n";
+    
+    do {
+        print "** [M]ark this line with NOI18N -- [S]kip [m]: ";
+        flush;
+        $answer = <STDIN>;
+        chomp $answer;
+    } while (uc($answer) ne "M" && uc($answer) ne "S" && $answer ne "");
+
+    if (uc($answer) eq "S") {
+        return 0;
+    } else {
+        $lines[$lineno - 1] =~ s,\s*$,,;
+        $lines[$lineno - 1] = $lines[$lineno - 1] . " // NOI18N\n";
+        return 1;
+    }
+    
+}
+
+sub savefile {
+    my $fname = shift;
+
+    if (!rename $fname, "$fname.bak") {
+        warn "** Cannot create backup for $fname, changes have not been saved\n";
+        return;
+    }
+
+    if (! open(FH, "> $fname")) {
+        warn "** Cannot save changes in $fname\n";
+    }
+
+    print FH @lines;
+    close FH;
+}
+
+sub checkline {
+    shift;
+
+    return (! m,NOI18N,
+            && ! m,getString\s*\(,
+            && ! m,System\. ?err\. ?print,
+            && ! m,getProperty,
+            && ! m,getBoolean,
+            && ! m,NbBundle\. ?get(Message|LocalizedFile),
+            && ! m,\. ?log\s*\(,
+            && ! m,new HelpCtx\s*\(,
+            && ! m,new PropertyDescriptor\s*\(,
+            && ! m,setIconBase\s*\(,
+            && ! m,loadImage\s*\(,
+            && ! m,getResource(AsStream)?\s*\(,
+            && m,".+", 
+           ); 
+}
+
+sub print_summary {
+    if ($#modifiedfiles < 0) {
+        print "\n\n** No file has been modified\n";
+    } else {
+        print "\n\n** The following files have been modified:\n\n";
+        foreach my $fname (@modifiedfiles) {
+            print "      $fname\n";
+        }
+    }
+}

Added: FormLayout/trunk/nb4.0/nbbuild/module-scripts/default-properties.xml
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/module-scripts/default-properties.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/module-scripts/default-properties.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?> 
+<project name="default-properties" default="netbeans" basedir=".">
+  <dirname property="nb_all" file="${ant.file.default-properties}/../.."/>
+
+  <!-- 
+  Read user's settings 
+  Note: user/site combination is so that you can check site.build.properties
+  into your source tree for everyone to use, and user.build.properties can contain
+  properties specific to your personal setup.
+  -->
+  <property file="${nb_all}/nbbuild/user.build.properties"/>
+  <property file="${nb_all}/nbbuild/site.build.properties"/>
+
+  <property name="homepage.base" value="netbeans.org"/>
+  <property name="dist.base" value="www.netbeans.org/download/nbms/40"/>
+  <property name="license.file" location="${nb_all}/nbbuild/module-scripts/standard-nbm-license.txt"/>
+  <property name="nbm_alias" value="nb_ide"/>
+  <property name="build.sysclasspath" value="ignore"/>
+
+  <property name="user.clusters.list.file" location="${nb_all}/nbbuild/user.cluster.properties"/>
+  <property name="clusters.list.file" location="${nb_all}/nbbuild/cluster-scripts/cluster.properties"/>
+  <property name="netbeans.build.dir" location="${nb_all}/nbbuild/build"/>
+  <property name="moduleCluster.file" location="${netbeans.dest.dir}/moduleCluster.properties"/>
+  <property name="directoryList.file" location="${nb_all}/nbbuild/module-scripts/directories.properties"/>
+  <property name="modulesxml.file" location="${nb_all}/nbbuild/modules.xml"/>
+
+  <property file="${user.clusters.list.file}"/>
+  <property file="${clusters.list.file}"/>
+  <property file="${moduleCluster.file}"/>
+  <property file="${directoryList.file}"/>
+
+</project>

Added: FormLayout/trunk/nb4.0/nbbuild/module-scripts/default.xml
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/module-scripts/default.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/module-scripts/default.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,75 @@
+<project name="default" default="init" basedir=".">
+  <import file="default-properties.xml"/>
+
+  <target name="init-tasks" unless="tasks-already-set">
+    <taskdef name="jhindexer"
+         classname="org.netbeans.nbbuild.JHIndexer"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="makenbm"
+         classname="org.netbeans.nbbuild.MakeNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="genlist"
+         classname="org.netbeans.nbbuild.MakeListOfNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="setcluster"
+         classname="org.netbeans.nbbuild.SetCluster"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="getmodulename"
+         classname="org.netbeans.nbbuild.GetModuleName"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="createmodulexml"
+         classname="org.netbeans.nbbuild.CreateModuleXML"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locjar"
+         classname="org.netbeans.nbbuild.LocalizedJar"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locjhindexer"
+         classname="org.netbeans.nbbuild.LocJHIndexer"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locmakenbm"
+         classname="org.netbeans.nbbuild.LocMakeNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <property name="tasks-already-set" value="true"/>
+  </target>
+  
+  <target name="init" depends="init-tasks,setup-jdkhome">
+    <!-- Gets the module name -->
+    <getmodulename name="module.name" root="${nb_all}"/>
+    
+    <property name="cluster.dir.fallback" value="extra" />
+    <setcluster name="cluster.dir" module="${module.name}" list="${clusters.list}" defaultLocation="${cluster.dir.fallback}"/>
+
+    <!-- Creating the output directory -->
+    <mkdir dir="${netbeans.dest.dir}/${cluster.dir}"/>
+
+    <!-- Writing the module's cluster to property file -->
+    <propertyfile file="${moduleCluster.file}">
+      <entry  key="${module.name}.dir" value="$${netbeans.dest.dir}/${cluster.dir}"/>
+    </propertyfile>
+  </target>
+
+  <target name="setup-jdkhome-1">
+    <!-- Note: user-configured -Djavahome=... will always override this: -->
+    <property name="javahome" location="${java.home}"/>
+    <available property="javahome-valid" file="${javahome}/lib/tools.jar"/>
+    <available classname="com.apple.eawt.Application" property="is-mac"/>
+  </target>
+
+  <target name="setup-jdkhome-2" depends="setup-jdkhome-1" if="javahome-valid">
+    <property name="jdkhome" value="${javahome}"/>
+    <property name="jdkhome-valid" value="true"/>
+  </target>
+
+  <target name="setup-jdkhome-3" depends="setup-jdkhome-1" unless="javahome-valid">
+    <property name="jdkhome" location="${javahome}/.."/>
+    <available property="jdkhome-valid" file="${jdkhome}/lib/tools.jar"/>
+  </target>
+
+  <target name="setup-jdkhome-4" depends="setup-jdkhome-1" if="is-mac">
+      <property name="jdkhome-valid" value="${java.home}/../Classes/classes.jar"/> 
+  </target>
+
+  <target name="setup-jdkhome" depends="setup-jdkhome-2,setup-jdkhome-3,setup-jdkhome-4" unless="jdkhome-valid">
+    <fail message="No tools.jar found in ${javahome}! Set -Djavahome=... as needed."/>
+  </target>
+</project>

Added: FormLayout/trunk/nb4.0/nbbuild/module-scripts/directories.properties
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/module-scripts/directories.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/module-scripts/directories.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,16 @@
+nb.beans.dir=beans
+nb.bin.dir=lib
+nb.docs.dir=docs
+nb.lib.dir=core
+nb.lib/ext.dir=lib
+nb.lib/patches.dir=${nb.lib.dir}/patches
+nb.modules.dir=modules
+nb.modules/autoload.dir=${nb.modules.dir}/autoload
+nb.modules/autoload/docs.dir=${nb.modules/autoload.dir}/docs
+nb.modules/bin.dir=${nb.modules.dir}/lib
+nb.modules/docs.dir=${nb.modules.dir}/docs
+nb.modules/eager.dir=${nb.modules.dir}/eager
+nb.modules/patches.dir=${nb.modules.dir}/patches
+nb.sources.dir=sources
+nb.system.dir=config
+nb.update_tracking.dir=update_tracking

Added: FormLayout/trunk/nb4.0/nbbuild/module-scripts/projectized.xml
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/module-scripts/projectized.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/module-scripts/projectized.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,476 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+<project name="projectized" default="init" basedir=".">
+
+    <!-- XXX supply descriptions for the appropriate targets -->
+    <!-- XXX prefix internal targets with '-' (and grep all module scripts which override or use these targets and update them to match) -->
+    <!-- XXX should use namespaces for NB in-VM tasks from ant/browsetask and debuggerjpda/ant and apisupport/ant -->
+
+    <import file="../module-scripts/default.xml"/>
+
+    <taskdef name="parseprojectxml" classname="org.netbeans.nbbuild.ParseProjectXml" classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+
+    <target name="init" depends="basic-init,files-init,build-init"/>
+
+    <target name="basic-init" depends="default.init">
+        <!-- Synch the following property loads with NbModuleProject.makeEvalDefs: -->
+        <property file="nbproject/private/private.properties"/>
+        <property file="nbproject/project.properties"/>
+        <!-- Do not try to set module.classpath here, in particular: -->
+        <!-- during a clean, the ${foo/bar.dir} properties may not be set. -->
+        <parseprojectxml project="." modulesxml="${modulesxml.file}" codenamebasedashesproperty="code.name.base.dashes" codenamebaseslashesproperty="code.name.base.slashes"/>
+        <property name="module.jar.dir" value="${nb.modules.dir}"/>
+        <property name="module.jar.basename" value="${code.name.base.dashes}.jar"/>
+        <property name="module.jar" value="${module.jar.dir}/${module.jar.basename}"/>
+        <condition property="has.javahelp">
+            <and>
+                <available file="javahelp"/>
+                <!-- Special hack for core: -->
+                <not><available file="javahelp/manifest.mf"/></not>
+            </and>
+        </condition>
+        <condition property="javahelp.jarred">
+            <and>
+                <available file="javahelp/${module.jar.basename}"/>
+            </and>
+        </condition>
+        <property name="javahelp.jar.dir" value="${nb.modules/docs.dir}"/>
+        <property name="javahelp.jar.basename" value="${code.name.base.dashes}.jar"/>
+        <property name="javahelp.jar" value="${javahelp.jar.dir}/${javahelp.jar.basename}"/>
+    </target>
+
+    <target name="files-init" depends="basic-init">
+        <patternset id="module.files">
+            <include name="${module.jar}"/>
+            <include name="${javahelp.jar}" if="has.javahelp"/>
+            <include name="${nb.system.dir}/Modules/${code.name.base.dashes}.xml"/>
+        </patternset>
+    </target>
+
+    <target name="build-init" depends="basic-init">
+        <parseprojectxml project="." modulesxml="${modulesxml.file}" publicpackagesproperty="public.packages" javadocpackagesproperty="module.javadoc.packages" idedependenciesproperty="ide.dependencies" moduledependenciesproperty="module.dependencies" moduleclasspathproperty="module.classpath" domainproperty="nbm.domain"/>
+        <condition property="is.regular">
+            <not>
+                <or>
+                    <isset property="is.autoload"/>
+                    <isset property="is.eager"/>
+                    <equals arg1="${module.jar.dir}" arg2="${nb.lib.dir}"/>
+                </or>
+            </not>
+        </condition>
+        <property name="nbm" value="${code.name.base.dashes}.nbm"/>
+        <property name="build.compiler.debug" value="true"/>
+        <property name="build.compiler.deprecation" value="true"/>
+        <property name="build.sysclasspath" value="ignore"/>
+        <property name="build.compiler.optimize" value="off"/>
+        <property name="build.package.compress" value="false"/>
+        <property name="build.package.index" value="false"/>
+        <property name="manifest.mf" location="manifest.mf"/>
+        <property name="src.dir" location="src"/>
+        <property name="build.classes.dir" location="build/classes"/>
+        <property name="nbm.homepage" value="http://${nbm.domain}.${homepage.base}/"/>
+        <property name="nbm.module.author" value=""/>
+        <property name="nbm.release.date" value=""/>
+        <property name="nbm.needs.restart" value="false"/>
+        <path id="cp">
+            <pathelement path="${module.classpath}"/>
+            <pathelement path="${cp.extra}"/>
+        </path>
+        <property name="build.javahelp.dir" location="build/javahelp"/>
+        <property name="javahelp.base" value="${code.name.base.slashes}/docs"/>
+        <property name="javahelp.search" value="JavaHelpSearch"/>
+        <property name="javahelp.excludes" value="credits.html"/>
+    </target>
+
+    <target name="test-preinit" depends="init"/>
+    <target name="test-init" depends="init,test-preinit">
+        <property name="test.unit.src.dir" location="test/unit/src"/>
+        <property name="build.test.unit.classes.dir" location="build/test/unit/classes"/>
+        <property name="build.test.unit.results.dir" location="build/test/unit/results"/>
+        <property name="test.filter.trace" value="true"/>
+        <path id="test.unit.cp">
+            <path refid="cp"/>
+            <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${module.jar}"/>
+            <!-- XXX check if these files exist, and if not, run xtest/build.xml -->
+            <pathelement location="${nb_all}/xtest/lib/junit.jar"/>
+            <pathelement location="${nb_all}/xtest/lib/nbjunit.jar"/>
+            <pathelement path="${test.unit.cp.extra}"/>
+        </path>
+        <path id="test.unit.run.cp">
+            <path refid="test.unit.cp"/>
+            <pathelement location="${build.test.unit.classes.dir}"/>
+            <pathelement path="${test.unit.run.cp.extra}"/>
+        </path>
+        <propertyset id="test.unit.properties">
+            <propertyref prefix="test-unit-sys-prop."/>
+            <mapper type="glob" from="test-unit-sys-prop.*" to="*"/>
+        </propertyset>
+    </target>
+
+    <target name="compile" depends="init">
+        <mkdir dir="${build.classes.dir}"/>
+        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="${build.compiler.debug}" deprecation="${build.compiler.deprecation}" optimize="${build.compiler.optimize}" source="1.4" includeantruntime="false">
+            <classpath refid="cp"/>
+        </javac>
+        <copy todir="${build.classes.dir}">
+            <fileset dir="${src.dir}" excludesfile="${nb_all}/nbbuild/module-scripts/standard-jar-excludes.txt"/>
+        </copy>
+    </target>
+
+    <target name="compile-single" depends="init">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <mkdir dir="${build.classes.dir}"/>
+        <!-- XXX consider forcing debug=true and deprecation=true -->
+        <!-- XXX consider deleting the .class file first to force a rebuild -->
+        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
+               debug="${build.compiler.debug}" deprecation="${build.compiler.deprecation}"
+               source="1.4" includes="${javac.includes}" optimize="${build.compiler.optimize}" includeantruntime="false">
+            <classpath refid="cp"/>
+        </javac>
+    </target>
+
+    <target name="jar-prep" depends="init">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${module.jar.dir}"/>
+        <tstamp>
+            <format property="buildnumber" pattern="yyMMdd" timezone="UTC"/>
+        </tstamp>
+    </target>
+
+    <target name="jar-no-module-deps" unless="module.dependencies">
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}">
+            <!-- XXX it seems that using <manifest> forces the JAR to be recreated each time -->
+            <!-- (presumably due to the variable OIDE-M-I-V) -->
+            <!-- so might have to use e.g. <manifest> task (created in build/ somewhere)? -->
+            <!-- Cf: http://issues.apache.org/bugzilla/show_bug.cgi?id=29085 -->
+            <manifest>
+                <attribute name="OpenIDE-Module-Public-Packages" value="${public.packages}"/>
+                <attribute name="OpenIDE-Module-IDE-Dependencies" value="${ide.dependencies}"/>
+                <!-- XXX make this conditional so can use OIDE-M-B-V instead -->
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${build.classes.dir}"/>
+        </jar>
+    </target>
+
+    <target name="jar-with-module-deps" if="module.dependencies">
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}">
+            <manifest>
+                <attribute name="OpenIDE-Module-Public-Packages" value="${public.packages}"/>
+                <attribute name="OpenIDE-Module-IDE-Dependencies" value="${ide.dependencies}"/>
+                <attribute name="OpenIDE-Module-Module-Dependencies" value="${module.dependencies}"/>
+                <!-- XXX make this conditional so can use OIDE-M-B-V instead -->
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${build.classes.dir}"/>
+        </jar>
+    </target>
+
+    <!-- XXX need to actually use 4 targets, I guess, depending on whether or not ${ide.dependencies} is defined: -->
+    <target name="jar" depends="init,compile,jar-prep,jar-no-module-deps,jar-with-module-deps"/>
+    
+    <target name="reload" depends="init,jar">
+        <fail unless="netbeans.user">Reloading modules works only inside the NetBeans IDE</fail>
+        <nbinstaller module="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" action="reinstall"/>
+    </target>
+
+    <!-- Can insert extra stuff in here, like release, etc.: -->
+    <target name="netbeans-extra"/>
+
+    <target name="module-xml-regular" if="is.regular">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <enabled dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </enabled>
+        </createmodulexml>
+    </target>
+
+    <target name="module-xml-autoload" if="is.autoload">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <autoload dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </autoload>
+        </createmodulexml>
+    </target>
+
+    <target name="module-xml-eager" if="is.eager">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <eager dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </eager>
+        </createmodulexml>
+    </target>
+
+    <target name="netbeans" depends="init,jar,netbeans-extra,module-xml-regular,module-xml-autoload,module-xml-eager,javahelp">
+        <genlist outputfiledir="${netbeans.dest.dir}/${cluster.dir}" module="${module.jar}">
+            <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
+                <patternset refid="module.files"/>
+            </fileset>
+        </genlist>
+    </target>
+    
+    <target name="nbm" depends="init,netbeans" description="Build NBM archive.">
+        <mkdir dir="${build.dir}"/>
+        <makenbm file="${build.dir}/${nbm}"
+                 productdir="${netbeans.dest.dir}/${cluster.dir}"
+                 module="${module.jar}"
+                 homepage="${nbm.homepage}"
+                 distribution="${nbm.distribution}"
+                 needsrestart="${nbm.needs.restart}"
+                 releasedate="${nbm.release.date}"
+                 moduleauthor="${nbm.module.author}">
+            <license file="${license.file}"/>
+            <signature keystore="${keystore}" storepass="${storepass}" alias="${nbm_alias}"/>
+        </makenbm>
+    </target>
+
+    <target name="javadoc" depends="init">
+        <fail unless="javadoc.name">Must set javadoc.name</fail>
+        <fail unless="javadoc.title">Must set javadoc.title</fail>
+        <!-- This should become an import at some point, perhaps: -->
+        <ant dir="${nb_all}/nbbuild/javadoctools" antfile="template.xml" target="javadoc">
+            <property name="javadoc.base" location="."/>
+            <property name="javadoc.packages" value="${module.javadoc.packages}"/>
+            <property name="javadoc.classpath" refid="cp"/>
+            <property name="javadoc.manifest" location="${manifest.mf}"/>
+        </ant>
+    </target>
+
+    <target name="javadoc-nb" depends="init,javadoc" if="netbeans.user">
+        <nbbrowse file="javadoc/${javadoc.name}/index.html"/>
+    </target>
+    
+    <target name="arch" depends="init" description="Process an arch.xml, creating it if it does not yet exist.">
+        <fail unless="javadoc.arch">You must define e.g. javadoc.arch=$${basedir}/arch.xml in project.properties</fail>
+        <property name="arch.output.html" location="${java.io.tmpdir}/arch.html"/>
+        <property name="arch.generate" value="true"/>
+        <taskdef name="arch" classname="org.netbeans.nbbuild.Arch" classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+        <arch answers="${javadoc.arch}" output="${arch.output.html}"/>
+    </target>
+    
+    <target name="arch-nb" depends="init,arch" if="netbeans.user" description="Process an arch.xml, creating it if it does not yet exist, and display the result.">
+        <nbbrowse file="${arch.output.html}"/>
+    </target>
+        
+    <target name="test-build" depends="init,test-init,jar">
+        <mkdir dir="${build.test.unit.classes.dir}"/>
+        <javac srcdir="${test.unit.src.dir}" destdir="${build.test.unit.classes.dir}"
+               debug="true" deprecation="${build.compiler.deprecation}"
+               source="1.4" optimize="${build.compiler.optimize}" includeantruntime="false">
+               <exclude name="**/jars/**"/><!-- XXX for core only; fix in core, not here -->
+            <classpath refid="test.unit.cp"/>
+        </javac>
+        <copy todir="${build.test.unit.classes.dir}">
+            <fileset dir="${test.unit.src.dir}">
+                <exclude name="**/*.java"/>
+            </fileset>
+        </copy>
+    </target>
+
+    <target name="compile-test-single" depends="init,test-init,jar">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <mkdir dir="${build.test.unit.classes.dir}"/>
+        <!-- XXX consider forcing deprecation=true -->
+        <!-- XXX consider deleting the .class file first to force a rebuild -->
+        <javac srcdir="${test.unit.src.dir}" destdir="${build.test.unit.classes.dir}"
+               debug="true" deprecation="${build.compiler.deprecation}"
+               source="1.4" includeantruntime="false" optimize="${build.compiler.optimize}" includes="${javac.includes}">
+            <classpath refid="test.unit.cp"/>
+        </javac>
+    </target>
+
+    <target name="test" depends="init,test-init,test-build">
+        <mkdir dir="${build.test.unit.results.dir}"/>
+        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed" filtertrace="${test.filter.trace}">
+            <batchtest todir="${build.test.unit.results.dir}">
+                <fileset dir="${test.unit.src.dir}">
+                    <!-- XXX could include only out-of-date tests... -->
+                    <include name="**/*Test.java"/>
+                </fileset>
+            </batchtest>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <!-- <assertions> does not seem to work in Ant 1.6.1? -->
+            <jvmarg value="-ea"/>
+            <formatter type="brief" usefile="false"/>
+        </junit>
+        <fail if="tests.failed">Some tests failed; see details above.</fail>
+    </target>
+
+    <target name="test-single" depends="init,test-init,test-build">
+        <fail unless="test.includes">Must set test.includes</fail>
+        <mkdir dir="${build.test.unit.results.dir}"/>
+        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed" filtertrace="${test.filter.trace}">
+            <batchtest todir="${build.test.unit.results.dir}">
+                <fileset dir="${test.unit.src.dir}" includes="${test.includes}"/>
+            </batchtest>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <!-- <assertions> does not seem to work in Ant 1.6.1? -->
+            <jvmarg value="-ea"/>
+            <formatter type="brief" usefile="false"/>
+        </junit>
+        <fail if="tests.failed">Some tests failed; see details above.</fail>
+    </target>
+
+    <target name="do-debug-test-single">
+        <fail unless="test.class">Must set test.class</fail>
+        <java fork="true" classname="junit.textui.TestRunner">
+            <jvmarg value="-Xdebug"/>
+            <jvmarg value="-Xnoagent"/>
+            <jvmarg value="-Djava.compiler=none"/>
+            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
+            <jvmarg value="-ea"/>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <arg line="${test.class}"/>
+        </java>
+    </target>
+
+    <!-- apisupport/project could calls this for the debug action. -->
+    <!-- You can also call it directly from the nbbuild/misc pseudoproject. -->
+    <target name="debug" depends="netbeans">
+        <ant dir="${nb_all}/nbbuild" target="tryme-debug"/>
+    </target>
+
+    <target name="debug-test-single" depends="init,test-init,test-build,do-debug-test-single"/>
+
+    <target name="debug-test-single-nb" depends="init,test-init,test-build" if="netbeans.user">
+        <fail unless="test.class">Must set test.class</fail>
+        <nbjpdastart transport="dt_socket" addressproperty="jpda.address" name="${test.class}">
+            <classpath>
+                <path refid="test.unit.run.cp"/>
+                <!-- Permit extra sources to be searched even if they are not in the actual CP. -->
+                <!-- Used e.g. from ant/test/unit since some tests use dynamic loading: -->
+                <pathelement path="${test.unit.debug.cp.extra}"/>
+            </classpath>
+        </nbjpdastart>
+        <antcall target="do-debug-test-single"/>
+    </target>
+
+    <target name="-pre-debug-fix" depends="init">
+        <fail unless="fix.class">Must set fix.class to e.g. org/netbeans/modules/foo/Bar</fail>
+        <property name="javac.includes" value="${fix.class}.java"/>
+    </target>
+    <target name="debug-fix-nb" if="netbeans.user" depends="init,-pre-debug-fix,compile-single">
+        <nbjpdareload>
+            <fileset includes="${fix.class}*.class" dir="${build.classes.dir}"/>
+        </nbjpdareload>
+    </target>
+
+    <!-- support either:
+         1. contents of help set in javahelp/ directory
+         2. contents of help set in a jar file in javahelp/module-name.jar
+    -->
+    <target name="javahelp-impl-jarred" if="javahelp.jarred">
+        <copy todir="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar.dir}">
+            <fileset dir="javahelp">
+                <include name="${module.jar.basename}"/>
+            </fileset>
+        </copy>
+    </target>
+
+    <target name="javahelp-impl-unjarred" unless="javahelp.jarred">
+        <mkdir dir="${build.javahelp.dir}/${javahelp.base}/${javahelp.search}"/>
+        <copy todir="${build.javahelp.dir}">
+            <fileset dir="javahelp" excludesfile="${nb_all}/nbbuild/module-scripts/standard-jar-excludes.txt"/>
+        </copy>
+        <jhindexer basedir="${build.javahelp.dir}/${javahelp.base}"
+                   db="${build.javahelp.dir}/${javahelp.base}/${javahelp.search}">
+            <classpath>
+                <fileset dir="${nb_all}/nbbuild/external">
+                    <include name="jhall*.jar"/>
+                </fileset>
+            </classpath>
+            <include name="**/*.html"/>
+            <include name="**/*.htm"/>
+            <exclude name="${javahelp.search}/"/>
+            <exclude name="${javahelp.excludes}"/>
+        </jhindexer>
+        <!-- Add ide.css for easy previewing only; usersguide provides it in distro: -->
+        <!-- (XXX maybe the viewer task can automagically do this...) -->
+        <mkdir dir="${build.javahelp.dir}/org/netbeans/modules/usersguide"/>
+        <copy tofile="${build.javahelp.dir}/org/netbeans/modules/usersguide/ide.css"
+              file="${nb_all}/usersguide/javahelp/org/netbeans/modules/usersguide/ide.css"
+              failonerror="false"/>
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar.dir}"/>
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar}" compress="true">
+            <fileset dir="${build.javahelp.dir}">
+                <!-- XXX this does not exclude the folder, unfortunately... -->
+                <exclude name="org/netbeans/modules/usersguide/ide.css"/>
+            </fileset>
+        </jar>
+    </target>
+
+    <target name="javahelp" depends="init" if="has.javahelp">
+        <antcall target="javahelp-impl-jarred"/>
+        <antcall target="javahelp-impl-unjarred"/>
+    </target>
+
+    <target name="check-javahelp" depends="javahelp" description="Validate helpset for various errors." if="has.javahelp">
+        <fail unless="javahelp.hs">Must set javahelp.hs property</fail>
+        <taskdef name="checkhelpsets" classname="org.netbeans.nbbuild.CheckHelpSets">
+            <classpath>
+                <pathelement location="${nb_all}/nbbuild/lib/nbantext.jar"/>
+                <fileset dir="${nb_all}/nbbuild/external">
+                    <include name="jhall*.jar"/>
+                </fileset>
+            </classpath>
+        </taskdef>
+        <checkhelpsets>
+            <!-- XXX need to check against real files (since there may be some processing) but should use a link mapper: -->
+            <fileset dir="${build.javahelp.dir}">
+                <include name="${javahelp.base}/${javahelp.hs}"/>
+            </fileset>
+        </checkhelpsets>
+    </target>
+
+    <!-- XXX need target to preview javahelp in a viewer like this: -->
+    <!--
+    HelpSet hs = new HelpSet(someClassLoader, f.toURI().toURL());
+    String title = hs.getTitle();
+    if (title == null) {
+        title = f.getAbsolutePath();
+    }
+    JDialog dlg = new JDialog(WindowManager.getDefault().getMainWindow(), title, false);
+    dlg.getContentPane().add(new JHelp(hs), BorderLayout.CENTER);
+    dlg.setSize(920, 660); // match min size of IDE's viewer
+    dlg.pack();
+    dlg.addWindowListener(this);
+    dlg.show();
+    synchronized (this) {
+        wait();
+    }
+    // ...
+    public synchronized void windowClosing(WindowEvent ev) {
+        notify();
+    }
+    -->
+
+    <target name="clean" depends="files-init">
+        <delete dir="${build.dir}"/>
+        <delete dir="javadoc"/>
+        <delete>
+            <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
+                <patternset refid="module.files"/>
+            </fileset>
+        </delete>
+        <delete file="${netbeans.dest.dir}/${cluster.dir}/update_tracking/${code.name.base.dashes}.xml"/>
+    </target>
+
+</project>

Added: FormLayout/trunk/nb4.0/nbbuild/module-scripts/standard-jar-excludes.txt
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/module-scripts/standard-jar-excludes.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/module-scripts/standard-jar-excludes.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,13 @@
+**/*.java
+**/*.jj
+**/*.jjt
+**/*.orig
+**/*.bak
+**/*.rej
+**/*.form
+**/*.jar.MAKEME
+**/filesystem.attributes
+**/.nbattrs
+**/.#*
+**/package.html
+**/doc-files/

Added: FormLayout/trunk/nb4.0/nbbuild/module-scripts/standard-nbm-license.txt
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/module-scripts/standard-nbm-license.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/module-scripts/standard-nbm-license.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,15 @@
+This module is part of NetBeans and is open-source.
+You can see http://www.netbeans.org/license.html for details.
+
+You may use the binary however you like. The source file license is:
+
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.

Added: FormLayout/trunk/nb4.0/nbbuild/moduledefs-tmp.properties
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/moduledefs-tmp.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/moduledefs-tmp.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1 @@
+modules=${cluster.nblayoutpack}
\ No newline at end of file

Added: FormLayout/trunk/nb4.0/nbbuild/modules.xml
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/modules.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/modules.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,769 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+This file maps directory names to the module names.
+It must contain all the modules (netbeans modules and
+your cluster modules).
+-->
+
+<modules>
+    <module>
+        <path>nblayoutpack/formlayout</path>
+        <cnb>de.berlios.nblayoutpack.formlayout</cnb>
+    </module>
+
+<!-- =================================== -->
+<!-- =====   Netbeans Modules   ======== -->
+<!-- =================================== -->
+    <module>
+        <path>ant</path>
+        <cnb>org.apache.tools.ant.module</cnb>
+    </module>
+    <module>
+        <path>ant/browsetask</path>
+        <cnb>org.netbeans.modules.ant.browsetask</cnb>
+    </module>
+    <module>
+        <path>ant/docs</path>
+        <cnb>org.apache.tools.ant.module.docs</cnb>
+    </module>
+    <module>
+        <path>ant/freeform</path>
+        <cnb>org.netbeans.modules.ant.freeform</cnb>
+    </module>
+    <module>
+        <path>ant/grammar</path>
+        <cnb>org.netbeans.modules.ant.grammar</cnb>
+    </module>
+    <module>
+        <path>ant/project</path>
+        <cnb>org.netbeans.modules.project.ant</cnb>
+    </module>
+    <module>
+        <path>apisupport</path>
+        <cnb>org.netbeans.modules.apisupport</cnb>
+    </module>
+    <module>
+        <path>apisupport/ant</path>
+        <cnb>org.netbeans.modules.apisupport.ant</cnb>
+    </module>
+    <module>
+        <path>apisupport/lite</path>
+        <cnb>org.netbeans.modules.apisupport.lite</cnb>
+    </module>
+    <module>
+        <path>apisupport/project</path>
+        <cnb>org.netbeans.modules.apisupport.project</cnb>
+    </module>
+    <module>
+        <path>autoupdate</path>
+        <cnb>org.netbeans.modules.autoupdate</cnb>
+    </module>
+    <module>
+        <path>beans</path>
+        <cnb>org.netbeans.modules.beans</cnb>
+    </module>
+    <module>
+        <path>classfile</path>
+        <cnb>org.netbeans.modules.classfile</cnb>
+    </module>
+    <module>
+        <path>clazz</path>
+        <cnb>org.netbeans.modules.clazz</cnb>
+    </module>
+    <module>
+        <path>contrib/docbook</path>
+        <cnb>org.netbeans.modules.docbook</cnb>
+    </module>
+    <module>
+        <path>contrib/mount</path>
+        <cnb>org.netbeans.modules.mount</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator</path>
+        <cnb>org.netbeans.modules.navigator</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator/javagator</path>
+        <cnb>org.netbeans.modules.javagator</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator/propagator</path>
+        <cnb>org.netbeans.modules.propagator</cnb>
+    </module>
+    <module>
+        <path>contrib/options</path>
+        <cnb>org.netbeans.modules.options</cnb>
+    </module>
+    <module>
+        <path>contrib/options/baseoptions</path>
+        <cnb>org.netbeans.modules.baseoptions</cnb>
+    </module>
+    <module>
+        <path>contrib/options/optionscore</path>
+        <cnb>org.netbeans.modules.optionscore</cnb>
+    </module>
+    <module>
+        <path>core</path>
+        <cnb>org.netbeans.core</cnb>
+        <jar>lib/core.jar</jar>
+    </module>
+    <module>
+        <path>core/compiler</path>
+        <cnb>org.netbeans.core.compiler</cnb>
+        <jar>modules/autoload/core-compiler.jar</jar>
+    </module>
+    <module>
+        <path>core/deprecated</path>
+        <cnb>org.netbeans.core.deprecated</cnb>
+        <jar>modules/autoload/core-deprecated.jar</jar>
+    </module>
+    <module>
+        <path>core/execution</path>
+        <cnb>org.netbeans.core.execution</cnb>
+    </module>
+    <module>
+        <path>core/ide</path>
+        <cnb>org.netbeans.core.ide</cnb>
+    </module>
+    <module>
+        <path>core/javahelp</path>
+        <cnb>org.netbeans.modules.javahelp</cnb>
+    </module>
+    <module>
+        <path>core/output</path>
+        <cnb>org.netbeans.core.output</cnb>
+    </module>
+    <module>
+        <path>core/output2</path>
+        <cnb>org.netbeans.core.output2</cnb>
+    </module>
+    <module>
+        <path>core/registry</path>
+        <cnb>org.netbeans.core.registry</cnb>
+    </module>
+    <module>
+        <path>core/settings</path>
+        <cnb>org.netbeans.modules.settings</cnb>
+    </module>
+    <module>
+        <path>core/swing/plaf</path>
+        <cnb>org.netbeans.swing.plaf</cnb>
+        <jar>lib/org-netbeans-swing-plaf.jar</jar>
+    </module>
+    <module>
+        <path>core/swing/tabcontrol</path>
+        <cnb>org.netbeans.swing.tabcontrol</cnb>
+    </module>
+    <module>
+        <path>core/term</path>
+        <cnb>org.netbeans.lib.terminalemulator</cnb>
+    </module>
+    <module>
+        <path>core/ui</path>
+        <cnb>org.netbeans.core.ui</cnb>
+    </module>
+    <module>
+        <path>core/windows</path>
+        <cnb>org.netbeans.core.windows</cnb>
+    </module>
+    <module>
+        <path>core/multiview</path>
+        <cnb>org.netbeans.core.multiview</cnb>
+    </module>
+    <module>
+        <path>core/favorites</path>
+        <cnb>org.netbeans.modules.favorites</cnb>
+    </module>
+    <module>
+        <path>db</path>
+        <cnb>org.netbeans.modules.db</cnb>
+    </module>
+    <module>
+        <path>debuggercore/oldapi</path>
+        <cnb>org.openide.debugger</cnb>
+    </module>
+    <module>
+        <path>debuggercore</path>
+        <cnb>org.netbeans.spi.debugger.ui</cnb>
+    </module>
+    <module>
+        <path>debuggercore/api</path>
+        <cnb>org.netbeans.api.debugger</cnb>
+    </module>
+    <module>
+        <path>debuggercore/viewmodel</path>
+        <cnb>org.netbeans.spi.viewmodel</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/api</path>
+        <cnb>org.netbeans.api.debugger.jpda</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/ant</path>
+        <cnb>org.netbeans.modules.debugger.jpda.ant</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda</path>
+        <cnb>org.netbeans.modules.debugger.jpda</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/ui</path>
+        <cnb>org.netbeans.modules.debugger.jpda.ui</cnb>
+    </module>
+    <module>
+        <path>diff</path>
+        <cnb>org.netbeans.modules.diff</cnb>
+    </module>
+    <module>
+        <path>editor</path>
+        <cnb>org.netbeans.modules.editor</cnb>
+    </module>
+    <module>
+        <path>editor/lib</path>
+        <cnb>org.netbeans.modules.editor.lib</cnb>
+    </module>
+    <module>
+        <path>editor/fold</path>
+        <cnb>org.netbeans.modules.editor.fold</cnb>
+    </module>
+    <module>
+        <path>editor/util</path>
+        <cnb>org.netbeans.modules.editor.util</cnb>
+    </module>
+    <module>
+        <path>extbrowser</path>
+        <cnb>org.netbeans.modules.extbrowser</cnb>
+    </module>
+    <module>
+        <path>form</path>
+        <cnb>org.netbeans.modules.form</cnb>
+    </module>
+    <module>
+        <path>html</path>
+        <cnb>org.netbeans.modules.html</cnb>
+    </module>
+    <module>
+        <path>httpserver</path>
+        <cnb>org.netbeans.modules.httpserver</cnb>
+    </module>
+    <module>
+        <path>httpserver/servletapi</path>
+        <cnb>org.netbeans.modules.servletapi</cnb>
+        <jar>modules/autoload/servletapi.jar</jar>
+    </module>
+    <module>
+        <path>i18n</path>
+        <cnb>org.netbeans.modules.i18n</cnb>
+    </module>
+    <module>
+        <path>i18n/form</path>
+        <cnb>org.netbeans.modules.i18n.form</cnb>
+    </module>
+    <module>
+        <path>ide/applemenu</path>
+        <cnb>org.netbeans.modules.applemenu</cnb>
+    </module>
+    <module>
+        <path>ide/updatecenters</path>
+        <cnb>org.netbeans.modules.updatecenters</cnb>
+    </module>
+    <module>
+        <path>ide/welcome</path>
+        <cnb>org.netbeans.modules.welcome</cnb>
+    </module>
+    <module>
+        <path>image</path>
+        <cnb>org.netbeans.modules.image</cnb>
+    </module>
+    <module>
+        <path>j2eeserver</path>
+        <cnb>org.netbeans.modules.j2eeserver</cnb>
+    </module>
+    <module>
+        <path>j2eeserver/j2eeapis</path>
+        <cnb>org.netbeans.modules.j2eeapis</cnb>
+        <jar>modules/autoload/j2eeapis.jar</jar>
+    </module>
+    <module>
+        <path>j2eeserver/ant</path>
+        <cnb>org.netbeans.modules.j2ee.ant</cnb>
+    </module>
+    <module>
+        <path>java</path>
+        <cnb>org.netbeans.modules.java</cnb>
+    </module>
+    <module>
+        <path>java/api</path>
+        <cnb>org.netbeans.api.java</cnb>
+    </module>
+    <module>
+        <path>java/j2seplatform</path>
+        <cnb>org.netbeans.modules.java.j2seplatform</cnb>
+    </module>
+    <module>
+        <path>java/j2seproject</path>
+        <cnb>org.netbeans.modules.java.j2seproject</cnb>
+    </module>
+    <module>
+        <path>java/javacore</path>
+        <cnb>org.netbeans.modules.javacore</cnb>
+    </module>
+    <module>
+        <path>java/javamodel</path>
+        <cnb>org.netbeans.jmi.javamodel</cnb>
+    </module>
+    <module>
+        <path>java/platform</path>
+        <cnb>org.netbeans.modules.java.platform</cnb>
+    </module>
+    <module>
+        <path>java/project</path>
+        <cnb>org.netbeans.modules.java.project</cnb>
+    </module>
+    <module>
+        <path>java/srcmodel</path>
+        <cnb>org.openide.src</cnb>
+    </module>
+    <module>
+        <path>javacvs/compat</path>
+        <cnb>org.netbeans.modules.cvsclient</cnb>
+        <jar>modules/javacvscompat.jar</jar>
+    </module>
+    <module>
+        <path>javacvs/libmodule</path>
+        <cnb>org.netbeans.lib.cvsclient</cnb>
+    </module>
+    <module>
+        <path>javadoc</path>
+        <cnb>org.netbeans.modules.javadoc</cnb>
+    </module>
+    <module>
+        <path>jellytools</path>
+        <cnb>org.netbeans.modules.jellytools</cnb>
+    </module>
+    <module>
+        <path>jemmy/idemodule</path>
+        <cnb>org.netbeans.modules.jemmy.idemodule</cnb>
+    </module>
+    <module>
+        <path>jemmysupport</path>
+        <cnb>org.netbeans.modules.jemmysupport</cnb>
+    </module>
+    <module>
+        <path>junit</path>
+        <cnb>org.netbeans.modules.junit</cnb>
+    </module>
+    <module>    
+        <path>latex/ant/antint</path>
+        <cnb>org.netbeans.modules.latex.antint</cnb>
+    </module>
+    <module>
+        <path>latex/auted</path>
+        <cnb>org.netbeans.modules.latex.auted</cnb>
+    </module>
+    <module>
+        <path>latex/bibtex</path>
+        <cnb>org.netbeans.modules.latex.bibtex</cnb>
+    </module>
+    <module>
+        <path>latex/branding</path>
+        <cnb>org.netbeans.modules.latex.branding</cnb>
+    </module>
+    <module>
+        <path>latex/core</path>
+        <cnb>org.netbeans.modules.latex</cnb>
+    </module>
+    <module>
+        <path>latex/editor</path>
+        <cnb>org.netbeans.modules.latex.editor</cnb>
+    </module>
+    <module>
+        <path>latex/guiproject</path>
+        <cnb>org.netbeans.modules.latex.guiproject</cnb>
+    </module>
+    <module>
+        <path>latex/loaders</path>
+        <cnb>org.netbeans.modules.latex.loaders</cnb>
+    </module>
+    <module>
+        <path>latex/manual</path>
+        <cnb>org.netbeans.modules.latex.help</cnb>
+    </module>
+    <module>
+        <path>latex/model</path>
+        <cnb>org.netbeans.modules.latex.model</cnb>
+    </module>
+    <module>
+        <path>latex/nexplorer</path>
+        <cnb>org.netbeans.modules.nexplorer</cnb>
+    </module>
+    <module>
+        <path>latex/project</path>
+        <cnb>org.netbeans.modules.latex.project</cnb>
+    </module>
+    <module>
+        <path>latex/ui</path>
+        <cnb>org.netbeans.modules.latex.ui</cnb>
+    </module>
+    <module>
+        <path>lexer</path>
+        <cnb>org.netbeans.modules.lexer</cnb>
+    </module>
+    <module>
+        <path>lexer/editorbridge</path>
+        <cnb>org.netbeans.modules.lexer.editorbridge</cnb>
+    </module>
+    <module>
+        <path>libs/commons_logging</path>
+        <cnb>org.netbeans.libs.commons_logging</cnb>
+    </module>
+    <module>
+        <path>libs/j2eeeditor</path>
+        <cnb>org.netbeans.libs.j2eeeditor</cnb>
+        <jar>modules/autoload/j2eeeditor.jar</jar>
+    </module>
+    <module>
+        <path>libs/jaxp</path>
+        <cnb>org.netbeans.libs.jaxp</cnb>
+        <jar>modules/autoload/jaxp.jar</jar>
+    </module>
+    <module>
+        <path>libs/regexp</path>
+        <cnb>org.netbeans.libs.regexp</cnb>
+        <jar>modules/autoload/nb-regexp-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>libs/xalan</path>
+        <cnb>org.netbeans.libs.xalan</cnb>
+        <jar>modules/autoload/nb-xalan-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>libs/xerces</path>
+        <cnb>org.netbeans.libs.xerces</cnb>
+        <jar>modules/autoload/nb-xerces-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>mdr/jmi</path>
+        <cnb>javax.jmi.reflect</cnb>
+    </module>
+    <module>
+        <path>mdr/nbjmiutils</path>
+        <cnb>org.netbeans.modules.jmiutils</cnb>
+    </module>
+    <module>
+        <path>mdr/mdrapi</path>
+        <cnb>org.netbeans.api.mdr</cnb>
+    </module>
+    <module>
+        <path>mdr/module</path>
+        <cnb>org.netbeans.modules.mdr</cnb>
+    </module>
+    <module>
+        <path>mdr/mof</path>
+        <cnb>javax.jmi.model</cnb>
+    </module>
+    <module>
+        <path>monitor</path>
+        <cnb>org.netbeans.modules.web.monitor</cnb>
+    </module>
+    <module>
+        <path>openide</path>
+        <cnb>org.openide</cnb>
+        <jar>lib/openide.jar</jar>
+    </module>
+    <module>
+        <path>openide/compiler</path>
+        <cnb>org.openide.compiler</cnb>
+    </module>
+    <module>
+        <path>openide/convertor</path>
+        <cnb>org.netbeans.modules.convertor</cnb>
+    </module>
+    <module>
+        <path>openide/deprecated</path>
+        <cnb>org.openide.deprecated</cnb>
+    </module>
+    <module>
+        <path>openide/execution</path>
+        <cnb>org.openide.execution</cnb>
+    </module>
+    <module>
+        <path>openide/execution/deprecated</path>
+        <cnb>org.openide.execution.deprecated</cnb>
+    </module>
+    <module>
+        <path>openide/io</path>
+        <cnb>org.openide.io</cnb>
+    </module>
+    <module>
+        <path>openide/loaders</path>
+        <cnb>org.openide.loaders</cnb>
+        <jar>lib/openide-loaders.jar</jar>
+    </module>
+    <module>
+        <path>openide/masterfs</path>
+        <cnb>org.netbeans.modules.masterfs</cnb>
+    </module>
+    <module>
+        <path>openide/registry</path>
+        <cnb>org.netbeans.modules.registry</cnb>
+    </module>
+     <module>
+        <path>openide/looks</path>
+        <cnb>org.netbeans.modules.looks</cnb>
+    </module>
+    <module>
+        <path>openidex</path>
+        <cnb>org.openidex.util</cnb>
+    </module>
+    <module>
+        <path>performance/insane</path>
+        <cnb>org.netbeans.modules.performance.insane</cnb>
+    </module>
+    <module>
+        <path>projects/libraries</path>
+        <cnb>org.netbeans.modules.project.libraries</cnb>
+    </module>
+    <module>
+        <path>projects/projectapi</path>
+        <cnb>org.netbeans.modules.projectapi</cnb>
+    </module>
+    <module>
+        <path>projects/projectui</path>
+        <cnb>org.netbeans.modules.projectui</cnb>
+    </module>
+        <module>
+        <path>projects/projectuiapi</path>
+        <cnb>org.netbeans.modules.projectuiapi</cnb>
+    </module>
+    <module>
+        <path>projects/queries</path>
+        <cnb>org.netbeans.modules.queries</cnb>
+    </module>
+    <module>
+        <path>properties</path>
+        <cnb>org.netbeans.modules.properties</cnb>
+        <jar>modules/properties.jar</jar>
+    </module>
+    <module>
+        <path>refactoring</path>
+        <cnb>org.netbeans.modules.refactoring</cnb>
+    </module>
+    <module>
+        <path>scripting</path>
+        <cnb>org.netbeans.modules.scripting</cnb>
+    </module>
+    <module>
+        <path>scripting/bsf</path>
+        <cnb>org.netbeans.modules.scripting.bsf</cnb>
+    </module>
+    <module>
+        <path>schema2beans/rt</path>
+        <cnb>org.netbeans.modules.schema2beans</cnb>
+    </module>
+    <module>
+        <path>sysprops</path>
+        <cnb>org.netbeans.modules.sysprops</cnb>
+    </module>
+    <module>
+        <path>tasklist/api</path>
+        <cnb>org.netbeans.tasklistapi</cnb>
+        <jar>modules/autoload/tasklist-api.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/core</path>
+        <cnb>org.netbeans.modules.tasklist.core</cnb>
+        <jar>modules/autoload/tasklist-core.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/docscan</path>
+        <cnb>org.netbeans.modules.tasklist.docscan</cnb>
+        <jar>modules/tasklist-docscan.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/pmd</path>
+        <cnb>org.netbeans.modules.tasklist.pmd</cnb>
+        <jar>modules/eager/tasklist-pmd.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/suggestions</path>
+        <cnb>org.netbeans.modules.suggestions_framework</cnb>
+        <jar>modules/autoload/suggestions-framework.jar</jar>
+    </module>
+    <module>
+        <path>text</path>
+        <cnb>org.netbeans.modules.text</cnb>
+    </module>
+    <module>
+        <path>tomcatint/bundledtomcat</path>
+        <cnb>org.netbeans.modules.web.tomcat.bundled</cnb>
+        <jar>modules/tomcat40-bundled.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat40</path>
+        <cnb>org.netbeans.modules.web.tomcat.tomcat40</cnb>
+        <jar>modules/tomcat40.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat40autocompile</path>
+        <cnb>org.netbeans.modules.web.tomcat.tomcat40.autocompile</cnb>
+        <jar>modules/eager/tomcat40-autocompile.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat5</path>
+        <cnb>org.netbeans.modules.tomcat5</cnb>
+    </module>
+    <module>
+        <path>tomcatint/tomcat5/bundled</path>
+        <cnb>org.netbeans.modules.tomcat5.bundled</cnb>
+        <jar>modules/eager/tomcat5-bundled.jar</jar>
+    </module>
+    <module>
+        <path>ide/welcome</path>
+        <cnb>org.netbeans.modules.welcome</cnb>
+        <jar>modules/welcome.jar</jar>
+    </module>
+    <module>
+        <path>usersguide</path>
+        <cnb>org.netbeans.modules.usersguide</cnb>
+    </module>
+    <module>
+        <path>usersguide/j2seexamples</path>
+        <cnb>org.netbeans.modules.java.examples</cnb>
+    </module>
+    <module>
+        <path>utilities</path>
+        <cnb>org.netbeans.modules.utilities</cnb>
+    </module>
+    <module>
+        <path>utilities/project</path>
+        <cnb>org.netbeans.modules.utilities.project</cnb>
+    </module>
+    <module>
+        <path>utilities/group</path>
+        <cnb>org.netbeans.modules.group</cnb>
+    </module>
+    <module>
+        <path>vcscore</path>
+        <cnb>org.netbeans.modules.vcscore</cnb>
+    </module>
+    <module>
+        <path>vcscvs/compat</path>
+        <cnb>org.netbeans.modules.vcs.cmdline.compat</cnb>
+        <jar>modules/cvscompat.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric</path>
+        <cnb>org.netbeans.modules.vcs.advanced</cnb>
+        <jar>modules/vcsgen.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/cvsprofiles</path>
+        <cnb>org.netbeans.modules.vcs.profiles.cvsprofiles</cnb>
+        <jar>modules/cvs-profile.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/pvcs</path>
+        <cnb>org.netbeans.modules.vcs.profiles.pvcs</cnb>
+        <jar>modules/pvcs-profile.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/vss</path>
+        <cnb>org.netbeans.modules.vcs.profiles.vss</cnb>
+        <jar>modules/vss-profile.jar</jar>
+    </module>
+    <module>
+        <path>web/core</path>
+        <cnb>org.netbeans.modules.web.core</cnb>
+    </module>
+    <module>
+        <path>web/ddapi</path>
+        <cnb>org.netbeans.api.web.dd</cnb>
+    </module>
+    <module>
+        <path>web/examples</path>
+        <cnb>org.netbeans.modules.web.examples</cnb>
+    </module>
+    <module>
+        <path>web/jspdebug</path>
+        <cnb>org.netbeans.modules.web.debug</cnb>
+    </module>
+    <module>
+        <path>web/jspparser</path>
+        <cnb>org.netbeans.modules.web.jspparser</cnb>
+    </module>
+    <module>
+        <path>web/jspsyntax</path>
+        <cnb>org.netbeans.modules.web.core.syntax</cnb>
+    </module>
+    <module>
+        <path>web/project</path>
+        <cnb>org.netbeans.modules.web.project</cnb>
+    </module>
+    <module>
+        <path>web/webapi</path>
+        <cnb>org.netbeans.api.web.webmodule</cnb>
+    </module>
+    <module>
+        <path>web/servletapi23</path>
+        <cnb>org.netbeans.modules.servletapi23</cnb>
+        <jar>modules/autoload/servletapi23.jar</jar>
+    </module>
+    <module>
+        <path>web/servletapi24</path>
+        <cnb>org.netbeans.modules.servletapi24</cnb>
+        <jar>modules/autoload/servletapi24.jar</jar>
+    </module>
+    <module>
+        <path>web/taglibed</path>
+        <cnb>org.netbeans.modules.web.taglibed</cnb>
+        <jar>modules/taglibed.jar</jar>
+    </module>
+    <module>
+        <path>xml/api</path>
+        <cnb>org.netbeans.api.xml</cnb>
+    </module>
+    <module>
+        <path>xml/catalog</path>
+        <cnb>org.netbeans.modules.xml.catalog</cnb>
+        <jar>modules/xml-catalog.jar</jar>
+    </module>
+    <module>
+        <path>xml/core</path>
+        <cnb>org.netbeans.modules.xml.core</cnb>
+    </module>
+    <module>
+        <path>xml/css</path>
+        <cnb>org.netbeans.modules.css</cnb>
+        <jar>modules/css.jar</jar>
+    </module>
+    <module>
+        <path>xml/schema</path>
+        <cnb>org.netbeans.modules.xml.schema</cnb>
+        <jar>modules/xml-schema.jar</jar>
+    </module>
+    <module>
+        <path>xml/tax</path>
+        <cnb>org.netbeans.modules.xml.tax</cnb>
+        <jar>modules/autoload/xml-tax.jar</jar>
+    </module>
+    <module>
+        <path>xml/text-edit</path>
+        <cnb>org.netbeans.modules.xml.text</cnb>
+        <jar>modules/xml-text-edit.jar</jar>
+    </module>
+    <module>
+        <path>xml/tools</path>
+        <cnb>org.netbeans.modules.xml.tools</cnb>
+        <jar>modules/xml-tools.jar</jar>
+    </module>
+    <module>
+        <path>xml/xsl</path>
+        <cnb>org.netbeans.modules.xsl</cnb>
+        <jar>modules/xsl.jar</jar>
+    </module>
+    <module>
+        <path>xtest/nbjunit</path>
+        <cnb>org.netbeans.modules.nbjunit</cnb>
+    </module>
+</modules>

Added: FormLayout/trunk/nb4.0/nbbuild/user.build.properties
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/user.build.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/user.build.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,53 @@
+#                 Sun Public License Notice
+#
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+#
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+# the name of your cluster
+clustername=nblayoutpack
+
+# The location of your binary netbeans installation.  Modules will be installed
+# into this location.
+netbeans.dest.dir=T:/netbeans/4.0/
+
+# netbeans.user directory to use when launching netbeans
+# with "ant tryme"
+test.user.dir=testuserdir
+
+# the list of clusters that your cluster depends on
+# (used for the sanity-test and tryme targets)
+
+# ...for just the platform
+#test.cluster.list=${netbeans.dest.dir}/${clustername}
+
+# ...for the whole IDE
+test.cluster.list=${netbeans.dest.dir}/${clustername}${path.separator}${netbeans.dest.dir}/extra${path.separator}${netbeans.dest.dir}/ide4${path.separator}${netbeans.dest.dir}/nb4.0
+
+# Options to pass to NetBeans when starting it with "ant tryme":
+tryme.args=
+
+# Additional parameters to pass to NetBeans as it is started in sanity-check mode.
+# Normally you ought not change this.
+# However those running automated builds may wish to use:
+# -J-DErrorManager.minimum=17
+# (please don't ask why it is 17)
+# which will suppress a variety of mostly harmless deprecation warnings.
+sanitystart.args.additional=
+
+# Path to JDK to be used for tryme and sanity-check targets
+#jdkhome=
+
+# Additional parameters to pass to NetBeans as it is started in tryme mode.
+tryme.args=
+
+# If a port is specified, the tryme target will start netbeans in debug mode.
+#debug.port=8765
+
+# Uncomment to pause netbeans at the start of a debugging session
+#debug.pause=y

Added: FormLayout/trunk/nb4.0/nbbuild/user.cluster.properties
===================================================================
--- FormLayout/trunk/nb4.0/nbbuild/user.cluster.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nbbuild/user.cluster.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,10 @@
+# declare a name for your cluster
+# (should match the name in user.build.properties)
+user.cluster=cluster.nblayoutpack
+
+# the directory under ${netbeans.home} containing your cluster
+cluster.nblayoutpack.dir=nblayoutpack
+
+# the list of modules (the names of the directories containing 
+# the modules, rooted at nbbuild/..)
+cluster.nblayoutpack=nblayoutpack

Added: FormLayout/trunk/nb4.0/nblayoutpack/build.xml
===================================================================
--- FormLayout/trunk/nb4.0/nblayoutpack/build.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nblayoutpack/build.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="nblayoutpack-tablelayout" default="netbeans" basedir=".">
+
+    <property file="../../build.properties"/>
+    <tstamp>
+      <format property="buildnumbertimestamp" pattern="yyyyMMdd.HHmm"/>
+    </tstamp>
+    <property name="impl.version" value="${spec.version}.${buildnumbertimestamp}"/>
+
+    <property name="license.file" location="../../license.txt"/>
+
+    <import file="../nbbuild/module-scripts/projectized.xml"/>
+
+    <!-- inherited targets -->
+    <!--
+    compile: compiles source code
+    jar: creates module jar
+    netbeans: installs module to $NETBEANS_HOME
+    nbm: makes NBM file in build/
+    javadoc: generates javadocs
+    test: runs junit tests
+    clean: does the obvious
+    -->
+
+    <!-- 
+    If you're adding compile dependencies on 3rd party jars 
+    (jgraph, jdom, etc.), uncomment this section ...
+
+    Identifies all the files to be considered part of this module when deployed 
+    -->
+    <target name="files-init" depends="basic-init">
+        <echo>${module.jar}</echo>
+        <echo>${nb.system.dir}/Modules/${code.name.base.dashes}.xml</echo>
+        <echo>${nb.modules.dir}/ext/nblayoutpack/forms-1.0.5.jar</echo>
+        <patternset id="module.files">
+            <include name="${module.jar}"/>
+            <include name="${nb.system.dir}/Modules/${code.name.base.dashes}.xml"/>
+            <include name="${nb.modules.dir}/ext/nblayoutpack/forms-1.0.5.jar"/>
+        </patternset>
+    </target>
+
+    <!-- 
+    netbeans-extra is a hook provided to plug in file copying. 
+    If you're adding compile dependencies on 3rd party jars 
+    (jgraph, jdom, etc.), uncomment this section ...
+    This example assumes that jgraph.jar and jdom.jar are in snipe/lib/
+    -->
+         
+    <target name="netbeans-extra" depends="init">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.modules.dir}/ext/nblayoutpack"/>
+        <copy todir="${netbeans.dest.dir}/${cluster.dir}/${nb.modules.dir}/ext/nblayoutpack">
+          <fileset dir="../../lib">
+            <include name="forms-1.0.5.jar"/>
+          </fileset>
+        </copy>
+    </target>
+
+
+</project>

Added: FormLayout/trunk/nb4.0/nblayoutpack/manifest.mf
===================================================================
--- FormLayout/trunk/nb4.0/nblayoutpack/manifest.mf	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nblayoutpack/manifest.mf	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,7 @@
+Manifest-Version: 1.0
+OpenIDE-Module: de.berlios.nblayoutpack.formlayout
+OpenIDE-Module-Localizing-Bundle: de/berlios/nblayoutpack/formlayout/Bundle.properties
+OpenIDE-Module-Layer: de/berlios/nblayoutpack/formlayout/nb4.0/layer.xml
+OpenIDE-Module-Install: de/berlios/nblayoutpack/formlayout/FormLayoutModule.class
+OpenIDE-Module-Module-Dependencies: org.netbeans.modules.form/2 = 200412081800
+Class-Path: ext/nblayoutpack/forms-1.0.5.jar

Added: FormLayout/trunk/nb4.0/nblayoutpack/nbproject/project.properties
===================================================================
--- FormLayout/trunk/nb4.0/nblayoutpack/nbproject/project.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nblayoutpack/nbproject/project.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,27 @@
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+
+cp.extra=../../lib/forms-1.0.5.jar
+
+src.dir=../../src
+
+build.package.compress=true
+build.package.index=true
+build.compiler.debug=false
+
+nbm.homepage=http://nblayoutpack.berlios.de
+nbm.distribution=http://nblayoutpack.berlios.de
+
+nbm=${name}-nb4.0-${impl.version}.nbm
+
+build.classes.dir=../../../output/classes
+build.dir=../../../output/nb4.0

Added: FormLayout/trunk/nb4.0/nblayoutpack/nbproject/project.xml
===================================================================
--- FormLayout/trunk/nb4.0/nblayoutpack/nbproject/project.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.0/nblayoutpack/nbproject/project.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://www.netbeans.org/ns/project/1">
+    <type>org.netbeans.modules.apisupport.project</type>
+    <configuration>
+        <data xmlns="http://www.netbeans.org/ns/nb-module-project/1">
+            <code-name-base>de.berlios.nblayoutpack.formlayout</code-name-base>
+            <path>FormLayout/trunk/nb4.0</path>
+            <module-dependencies>
+                <dependency>
+                    <code-name-base>org.openide</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>1</release-version>
+                        <specification-version>4.39</specification-version>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.openide.loaders</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency/>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.netbeans.modules.form</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>2</release-version>
+                    </run-dependency>
+                </dependency>
+            </module-dependencies>
+            <public-packages/>
+        </data>
+    </configuration>
+</project>

Added: FormLayout/trunk/nb4.1/nbbuild/CHANGES.txt
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/CHANGES.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/CHANGES.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,25 @@
+version 3
+======================
+1. removed apisupport modules that were added in version 2.  The patches have since been merged into
+the official sources.
+
+2. updated netbeans module definitions
+
+3. merged changes to projectized.xml
+
+
+version 2
+======================
+1. added modules for working with harness from within netbeans:
+    utilities/group
+    apisupport
+    apisupport/lite
+    apisupport/project
+
+Note: the first 3 are basically just copies from the netbeans source tree, and are only included here because they don't appear on the Update Center.  apisupport/project is modified to work with this harness instead of the setup in the official netbeans source tree.  apisupport/ant should be obtained from the update center.
+
+2. removed dependency on NETBEANS_HOME environment variable.  It's now specified as the netbeans.dest.dir property in user.build.properties (or site.build.properties)
+
+3. removed bootstrap target.  I now just include the nbantext.jar generated by the current netbeans source tree.
+
+4. fixed a few minor bugs

Added: FormLayout/trunk/nb4.1/nbbuild/README.txt
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/README.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/README.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,69 @@
+Netbeans Cluster Build Harness
+Author: Rich Unger
+Version: 3
+
+
+Getting Started:
+
+1. Set netbeans.dest.dir in user.build.properties to the location of your binary netbeans installation
+2. Give your cluster a name in user.build.properties
+3. Define the contents of your cluster in user.cluster.properties
+4. Add entries for your modules in modules.xml
+
+Shouldn't need to edit anything in folders underneath nbbuild/
+
+Use the snipe module as a model for your own modules.
+
+===========================================
+What is a cluster?
+
+Starting with Netbeans 4.0, the file layout of a Netbeans installation has changed to:
+
+NETBEANS_HOME
+  bin
+  conf
+  etc
+  cluster_one
+    modules
+    config
+    update_tracking
+  cluster_two
+    modules
+    config
+    update_tracking
+  cluster_three
+    modules
+    config
+    update_tracking
+
+Using this layout, a cluster can be packaged by itself, as a (xpi | rpm | deb | pkg | zip | tar.gz) and be installed separately from the Netbeans platform.
+
+A cluster has NO runtime significance.  A module doesn't care if it happens to live in cluster_one, cluster_two, or cluster_three, even if modules it depends on are in another cluster.  A cluster is merely a packaging convenience.
+
+When netbeans is launched, it needs to be told which clusters to activate.  The bin/netbeans.exe launcher, by default, activates the 'platform4', 'ide4', 'nb4.0', and 'extra' clusters.  Others can be specified in conf/netbeans.conf.
+
+This only works if you have the full IDE, though.  If you're building an app on the platform, you would distribute (with your cluster) a separate launch script or compiled executable which would call platform4/lib/nbexec.exe and pass it a list of clusters.
+
+===========================================
+
+About the included module:
+
+snipe: This is a real bare-bones module that edits a fictional file type.  It's meant to show how to construct a module and perform several common integration tasks.  I attempted to include as many helpful comments in the code as possible, so it would be useful as a tutorial.
+
+===========================================
+
+Using the harness from within NetBeans:
+
+You need the "Netbeans Module Projects" module, from the Update Center.  Alternatively you can build this module from the netbeans source tree.  It is located there under apisupport/project.  It has a few other dependencies, so the best way to build it is to run "ant all-apisupport" from the nbbuild/ directory in the netbeans tree.
+
+===========================================
+
+Unfinished Business:
+
+1. I'd like to add a target for generating launchers (i.e. ${netbeans.dest.dir}/bin/mycluster.exe, and analogous unix/OSX shell script).  However, as of right now I can't figure out how to pass absolute paths to the platform launcher in platform4/lib/nbexec (the --clusters argument requires absolute paths to the clusters).  The tryme and sanity-test tasks get around this by using the ${netbeans.dest.dir} variable that these scripts require to be set.  However, that should only be a requirement for a development box.  It shouldn't need to be required of your users.
+
+2. The next phase is to create a real UI/functional spec to support both the Sun netbeans developers and the external platform users, and evolve this harness to support that spec.  Discussion is currently happening on the nbdev list.
+
+===========================================
+
+Suggestions are welcome.  Questions to dev at openide.netbeans.org please.

Added: FormLayout/trunk/nb4.1/nbbuild/build.xml
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/build.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/build.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="nbbuild" default="all" basedir=".">
+  <import file="cluster-scripts/cluster.xml"/>
+
+  <target name="all" depends="netbeans-all" description="Build all the nbms in the cluster."/>
+
+  <!-- inherited targets -->
+  <!--
+  compile-all: compiles all your modules
+  jar-all: creates module jars for all your modules
+  netbeans-all: installs all your modules to $NETBEANS_HOME
+  nbm-all: makes NBM files of all your modules, puts them in nbbuild/nbms/
+  javadoc-all: generates javadocs for all your modules
+  test-all: runs junit tests for all your modules:
+  clean-all: runs 'clean' in all your modules
+  clean: same as clean-all
+  real-clean: cleans up everything in nbbuild/, as well as clean-all
+  cluster-zip: Zips up the whole cluster (after building with netbeans-all) into nbbuild/build/
+  sanity-check: Builds all modules, then starts netbeans for a brief period, then shuts down
+                (Useful for automated builds)
+  tryme: Builds all modules, then starts netbeans, optionally in debug mode
+  tryme-debg: forced debug mode with the tryme target
+  -->
+
+  <!-- Add your own stuff here ... -->
+
+</project>

Added: FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster-description.properties
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster-description.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster-description.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,40 @@
+nb.cluster.platform.pkg.filename=platform4
+nb.cluster.platform.extra.pkg.filename=platform4
+nb.cluster.platform.pkg.name=NetBeans 4 platform cluster
+nb.cluster.platform.pkg.version=4.0
+nb.cluster.platform.pkg.desc=NetBeans platform technology
+nb.cluster.platform.pkg.vendor=Sun Microsystems, Inc.
+nb.cluster.platform.pkg.email=
+
+nb.cluster.platform.pkg.svr4.pkg=SUNWnb4pf
+nb.cluster.platform.pkg.svr4.maxinst=1000
+nb.cluster.platform.pkg.svr4.sunw_pkgvers=1.0
+nb.cluster.platform.pkg.svr4.hotline=Please contact your local service provider
+nb.cluster.platform.pkg.svr4.classes=none
+nb.cluster.platform.pkg.svr4.basedir=/opt/netbeans
+nb.cluster.platform.pkg.svr4.pkginst=platform4
+nb.cluster.platform.pkg.svr4.category=application
+
+nb.cluster.platform.pkg.rpm.name=nb-platform
+nb.cluster.platform.pkg.rpm.requires=javahelp > 1.4
+nb.cluster.platform.pkg.rpm.group=Applications
+nb.cluster.platform.pkg.rpm.url=http://www.sun.com/
+nb.cluster.platform.pkg.rpm.copyright=commercial
+nb.cluster.platform.pkg.rpm.map=/opt/sun/netbeans
+nb.cluster.platform.pkg.rpm.prefix=/opt
+
+nb.cluster.nb.pkg.filename=nb4.0
+nb.cluster.ide.extra.pkg.filename=ide4-extra
+nb.cluster.ide.pkg.filename=ide4
+nb.pkg.idesupport.pkg.filename=idesupport4
+nb.pkg.ideextensions.pkg.filename=ideextensions4
+nb.pkg.javarefactoring.pkg.filename=javarefactoring4
+nb.pkg.webapp.pkg.filename=webapp4
+nb.pkg.ide.pkg.filename=ide4
+nb.pkg.nb.pkg.filename=nb4
+nb.features.basic.pkg.filename=features-basic4
+nb.features.desktop.pkg.filename=features-desktop4
+nb.features.ideplugin.pkg.filename=features-ideplugin4
+nb.features.web.pkg.filename=features-web4
+nb.pkg.testtools.pkg.filename=testtools4
+nb.pkg.mdr.pkg.filename=mdr4

Added: FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.properties
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,223 @@
+clusters.prefix=libnb
+
+local.config.tasklist4barracuda=\
+        tasklist/api, \
+        tasklist/core, \
+        tasklist/suggestions, \
+        tasklist/docscan
+
+local.config.tasklist4barracuda_auc=\
+        tasklist/copyright, \
+        tasklist/suggestions/ui, \
+        tasklist/usertasks, \
+        tasklist/javaparser, \
+        tasklist/javadoc, \
+        tasklist/compiler, \
+        tasklist/pmd, \
+        tasklist/checkstyle, \
+        tasklist/editor, \
+        tasklist/bugs
+
+local.config.libs=libs/xerces, \
+        libs/j2eeeditor, \
+        libs/commons_logging
+
+local.config.xml=xml/api, \
+        xml/tax, \
+        xml/core, \
+        xml/catalog, \
+        xml/tools, \
+        xml/text-edit, \
+        xml/css, \
+        xml/xsl, \
+        xml/schema
+
+local.config.vcsprofiles=vcsgeneric/profiles/cvsprofiles, \
+        vcsgeneric/profiles/pvcs, \
+        vcsgeneric/profiles/vss
+
+clusters.extra.list=nb.pkg.testtools,\
+        nb.cluster.platform.extra, \
+	nb.cluster.ide.extra
+
+#List of clusters in standard build
+nb.clusters.list=nb.cluster.platform, \
+        nb.cluster.ide, \
+        nb.cluster.nb
+
+clusters.list= \
+        ${nb.clusters.list}, \
+        ${clusters.extra.list}, \
+        ${user.cluster}
+
+nb.cluster.platform.extra.dir=platform4
+nb.cluster.platform.extra.depends=nb.cluster.platform
+nb.cluster.platform.extra=openide/util, \
+        openide/actions, \
+        openide/awt, \
+        openide/dialogs, \
+        openide/nodes, \
+        openide/explorer, \
+        openide/fs, \
+        openide/text, \
+        openide/windows
+
+nb.cluster.platform.dir=platform4
+nb.cluster.platform.depends=
+nb.cluster.platform=core, \
+        openide, \
+        openide/loaders, \
+        openide/io, \
+        openide/execution, \
+        openide/masterfs, \
+        core/bootstrap, \
+        core/output2, \
+        core/settings, \
+        core/javahelp, \
+        core/execution, \
+        core/ui, \
+        core/swing/plaf, \
+        core/swing/tabcontrol, \
+        core/windows, \
+        core/multiview, \
+        autoupdate, \
+        projects/queries
+
+nb.pkg.idesupport=\
+        debuggercore/api, \
+        debuggercore/viewmodel, \
+        debuggercore, \
+        diff, \
+        editor, \
+        editor/lib, \
+        editor/fold, \
+        editor/util, \
+        vcscore, \
+        javacvs/libmodule, \
+        ${local.config.vcsprofiles}, \
+        ${local.config.libs}, \
+        projects/projectapi, \
+        projects/projectuiapi, \
+        projects/projectui, \
+        projects/libraries, \
+        core/ide, \
+        core/favorites, \
+        vcsgeneric
+
+nb.pkg.ideextensions=\
+        properties, \
+        utilities, \
+        utilities/project, \
+        i18n, \
+        i18n/form, \
+        image, \
+        html, \
+        usersguide, \
+	usersguide/j2seexamples, \
+        openidex, \
+        ${local.config.tasklist4barracuda}, \
+        ${local.config.xml}
+
+nb.pkg.javarefactoring=\
+        classfile, \
+        clazz, \
+        java/srcmodel, \
+        java/api, \
+        java/javacore, \
+        java/javamodel, \
+        java, \
+        java/j2seproject, \
+        java/j2seplatform, \
+        java/parser, \
+        java/platform, \
+        java/project, \
+        refactoring, \
+        junit, \
+        javadoc, \
+        beans, \
+        debuggerjpda/api, \
+        debuggerjpda, \
+        debuggerjpda/ui, \
+        debuggerjpda/ant, \
+        ant, \
+        ant/project, \
+        ant/freeform, \
+        ant/grammar, \
+        ant/browsetask, \
+        apisupport/ant, \
+        apisupport/project, \
+        form
+
+nb.pkg.webapp=\
+        j2eeserver, \
+        j2eeserver/j2eeapis, \
+        j2eeserver/ant, \
+        schema2beans/rt, \
+        tomcatint/tomcat5, \
+        monitor, \
+        httpserver, \
+        httpserver/servletapi, \
+        db, \
+        extbrowser, \
+        web/servletapi23, \
+        web/servletapi24, \
+        web/core, \
+        web/project, \
+        web/webapi, \
+        web/ddapi, \
+        web/jspdebug, \
+        web/jspparser, \
+        web/jspsyntax, \
+        web/jstl11
+
+
+nb.pkg.ide=
+
+# special cluster for NetBeans IDE only extensions
+nb.pkg.nb=\
+        ide/branding, \
+        ide/updatecenters, \
+        ide/welcome, \
+        ide/launcher/upgrade, \
+        ide/applemenu, \
+        tomcatint/tomcat5/bundled, \
+        web/examples
+
+nb.pkg.testtools.dir=testtools
+nb.pkg.testtools.depends=nb.cluster.platform
+nb.pkg.testtools=jellytools, \
+        jemmy/idemodule, \
+        jemmysupport, \
+        xtest, \
+        xtest/nbjunit
+
+nb.cluster.ide.dir=ide4
+nb.cluster.ide.depends=nb.cluster.platform,nb.cluster.ide.extra
+nb.cluster.ide= \
+        ${nb.pkg.idesupport},\
+        ${nb.pkg.ideextensions},\
+        ${nb.pkg.javarefactoring},\
+        ${nb.pkg.webapp},\
+        ${nb.pkg.mdr}
+
+nb.cluster.ide.extra.depends=nb.cluster.platform
+nb.cluster.ide.extra.dir=extra
+nb.cluster.ide.extra= \
+        schema2beans/dev
+
+
+nb.cluster.nb.dir=nb4.0
+nb.cluster.nb.depends=nb.cluster.ide
+nb.cluster.nb= \
+        ${nb.pkg.ide},\
+        ${nb.pkg.nb}
+
+nb.pkg.mdr=mdr,\
+               mdr/module,\
+               mdr/nbjmiutils,\
+               mdr/jmiutils,\
+               mdr/mdrapi,\
+               mdr/jmi,\
+               mdr/mof, \
+               mdr/lib
+nb.pkg.mdr.dir=ide4

Added: FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.xml
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,230 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="cluster" default="tryme" basedir="..">
+  <import file="../module-scripts/default.xml"/>
+
+  <target name="check-for-jdk-1.4">
+    <available property="have-jdk-1.4" classname="java.lang.CharSequence"/>
+  </target>
+  <target name="assure-jdk-1.4" depends="check-for-jdk-1.4" unless="have-jdk-1.4">
+    <fail>You need JDK 1.4 or higher to build NetBeans.</fail>
+  </target>
+
+  <target name="init-module-list" depends="assure-jdk-1.4">
+    <!-- Define modules. -->
+    <!-- The following is not permitted by Ant: -->
+    <!-- <property name="modules" value="${config.modules.${clustername}}"/> -->
+    <!-- So this is a little trick to do it anyway. -->
+    <echo file="moduledefs-tmp.properties">modules=$${cluster.${clustername}}</echo>
+    <property file="moduledefs-tmp.properties"/>
+    <property name="allmodules" value="${modules}"/>
+  </target>
+
+  <target name="set-buildnumber" unless="buildnumber">
+    <tstamp>
+    	<format property="buildnumber" pattern="yyMMdd"/>
+    </tstamp>
+  </target>
+
+  <target name="init" depends="default.init,init-module-list,set-buildnumber">
+    <taskdef name="for-each" classname="org.netbeans.nbbuild.ForEach" classpath="lib/nbantext.jar"/>
+
+    <!-- Overridable. Note: need not necessarily be a number at all): -->
+    <property name="buildnum" value="dev-${buildnumber}"/>
+    <property name="sanitystart.args" value="-J-Dnetbeans.close=true ${sanitystart.args.additional}"/>
+  </target>
+
+  <macrodef name="resolve">
+    <attribute name="name"/>
+    <attribute name="property"/>
+    <sequential>
+      <property name="@{name}" value="${@{property}}"/>
+    </sequential>
+  </macrodef>
+
+  <target name="cluster-zip" depends="netbeans-all">
+    <taskdef name="setclusterpatternset" classname="org.netbeans.nbbuild.SetClusterPatternSet" classpath="lib/nbantext.jar"/>
+    <taskdef name="setcluster" classname="org.netbeans.nbbuild.SetCluster" classpath="lib/nbantext.jar"/>
+    <loadproperties srcFile="user.cluster.properties" />
+    <loadproperties srcFile="cluster-scripts/cluster.properties" />
+    <loadproperties srcFile="cluster-scripts/cluster-description.properties" />
+    <loadproperties srcFile="module-scripts/directories.properties" />
+    <setcluster cluster="${user.cluster}" name="one.cluster.dir" />
+    
+    <setclusterpatternset cluster="${user.cluster}" name="${user.cluster}.files" trackingpath="${netbeans.dest.dir}" clusterdir="${one.cluster.dir}"/>
+    
+    <property name="zipcluster.file" value="${user.cluster}"/>
+    <mkdir dir="${netbeans.build.dir}/zips"/>
+    <zip destfile="${netbeans.build.dir}/zips/${zipcluster.file}-${buildnum}.zip" update="true" duplicate="preserve">
+      <zipfileset dir="${netbeans.dest.dir}" filemode="755">
+        <include name="${one.cluster.dir}/${nb.bin.dir}/nbexec"/>
+      </zipfileset>
+      <zipfileset dir="${netbeans.dest.dir}">
+        <patternset refID="${user.cluster}.files"/>
+      </zipfileset>
+    </zip>
+  </target>
+
+  <target name="sanity-check" depends="testuserdir-delete,sanity-start" description="Test whether the build can start up without problems."/>
+  <target name="testuserdir-delete" depends="init">
+    <delete dir="${test.user.dir}"/>
+  </target>
+  <target name="sanity-start" depends="netbeans-all">
+    <mkdir dir="${test.user.dir}"/>
+    <echo>Starting the IDE as a sanity check...</echo>
+    <!-- XXX better would be to scan start log for stacktraces and just show those; -->
+    <!-- possibly after filtering for duplicates or something like this. -->
+    <!-- Timeout is ten minutes; should be enough for valid start, while preventing -->
+    <!-- a deadlock from hanging an automated build: -->
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes" timeout="600000">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${sanitystart.args}"/>
+    </exec>
+    <exec os="Linux SunOS Solaris Mac OS X" dir="." executable="sh" failonerror="yes" timeout="600000">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${sanitystart.args}"/>
+    </exec>
+    <echo>Finished starting the IDE, pay attention to any reported errors.</echo>
+  </target>
+
+  <target name="check-for-build"  >
+    <available property="have-build" file="${netbeans.dest.dir}/bin/netbeans"/>
+  </target>
+
+  <target name="tryme" depends="netbeans-all,tryme-debug,tryme-run"
+          description="Try running the IDE interactively (build it first if needed).
+It is possible to use -Ddebug.port=3234 -Ddebug.pause=y to start the system in debug mode" 
+   />
+          
+          
+  <target name="tryme-run" depends="init" unless="debug.port" >
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+    <exec os="Linux SunOS Solaris" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+    <exec os="Mac OS X" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="/Library/Java/Home"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+  </target>
+  
+  <target name="tryme-debug" depends="init" if="debug.port" >
+    <property name="debug.pause" value="n" />
+  
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+      <arg line="-J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,suspend=${debug.pause},server=y,address=${debug.port}" />
+    </exec>
+    <exec os="Linux SunOS Solaris Mac OS X" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+      <arg line="-J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,suspend=${debug.pause},server=y,address=${debug.port}" />
+    </exec>
+  </target>
+
+  <target name="real-clean" depends="clean,testuserdir-delete"
+          description="Clean everything possible.">
+    <echo message="Cleaning old builds..."/>
+
+    <!-- This step must be last: -->
+    <echo message="Cleaning NetBeans-specific Ant extensions..."/>
+    <delete file="moduledefs-tmp.properties"/>
+    <delete dir="nbms" failonerror="false"/>
+  </target>
+  
+  <target name="clean" depends="clean-all"
+          description="Run 'clean' on all the modules in the cluster.">
+    <echo message="Run `ant real-clean' if desired."/>
+  </target>
+
+
+  <!-- Delegating targets -->
+
+  <target name="compile-all" depends="init">
+      <for-each startdir=".." target="compile" locations="${allmodules}"/>
+  </target>
+
+  <target name="jar-all" depends="init">
+      <for-each startdir=".." target="jar" locations="${allmodules}"/>
+  </target>
+
+  <target name="netbeans-all" depends="init">
+      <for-each startdir=".." target="netbeans" locations="${allmodules}"/>
+  </target>
+
+  <target name="javadoc-all" depends="init">
+      <for-each startdir=".." target="javadoc" locations="${allmodules}"/>
+  </target>
+
+  <target name="test-all" depends="init">
+      <for-each startdir=".." target="test" locations="${allmodules}"/>
+  </target>
+
+  <target name="clean-all" depends="init">
+      <for-each startdir=".." target="clean" locations="${allmodules}"/>
+  </target>
+
+  <!-- Puts all the nbm's in nbbuild/nbms/ -->
+  <target name="nbm-all" depends="init">
+      <mkdir dir="nbms"/>
+      <property name="nbm.target.dir" location="nbms"/>
+      <for-each startdir=".." target="nbm" locations="${allmodules}"/>
+  </target>
+
+</project>

Added: FormLayout/trunk/nb4.1/nbbuild/lib/nbantext.jar
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/nb4.1/nbbuild/lib/nbantext.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/nb4.1/nbbuild/misc/addSerialVer
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/misc/addSerialVer	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/misc/addSerialVer	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,109 @@
+#
+#
+#
+if test "$#" -eq "0"; then
+  LIST=*
+else
+  LIST=$*
+fi
+
+# runs serialver and waits 3s for it to finish
+# then it kills it
+runSerialVer () {
+  # computes the serializable value and throws a signal
+  java -ms8m sun.tools.serialver.SerialVer $1 2>/dev/null&
+  SVPID=$!
+  
+  # sleep 3s and inform parent that time is up
+  sleep 3 && kill $SVPID 2>/dev/null &
+  SLPID=$!
+
+  # waits till the serial version number is computed
+  wait $SVPID
+
+  # kill timer
+  kill $SLPID 2>/dev/null
+}
+
+
+# compute serial version UID for a class,
+# if not serializable empty string is returned
+# otherwise string for initialization is given back
+computeUID () {
+  RES=`runSerialVer $1`
+  expr "$RES" : "$1: *\(.*;\)" 
+}
+
+AlphaNum="[A-Za-z\.0-9/]"
+
+
+find $LIST -name "*.class" | while read ClassFile; do
+  echo Working on $ClassFile
+
+  # 0 if not inner class 
+  InnerClass=`expr index $ClassFile \$`
+
+  Class=`tr "/" "." <<KONEC
+$ClassFile
+KONEC
+`
+  Class=`basename $Class ".class"`
+  # name of the class (if innner than name of the inner class)
+  ClassName=`tr "$." "//" <<KONEC
+$Class
+KONEC
+`
+  ClassName=`basename $ClassName`
+
+
+  # test if it is not anonymous innerclass
+  if test "$ClassName" -ge "0" 2>/dev/null; then
+    echo Anonymous inner class $Class
+  else
+    JavaFile=`expr $ClassFile : "\($AlphaNum*\).*\.class"`
+    JavaFile=$JavaFile".java"
+  
+    # compute UID for Class
+    uid=`computeUID $Class`
+    if test -n "$uid"; then
+      # there should be the UID
+      # try to see if it is there
+      if ! grep "$uid" $JavaFile >/dev/null; then
+        STOP=""
+        if ! test "0" -eq "$InnerClass"; then
+          # if inner class, test wheter it is static
+          if ! grep "static.*class *$ClassName" $JavaFile >/dev/null; then
+            echo Is not static inner class
+            STOP=true
+          fi
+        fi
+
+        if test -z "$STOP"; then
+          # we have to add it
+          echo Need to add the serialVersionUID
+          sed -e "/ class *$ClassName/a\\
+          /** generated Serialized Version UID */\\
+          $uid" <$JavaFile >/tmp/keke
+          # compare files
+          if diff -q /tmp/keke $JavaFile >/dev/null; then
+            # are same
+            echo Error files /tmp/keke and $JavaFile are same
+            grep  "$ClassName" $JavaFile
+            exit 1
+          fi
+          # overrides the original
+          mv /tmp/keke $JavaFile
+          # updated file to list of files
+          echo $JavaFile >>updated
+          echo Successfully Updated.
+        fi  
+      else
+        echo serialVersionUID already there
+      fi
+    else
+      echo Is not serializable
+    fi
+  fi
+  
+  rm $ClassFile
+done

Added: FormLayout/trunk/nb4.1/nbbuild/misc/bundlecheck.pl
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/misc/bundlecheck.pl	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/misc/bundlecheck.pl	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,114 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+require 5.005;
+use File::Find;
+
+my @files = ();
+my $quiet = 0;
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-q] file | directory ...\n";
+}
+
+if ($ARGV[0] eq "-q") {
+    $quiet = 1;
+    shift @ARGV;
+}
+
+foreach my $name (@ARGV) {
+    if (-f $name) {
+	push @files, $name;
+    } elsif (-d $name) {
+        find(sub {
+                 if (-f && m,\.java$, || -f && m,\bBundle.properties$,) {
+                     push @files, $File::Find::name;
+                 }
+             },
+             $name);
+    }
+}
+
+#
+# read Bundle.properties
+#
+
+ at props = ();
+
+foreach $f (@files) {
+    next if $f !~ m,\bBundle.properties$,i;
+
+    print STDERR "*** $f\n" unless $quiet;
+    
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    @lines = split /\r\n|\n|\r/, $all;
+    for ($lineno = 0; $lineno <= $#lines; $lineno++) {
+	$_ = $lines[$lineno];
+        
+        next if /^\s*#/;
+        next if /^\s*$/;
+
+        if (m,^([^=]+)=(.*)$,) {
+            $k = $1;
+            $k =~ s,\\ , ,g;
+            push @props, { key => $k,
+                           file => $f,
+                           lineno => $lineno + 1,
+                           line => $_,
+                           used => 0
+                         };
+        }
+
+        while (m,\\$, && $lineno <= $#lines) {
+            $lineno++;
+            $_ = $lines[$lineno];
+        }
+    }
+}
+
+#
+# go through *.java
+#
+  
+  
+foreach $f (@files) {
+    next if $f =~ m,\bBundle.properties$,i;
+
+    print STDERR "*** $f\n" unless $quiet;
+    
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    foreach $p (@props) {
+        next if $p->{used} > 0;
+        $pat = $p->{key};
+        $pat = quotemeta $pat;
+        $p->{used}++ if $all =~ m,\"$pat\",;
+    }
+}
+
+foreach $p (@props) {
+    next if $p->{line} =~ m!/!; # probably a filename localization, not in Java code
+    next if $p->{line} =~ m!^OpenIDE-Module-!; # manifest localization, not in Java code
+    print "$p->{file}:$p->{lineno}: $p->{line}\n" if $p->{used} == 0;
+}

Added: FormLayout/trunk/nb4.1/nbbuild/misc/bundlewc.pl
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/misc/bundlewc.pl	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/misc/bundlewc.pl	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,52 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+$totalwc = 0;
+$totallc = 0;
+
+printf "%7s %5s File\n", "Strings", "Words";
+printf "%7s %5s %s\n", "-------", "-----", "-" x 40;
+
+foreach $f (@ARGV) {
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    @lines = split /\r|\n/, $all;
+    
+    $wc = 0;
+    $lc = 0;
+    
+    foreach (@lines) {
+        next if /^\s*#/;
+        next if /^\s*$/;
+
+        if (/^[^=]+=(.*)$/) {
+            $_ = $1;
+            s/^\s*//;
+            s/\s*$//;
+            @words = split /\s+/;
+            $wc += @words ;
+            $lc++;
+        }
+    }
+    
+    printf "%7d %5d %s\n", $lc, $wc, $f;
+    $totalwc += $wc;
+    $totallc += $lc;
+}
+
+printf "\n%7d %5d Total\n", $totallc, $totalwc;

Added: FormLayout/trunk/nb4.1/nbbuild/misc/i18ncheck.pl
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/misc/i18ncheck.pl	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/misc/i18ncheck.pl	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,201 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+#
+# i18ncheck.pl - checks java source for internationalizable strings
+#                not 100% foolproof !!
+#
+#
+require 5.005;
+use File::Find;
+
+my $fixmode = 0;
+my @files = ();
+my @modifiedfiles = ();
+my @lines = ();
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-f] file | directory ...\n";
+}
+
+if ($ARGV[0] eq "-f") {
+    $fixmode = 1;
+    shift @ARGV;
+}
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-f] file | directory ...\n";
+}
+
+$SIG{'INT'} = sub {
+    print_summary() if $fixmode;
+    exit 255;
+};
+  
+foreach my $name (@ARGV) {
+    if (-f $name) {
+	push @files, $name;
+    } elsif (-d $name) {
+        find(sub {
+                 if (-f && m,\.java$,) {
+                     push @files, $File::Find::name;
+                 }
+             },
+             $name);
+    }
+}
+
+foreach my $name (@files) {
+    checkfile($name);
+}
+
+print_summary() if $fixmode;
+exit 0;
+
+#
+# subroutines
+#
+
+sub checkfile {
+    my $fname = shift;
+    @lines = ();
+
+    if (! open(FH, "< $fname")) {
+	warn "cannot open file '$fname': $!";
+	return;
+    }
+    @lines = <FH>;
+    close FH;
+    
+    my $lineno = 1;
+    my $modified = 0;
+    
+LOOP:
+    while ($lineno <= $#lines) {
+	$_ = $lines[$lineno - 1];
+        
+        if (m,/\*,,) {
+            while ($lineno <= $#lines) {
+                $_ = $lines[$lineno - 1];
+                if (! m,\*/,) {
+                    $lineno++;
+                    next;
+                } else {
+                    last;
+                }
+            }
+        }
+
+        # skip line comment
+        if (m,(^ *//.*$),) {
+            $_ = $`;
+        }
+        
+        if (checkline($_)) {
+            if ($fixmode) {
+                print "$fname:$lineno:\n";
+                if (fixline($fname, $lineno)) {
+                    $modified = 1;
+                }
+            } else {
+                print "$fname:$lineno: $_";
+            }
+        }
+
+        $lineno++;
+    }
+
+
+    if ($fixmode && $modified) {
+        savefile($fname);
+        push @modifiedfiles, $fname;
+    }
+}
+
+sub fixline {
+    my $fname = shift;
+    my $lineno = shift;
+    my $answer;
+    
+    print "\n";
+    print "   " . $lines[$lineno - 4] if $lineno >= 4;
+    print "   " . $lines[$lineno - 3] if $lineno >= 3;
+    print "   " . $lines[$lineno - 2] if $lineno >= 2;
+    print " =>" . $lines[$lineno - 1] if $lineno >= 1;
+    print "   " . $lines[$lineno] if $lineno <= $#lines;;
+    print "   " . $lines[$lineno + 1] if $lineno + 1 <= $#lines;;
+    print "   " . $lines[$lineno + 2] if $lineno + 2 <= $#lines;;
+    print "\n";
+    
+    do {
+        print "** [M]ark this line with NOI18N -- [S]kip [m]: ";
+        flush;
+        $answer = <STDIN>;
+        chomp $answer;
+    } while (uc($answer) ne "M" && uc($answer) ne "S" && $answer ne "");
+
+    if (uc($answer) eq "S") {
+        return 0;
+    } else {
+        $lines[$lineno - 1] =~ s,\s*$,,;
+        $lines[$lineno - 1] = $lines[$lineno - 1] . " // NOI18N\n";
+        return 1;
+    }
+    
+}
+
+sub savefile {
+    my $fname = shift;
+
+    if (!rename $fname, "$fname.bak") {
+        warn "** Cannot create backup for $fname, changes have not been saved\n";
+        return;
+    }
+
+    if (! open(FH, "> $fname")) {
+        warn "** Cannot save changes in $fname\n";
+    }
+
+    print FH @lines;
+    close FH;
+}
+
+sub checkline {
+    shift;
+
+    return (! m,NOI18N,
+            && ! m,getString\s*\(,
+            && ! m,System\. ?err\. ?print,
+            && ! m,getProperty,
+            && ! m,getBoolean,
+            && ! m,NbBundle\. ?get(Message|LocalizedFile),
+            && ! m,\. ?log\s*\(,
+            && ! m,new HelpCtx\s*\(,
+            && ! m,new PropertyDescriptor\s*\(,
+            && ! m,setIconBase\s*\(,
+            && ! m,loadImage\s*\(,
+            && ! m,getResource(AsStream)?\s*\(,
+            && m,".+", 
+           ); 
+}
+
+sub print_summary {
+    if ($#modifiedfiles < 0) {
+        print "\n\n** No file has been modified\n";
+    } else {
+        print "\n\n** The following files have been modified:\n\n";
+        foreach my $fname (@modifiedfiles) {
+            print "      $fname\n";
+        }
+    }
+}

Added: FormLayout/trunk/nb4.1/nbbuild/module-scripts/default-properties.xml
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/module-scripts/default-properties.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/module-scripts/default-properties.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?> 
+<project name="default-properties" default="netbeans" basedir=".">
+  <dirname property="nb_all" file="${ant.file.default-properties}/../.."/>
+
+  <!-- 
+  Read user's settings 
+  Note: user/site combination is so that you can check site.build.properties
+  into your source tree for everyone to use, and user.build.properties can contain
+  properties specific to your personal setup.
+  -->
+  <property file="${nb_all}/nbbuild/user.build.properties"/>
+  <property file="${nb_all}/nbbuild/site.build.properties"/>
+
+  <property name="homepage.base" value="netbeans.org"/>
+  <property name="dist.base" value="www.netbeans.org/download/nbms/40"/>
+  <property name="license.file" location="${nb_all}/nbbuild/module-scripts/standard-nbm-license.txt"/>
+  <property name="nbm_alias" value="nb_ide"/>
+  <property name="build.sysclasspath" value="ignore"/>
+
+  <property name="user.clusters.list.file" location="${nb_all}/nbbuild/user.cluster.properties"/>
+  <property name="clusters.list.file" location="${nb_all}/nbbuild/cluster-scripts/cluster.properties"/>
+  <property name="netbeans.build.dir" location="${nb_all}/nbbuild/build"/>
+  <property name="moduleCluster.file" location="${netbeans.dest.dir}/moduleCluster.properties"/>
+  <property name="directoryList.file" location="${nb_all}/nbbuild/module-scripts/directories.properties"/>
+  <property name="modulesxml.file" location="${nb_all}/nbbuild/modules.xml"/>
+
+  <property file="${user.clusters.list.file}"/>
+  <property file="${clusters.list.file}"/>
+  <property file="${moduleCluster.file}"/>
+  <property file="${directoryList.file}"/>
+
+</project>

Added: FormLayout/trunk/nb4.1/nbbuild/module-scripts/default.xml
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/module-scripts/default.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/module-scripts/default.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,75 @@
+<project name="default" default="init" basedir=".">
+  <import file="default-properties.xml"/>
+
+  <target name="init-tasks" unless="tasks-already-set">
+    <taskdef name="jhindexer"
+         classname="org.netbeans.nbbuild.JHIndexer"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="makenbm"
+         classname="org.netbeans.nbbuild.MakeNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="genlist"
+         classname="org.netbeans.nbbuild.MakeListOfNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="setcluster"
+         classname="org.netbeans.nbbuild.SetCluster"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="getmodulename"
+         classname="org.netbeans.nbbuild.GetModuleName"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="createmodulexml"
+         classname="org.netbeans.nbbuild.CreateModuleXML"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locjar"
+         classname="org.netbeans.nbbuild.LocalizedJar"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locjhindexer"
+         classname="org.netbeans.nbbuild.LocJHIndexer"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locmakenbm"
+         classname="org.netbeans.nbbuild.LocMakeNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <property name="tasks-already-set" value="true"/>
+  </target>
+  
+  <target name="init" depends="init-tasks,setup-jdkhome">
+    <!-- Gets the module name -->
+    <getmodulename name="module.name" root="${nb_all}"/>
+    
+    <property name="cluster.dir.fallback" value="extra" />
+    <setcluster name="cluster.dir" module="${module.name}" list="${clusters.list}" defaultLocation="${cluster.dir.fallback}"/>
+
+    <!-- Creating the output directory -->
+    <mkdir dir="${netbeans.dest.dir}/${cluster.dir}"/>
+
+    <!-- Writing the module's cluster to property file -->
+    <propertyfile file="${moduleCluster.file}">
+      <entry  key="${module.name}.dir" value="$${netbeans.dest.dir}/${cluster.dir}"/>
+    </propertyfile>
+  </target>
+
+  <target name="setup-jdkhome-1">
+    <!-- Note: user-configured -Djavahome=... will always override this: -->
+    <property name="javahome" location="${java.home}"/>
+    <available property="javahome-valid" file="${javahome}/lib/tools.jar"/>
+    <available classname="com.apple.eawt.Application" property="is-mac"/>
+  </target>
+
+  <target name="setup-jdkhome-2" depends="setup-jdkhome-1" if="javahome-valid">
+    <property name="jdkhome" value="${javahome}"/>
+    <property name="jdkhome-valid" value="true"/>
+  </target>
+
+  <target name="setup-jdkhome-3" depends="setup-jdkhome-1" unless="javahome-valid">
+    <property name="jdkhome" location="${javahome}/.."/>
+    <available property="jdkhome-valid" file="${jdkhome}/lib/tools.jar"/>
+  </target>
+
+  <target name="setup-jdkhome-4" depends="setup-jdkhome-1" if="is-mac">
+      <property name="jdkhome-valid" value="${java.home}/../Classes/classes.jar"/> 
+  </target>
+
+  <target name="setup-jdkhome" depends="setup-jdkhome-2,setup-jdkhome-3,setup-jdkhome-4" unless="jdkhome-valid">
+    <fail message="No tools.jar found in ${javahome}! Set -Djavahome=... as needed."/>
+  </target>
+</project>

Added: FormLayout/trunk/nb4.1/nbbuild/module-scripts/directories.properties
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/module-scripts/directories.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/module-scripts/directories.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,16 @@
+nb.beans.dir=beans
+nb.bin.dir=lib
+nb.docs.dir=docs
+nb.lib.dir=core
+nb.lib/ext.dir=lib
+nb.lib/patches.dir=${nb.lib.dir}/patches
+nb.modules.dir=modules
+nb.modules/autoload.dir=${nb.modules.dir}/autoload
+nb.modules/autoload/docs.dir=${nb.modules/autoload.dir}/docs
+nb.modules/bin.dir=${nb.modules.dir}/lib
+nb.modules/docs.dir=${nb.modules.dir}/docs
+nb.modules/eager.dir=${nb.modules.dir}/eager
+nb.modules/patches.dir=${nb.modules.dir}/patches
+nb.sources.dir=sources
+nb.system.dir=config
+nb.update_tracking.dir=update_tracking

Added: FormLayout/trunk/nb4.1/nbbuild/module-scripts/projectized.xml
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/module-scripts/projectized.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/module-scripts/projectized.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,476 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+<project name="projectized" default="init" basedir=".">
+
+    <!-- XXX supply descriptions for the appropriate targets -->
+    <!-- XXX prefix internal targets with '-' (and grep all module scripts which override or use these targets and update them to match) -->
+    <!-- XXX should use namespaces for NB in-VM tasks from ant/browsetask and debuggerjpda/ant and apisupport/ant -->
+
+    <import file="../module-scripts/default.xml"/>
+
+    <taskdef name="parseprojectxml" classname="org.netbeans.nbbuild.ParseProjectXml" classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+
+    <target name="init" depends="basic-init,files-init,build-init"/>
+
+    <target name="basic-init" depends="default.init">
+        <!-- Synch the following property loads with NbModuleProject.makeEvalDefs: -->
+        <property file="nbproject/private/private.properties"/>
+        <property file="nbproject/project.properties"/>
+        <!-- Do not try to set module.classpath here, in particular: -->
+        <!-- during a clean, the ${foo/bar.dir} properties may not be set. -->
+        <parseprojectxml project="." modulesxml="${modulesxml.file}" codenamebasedashesproperty="code.name.base.dashes" codenamebaseslashesproperty="code.name.base.slashes"/>
+        <property name="module.jar.dir" value="${nb.modules.dir}"/>
+        <property name="module.jar.basename" value="${code.name.base.dashes}.jar"/>
+        <property name="module.jar" value="${module.jar.dir}/${module.jar.basename}"/>
+        <condition property="has.javahelp">
+            <and>
+                <available file="javahelp"/>
+                <!-- Special hack for core: -->
+                <not><available file="javahelp/manifest.mf"/></not>
+            </and>
+        </condition>
+        <condition property="javahelp.jarred">
+            <and>
+                <available file="javahelp/${module.jar.basename}"/>
+            </and>
+        </condition>
+        <property name="javahelp.jar.dir" value="${nb.modules/docs.dir}"/>
+        <property name="javahelp.jar.basename" value="${code.name.base.dashes}.jar"/>
+        <property name="javahelp.jar" value="${javahelp.jar.dir}/${javahelp.jar.basename}"/>
+    </target>
+
+    <target name="files-init" depends="basic-init">
+        <patternset id="module.files">
+            <include name="${module.jar}"/>
+            <include name="${javahelp.jar}" if="has.javahelp"/>
+            <include name="${nb.system.dir}/Modules/${code.name.base.dashes}.xml"/>
+        </patternset>
+    </target>
+
+    <target name="build-init" depends="basic-init">
+        <parseprojectxml project="." modulesxml="${modulesxml.file}" publicpackagesproperty="public.packages" javadocpackagesproperty="module.javadoc.packages" idedependenciesproperty="ide.dependencies" moduledependenciesproperty="module.dependencies" moduleclasspathproperty="module.classpath" domainproperty="nbm.domain"/>
+        <condition property="is.regular">
+            <not>
+                <or>
+                    <isset property="is.autoload"/>
+                    <isset property="is.eager"/>
+                    <equals arg1="${module.jar.dir}" arg2="${nb.lib.dir}"/>
+                </or>
+            </not>
+        </condition>
+        <property name="nbm" value="${code.name.base.dashes}.nbm"/>
+        <property name="build.compiler.debug" value="true"/>
+        <property name="build.compiler.deprecation" value="true"/>
+        <property name="build.sysclasspath" value="ignore"/>
+        <property name="build.compiler.optimize" value="off"/>
+        <property name="build.package.compress" value="false"/>
+        <property name="build.package.index" value="false"/>
+        <property name="manifest.mf" location="manifest.mf"/>
+        <property name="src.dir" location="src"/>
+        <property name="build.classes.dir" location="build/classes"/>
+        <property name="nbm.homepage" value="http://${nbm.domain}.${homepage.base}/"/>
+        <property name="nbm.module.author" value=""/>
+        <property name="nbm.release.date" value=""/>
+        <property name="nbm.needs.restart" value="false"/>
+        <path id="cp">
+            <pathelement path="${module.classpath}"/>
+            <pathelement path="${cp.extra}"/>
+        </path>
+        <property name="build.javahelp.dir" location="build/javahelp"/>
+        <property name="javahelp.base" value="${code.name.base.slashes}/docs"/>
+        <property name="javahelp.search" value="JavaHelpSearch"/>
+        <property name="javahelp.excludes" value="credits.html"/>
+    </target>
+
+    <target name="test-preinit" depends="init"/>
+    <target name="test-init" depends="init,test-preinit">
+        <property name="test.unit.src.dir" location="test/unit/src"/>
+        <property name="build.test.unit.classes.dir" location="build/test/unit/classes"/>
+        <property name="build.test.unit.results.dir" location="build/test/unit/results"/>
+        <property name="test.filter.trace" value="true"/>
+        <path id="test.unit.cp">
+            <path refid="cp"/>
+            <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${module.jar}"/>
+            <!-- XXX check if these files exist, and if not, run xtest/build.xml -->
+            <pathelement location="${nb_all}/xtest/lib/junit.jar"/>
+            <pathelement location="${nb_all}/xtest/lib/nbjunit.jar"/>
+            <pathelement path="${test.unit.cp.extra}"/>
+        </path>
+        <path id="test.unit.run.cp">
+            <path refid="test.unit.cp"/>
+            <pathelement location="${build.test.unit.classes.dir}"/>
+            <pathelement path="${test.unit.run.cp.extra}"/>
+        </path>
+        <propertyset id="test.unit.properties">
+            <propertyref prefix="test-unit-sys-prop."/>
+            <mapper type="glob" from="test-unit-sys-prop.*" to="*"/>
+        </propertyset>
+    </target>
+
+    <target name="compile" depends="init">
+        <mkdir dir="${build.classes.dir}"/>
+        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="${build.compiler.debug}" deprecation="${build.compiler.deprecation}" optimize="${build.compiler.optimize}" source="1.4" includeantruntime="false">
+            <classpath refid="cp"/>
+        </javac>
+        <copy todir="${build.classes.dir}">
+            <fileset dir="${src.dir}" excludesfile="${nb_all}/nbbuild/module-scripts/standard-jar-excludes.txt"/>
+        </copy>
+    </target>
+
+    <target name="compile-single" depends="init">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <mkdir dir="${build.classes.dir}"/>
+        <!-- XXX consider forcing debug=true and deprecation=true -->
+        <!-- XXX consider deleting the .class file first to force a rebuild -->
+        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
+               debug="${build.compiler.debug}" deprecation="${build.compiler.deprecation}"
+               source="1.4" includes="${javac.includes}" optimize="${build.compiler.optimize}" includeantruntime="false">
+            <classpath refid="cp"/>
+        </javac>
+    </target>
+
+    <target name="jar-prep" depends="init">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${module.jar.dir}"/>
+        <tstamp>
+            <format property="buildnumber" pattern="yyMMdd" timezone="UTC"/>
+        </tstamp>
+    </target>
+
+    <target name="jar-no-module-deps" unless="module.dependencies">
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}">
+            <!-- XXX it seems that using <manifest> forces the JAR to be recreated each time -->
+            <!-- (presumably due to the variable OIDE-M-I-V) -->
+            <!-- so might have to use e.g. <manifest> task (created in build/ somewhere)? -->
+            <!-- Cf: http://issues.apache.org/bugzilla/show_bug.cgi?id=29085 -->
+            <manifest>
+                <attribute name="OpenIDE-Module-Public-Packages" value="${public.packages}"/>
+                <attribute name="OpenIDE-Module-IDE-Dependencies" value="${ide.dependencies}"/>
+                <!-- XXX make this conditional so can use OIDE-M-B-V instead -->
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${build.classes.dir}"/>
+        </jar>
+    </target>
+
+    <target name="jar-with-module-deps" if="module.dependencies">
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}">
+            <manifest>
+                <attribute name="OpenIDE-Module-Public-Packages" value="${public.packages}"/>
+                <attribute name="OpenIDE-Module-IDE-Dependencies" value="${ide.dependencies}"/>
+                <attribute name="OpenIDE-Module-Module-Dependencies" value="${module.dependencies}"/>
+                <!-- XXX make this conditional so can use OIDE-M-B-V instead -->
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${build.classes.dir}"/>
+        </jar>
+    </target>
+
+    <!-- XXX need to actually use 4 targets, I guess, depending on whether or not ${ide.dependencies} is defined: -->
+    <target name="jar" depends="init,compile,jar-prep,jar-no-module-deps,jar-with-module-deps"/>
+    
+    <target name="reload" depends="init,jar">
+        <fail unless="netbeans.user">Reloading modules works only inside the NetBeans IDE</fail>
+        <nbinstaller module="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" action="reinstall"/>
+    </target>
+
+    <!-- Can insert extra stuff in here, like release, etc.: -->
+    <target name="netbeans-extra"/>
+
+    <target name="module-xml-regular" if="is.regular">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <enabled dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </enabled>
+        </createmodulexml>
+    </target>
+
+    <target name="module-xml-autoload" if="is.autoload">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <autoload dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </autoload>
+        </createmodulexml>
+    </target>
+
+    <target name="module-xml-eager" if="is.eager">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <eager dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </eager>
+        </createmodulexml>
+    </target>
+
+    <target name="netbeans" depends="init,jar,netbeans-extra,module-xml-regular,module-xml-autoload,module-xml-eager,javahelp">
+        <genlist outputfiledir="${netbeans.dest.dir}/${cluster.dir}" module="${module.jar}">
+            <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
+                <patternset refid="module.files"/>
+            </fileset>
+        </genlist>
+    </target>
+    
+    <target name="nbm" depends="init,netbeans" description="Build NBM archive.">
+        <mkdir dir="${build.dir}"/>
+        <makenbm file="${build.dir}/${nbm}"
+                 productdir="${netbeans.dest.dir}/${cluster.dir}"
+                 module="${module.jar}"
+                 homepage="${nbm.homepage}"
+                 distribution="${nbm.distribution}"
+                 needsrestart="${nbm.needs.restart}"
+                 releasedate="${nbm.release.date}"
+                 moduleauthor="${nbm.module.author}">
+            <license file="${license.file}"/>
+            <signature keystore="${keystore}" storepass="${storepass}" alias="${nbm_alias}"/>
+        </makenbm>
+    </target>
+
+    <target name="javadoc" depends="init">
+        <fail unless="javadoc.name">Must set javadoc.name</fail>
+        <fail unless="javadoc.title">Must set javadoc.title</fail>
+        <!-- This should become an import at some point, perhaps: -->
+        <ant dir="${nb_all}/nbbuild/javadoctools" antfile="template.xml" target="javadoc">
+            <property name="javadoc.base" location="."/>
+            <property name="javadoc.packages" value="${module.javadoc.packages}"/>
+            <property name="javadoc.classpath" refid="cp"/>
+            <property name="javadoc.manifest" location="${manifest.mf}"/>
+        </ant>
+    </target>
+
+    <target name="javadoc-nb" depends="init,javadoc" if="netbeans.user">
+        <nbbrowse file="javadoc/${javadoc.name}/index.html"/>
+    </target>
+    
+    <target name="arch" depends="init" description="Process an arch.xml, creating it if it does not yet exist.">
+        <fail unless="javadoc.arch">You must define e.g. javadoc.arch=$${basedir}/arch.xml in project.properties</fail>
+        <property name="arch.output.html" location="${java.io.tmpdir}/arch.html"/>
+        <property name="arch.generate" value="true"/>
+        <taskdef name="arch" classname="org.netbeans.nbbuild.Arch" classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+        <arch answers="${javadoc.arch}" output="${arch.output.html}"/>
+    </target>
+    
+    <target name="arch-nb" depends="init,arch" if="netbeans.user" description="Process an arch.xml, creating it if it does not yet exist, and display the result.">
+        <nbbrowse file="${arch.output.html}"/>
+    </target>
+        
+    <target name="test-build" depends="init,test-init,jar">
+        <mkdir dir="${build.test.unit.classes.dir}"/>
+        <javac srcdir="${test.unit.src.dir}" destdir="${build.test.unit.classes.dir}"
+               debug="true" deprecation="${build.compiler.deprecation}"
+               source="1.4" optimize="${build.compiler.optimize}" includeantruntime="false">
+               <exclude name="**/jars/**"/><!-- XXX for core only; fix in core, not here -->
+            <classpath refid="test.unit.cp"/>
+        </javac>
+        <copy todir="${build.test.unit.classes.dir}">
+            <fileset dir="${test.unit.src.dir}">
+                <exclude name="**/*.java"/>
+            </fileset>
+        </copy>
+    </target>
+
+    <target name="compile-test-single" depends="init,test-init,jar">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <mkdir dir="${build.test.unit.classes.dir}"/>
+        <!-- XXX consider forcing deprecation=true -->
+        <!-- XXX consider deleting the .class file first to force a rebuild -->
+        <javac srcdir="${test.unit.src.dir}" destdir="${build.test.unit.classes.dir}"
+               debug="true" deprecation="${build.compiler.deprecation}"
+               source="1.4" includeantruntime="false" optimize="${build.compiler.optimize}" includes="${javac.includes}">
+            <classpath refid="test.unit.cp"/>
+        </javac>
+    </target>
+
+    <target name="test" depends="init,test-init,test-build">
+        <mkdir dir="${build.test.unit.results.dir}"/>
+        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed" filtertrace="${test.filter.trace}">
+            <batchtest todir="${build.test.unit.results.dir}">
+                <fileset dir="${test.unit.src.dir}">
+                    <!-- XXX could include only out-of-date tests... -->
+                    <include name="**/*Test.java"/>
+                </fileset>
+            </batchtest>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <!-- <assertions> does not seem to work in Ant 1.6.1? -->
+            <jvmarg value="-ea"/>
+            <formatter type="brief" usefile="false"/>
+        </junit>
+        <fail if="tests.failed">Some tests failed; see details above.</fail>
+    </target>
+
+    <target name="test-single" depends="init,test-init,test-build">
+        <fail unless="test.includes">Must set test.includes</fail>
+        <mkdir dir="${build.test.unit.results.dir}"/>
+        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed" filtertrace="${test.filter.trace}">
+            <batchtest todir="${build.test.unit.results.dir}">
+                <fileset dir="${test.unit.src.dir}" includes="${test.includes}"/>
+            </batchtest>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <!-- <assertions> does not seem to work in Ant 1.6.1? -->
+            <jvmarg value="-ea"/>
+            <formatter type="brief" usefile="false"/>
+        </junit>
+        <fail if="tests.failed">Some tests failed; see details above.</fail>
+    </target>
+
+    <target name="do-debug-test-single">
+        <fail unless="test.class">Must set test.class</fail>
+        <java fork="true" classname="junit.textui.TestRunner">
+            <jvmarg value="-Xdebug"/>
+            <jvmarg value="-Xnoagent"/>
+            <jvmarg value="-Djava.compiler=none"/>
+            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
+            <jvmarg value="-ea"/>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <arg line="${test.class}"/>
+        </java>
+    </target>
+
+    <!-- apisupport/project could calls this for the debug action. -->
+    <!-- You can also call it directly from the nbbuild/misc pseudoproject. -->
+    <target name="debug" depends="netbeans">
+        <ant dir="${nb_all}/nbbuild" target="tryme-debug"/>
+    </target>
+
+    <target name="debug-test-single" depends="init,test-init,test-build,do-debug-test-single"/>
+
+    <target name="debug-test-single-nb" depends="init,test-init,test-build" if="netbeans.user">
+        <fail unless="test.class">Must set test.class</fail>
+        <nbjpdastart transport="dt_socket" addressproperty="jpda.address" name="${test.class}">
+            <classpath>
+                <path refid="test.unit.run.cp"/>
+                <!-- Permit extra sources to be searched even if they are not in the actual CP. -->
+                <!-- Used e.g. from ant/test/unit since some tests use dynamic loading: -->
+                <pathelement path="${test.unit.debug.cp.extra}"/>
+            </classpath>
+        </nbjpdastart>
+        <antcall target="do-debug-test-single"/>
+    </target>
+
+    <target name="-pre-debug-fix" depends="init">
+        <fail unless="fix.class">Must set fix.class to e.g. org/netbeans/modules/foo/Bar</fail>
+        <property name="javac.includes" value="${fix.class}.java"/>
+    </target>
+    <target name="debug-fix-nb" if="netbeans.user" depends="init,-pre-debug-fix,compile-single">
+        <nbjpdareload>
+            <fileset includes="${fix.class}*.class" dir="${build.classes.dir}"/>
+        </nbjpdareload>
+    </target>
+
+    <!-- support either:
+         1. contents of help set in javahelp/ directory
+         2. contents of help set in a jar file in javahelp/module-name.jar
+    -->
+    <target name="javahelp-impl-jarred" if="javahelp.jarred">
+        <copy todir="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar.dir}">
+            <fileset dir="javahelp">
+                <include name="${module.jar.basename}"/>
+            </fileset>
+        </copy>
+    </target>
+
+    <target name="javahelp-impl-unjarred" unless="javahelp.jarred">
+        <mkdir dir="${build.javahelp.dir}/${javahelp.base}/${javahelp.search}"/>
+        <copy todir="${build.javahelp.dir}">
+            <fileset dir="javahelp" excludesfile="${nb_all}/nbbuild/module-scripts/standard-jar-excludes.txt"/>
+        </copy>
+        <jhindexer basedir="${build.javahelp.dir}/${javahelp.base}"
+                   db="${build.javahelp.dir}/${javahelp.base}/${javahelp.search}">
+            <classpath>
+                <fileset dir="${nb_all}/nbbuild/external">
+                    <include name="jhall*.jar"/>
+                </fileset>
+            </classpath>
+            <include name="**/*.html"/>
+            <include name="**/*.htm"/>
+            <exclude name="${javahelp.search}/"/>
+            <exclude name="${javahelp.excludes}"/>
+        </jhindexer>
+        <!-- Add ide.css for easy previewing only; usersguide provides it in distro: -->
+        <!-- (XXX maybe the viewer task can automagically do this...) -->
+        <mkdir dir="${build.javahelp.dir}/org/netbeans/modules/usersguide"/>
+        <copy tofile="${build.javahelp.dir}/org/netbeans/modules/usersguide/ide.css"
+              file="${nb_all}/usersguide/javahelp/org/netbeans/modules/usersguide/ide.css"
+              failonerror="false"/>
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar.dir}"/>
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar}" compress="true">
+            <fileset dir="${build.javahelp.dir}">
+                <!-- XXX this does not exclude the folder, unfortunately... -->
+                <exclude name="org/netbeans/modules/usersguide/ide.css"/>
+            </fileset>
+        </jar>
+    </target>
+
+    <target name="javahelp" depends="init" if="has.javahelp">
+        <antcall target="javahelp-impl-jarred"/>
+        <antcall target="javahelp-impl-unjarred"/>
+    </target>
+
+    <target name="check-javahelp" depends="javahelp" description="Validate helpset for various errors." if="has.javahelp">
+        <fail unless="javahelp.hs">Must set javahelp.hs property</fail>
+        <taskdef name="checkhelpsets" classname="org.netbeans.nbbuild.CheckHelpSets">
+            <classpath>
+                <pathelement location="${nb_all}/nbbuild/lib/nbantext.jar"/>
+                <fileset dir="${nb_all}/nbbuild/external">
+                    <include name="jhall*.jar"/>
+                </fileset>
+            </classpath>
+        </taskdef>
+        <checkhelpsets>
+            <!-- XXX need to check against real files (since there may be some processing) but should use a link mapper: -->
+            <fileset dir="${build.javahelp.dir}">
+                <include name="${javahelp.base}/${javahelp.hs}"/>
+            </fileset>
+        </checkhelpsets>
+    </target>
+
+    <!-- XXX need target to preview javahelp in a viewer like this: -->
+    <!--
+    HelpSet hs = new HelpSet(someClassLoader, f.toURI().toURL());
+    String title = hs.getTitle();
+    if (title == null) {
+        title = f.getAbsolutePath();
+    }
+    JDialog dlg = new JDialog(WindowManager.getDefault().getMainWindow(), title, false);
+    dlg.getContentPane().add(new JHelp(hs), BorderLayout.CENTER);
+    dlg.setSize(920, 660); // match min size of IDE's viewer
+    dlg.pack();
+    dlg.addWindowListener(this);
+    dlg.show();
+    synchronized (this) {
+        wait();
+    }
+    // ...
+    public synchronized void windowClosing(WindowEvent ev) {
+        notify();
+    }
+    -->
+
+    <target name="clean" depends="files-init">
+        <delete dir="${build.dir}"/>
+        <delete dir="javadoc"/>
+        <delete>
+            <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
+                <patternset refid="module.files"/>
+            </fileset>
+        </delete>
+        <delete file="${netbeans.dest.dir}/${cluster.dir}/update_tracking/${code.name.base.dashes}.xml"/>
+    </target>
+
+</project>

Added: FormLayout/trunk/nb4.1/nbbuild/module-scripts/standard-jar-excludes.txt
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/module-scripts/standard-jar-excludes.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/module-scripts/standard-jar-excludes.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,13 @@
+**/*.java
+**/*.jj
+**/*.jjt
+**/*.orig
+**/*.bak
+**/*.rej
+**/*.form
+**/*.jar.MAKEME
+**/filesystem.attributes
+**/.nbattrs
+**/.#*
+**/package.html
+**/doc-files/

Added: FormLayout/trunk/nb4.1/nbbuild/module-scripts/standard-nbm-license.txt
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/module-scripts/standard-nbm-license.txt	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/module-scripts/standard-nbm-license.txt	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,15 @@
+This module is part of NetBeans and is open-source.
+You can see http://www.netbeans.org/license.html for details.
+
+You may use the binary however you like. The source file license is:
+
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.

Added: FormLayout/trunk/nb4.1/nbbuild/moduledefs-tmp.properties
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/moduledefs-tmp.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/moduledefs-tmp.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1 @@
+modules=${cluster.nblayoutpack}
\ No newline at end of file

Added: FormLayout/trunk/nb4.1/nbbuild/modules.xml
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/modules.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/modules.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,769 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+This file maps directory names to the module names.
+It must contain all the modules (netbeans modules and
+your cluster modules).
+-->
+
+<modules>
+    <module>
+        <path>nblayoutpack/formlayout</path>
+        <cnb>de.berlios.nblayoutpack.formlayout</cnb>
+    </module>
+
+<!-- =================================== -->
+<!-- =====   Netbeans Modules   ======== -->
+<!-- =================================== -->
+    <module>
+        <path>ant</path>
+        <cnb>org.apache.tools.ant.module</cnb>
+    </module>
+    <module>
+        <path>ant/browsetask</path>
+        <cnb>org.netbeans.modules.ant.browsetask</cnb>
+    </module>
+    <module>
+        <path>ant/docs</path>
+        <cnb>org.apache.tools.ant.module.docs</cnb>
+    </module>
+    <module>
+        <path>ant/freeform</path>
+        <cnb>org.netbeans.modules.ant.freeform</cnb>
+    </module>
+    <module>
+        <path>ant/grammar</path>
+        <cnb>org.netbeans.modules.ant.grammar</cnb>
+    </module>
+    <module>
+        <path>ant/project</path>
+        <cnb>org.netbeans.modules.project.ant</cnb>
+    </module>
+    <module>
+        <path>apisupport</path>
+        <cnb>org.netbeans.modules.apisupport</cnb>
+    </module>
+    <module>
+        <path>apisupport/ant</path>
+        <cnb>org.netbeans.modules.apisupport.ant</cnb>
+    </module>
+    <module>
+        <path>apisupport/lite</path>
+        <cnb>org.netbeans.modules.apisupport.lite</cnb>
+    </module>
+    <module>
+        <path>apisupport/project</path>
+        <cnb>org.netbeans.modules.apisupport.project</cnb>
+    </module>
+    <module>
+        <path>autoupdate</path>
+        <cnb>org.netbeans.modules.autoupdate</cnb>
+    </module>
+    <module>
+        <path>beans</path>
+        <cnb>org.netbeans.modules.beans</cnb>
+    </module>
+    <module>
+        <path>classfile</path>
+        <cnb>org.netbeans.modules.classfile</cnb>
+    </module>
+    <module>
+        <path>clazz</path>
+        <cnb>org.netbeans.modules.clazz</cnb>
+    </module>
+    <module>
+        <path>contrib/docbook</path>
+        <cnb>org.netbeans.modules.docbook</cnb>
+    </module>
+    <module>
+        <path>contrib/mount</path>
+        <cnb>org.netbeans.modules.mount</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator</path>
+        <cnb>org.netbeans.modules.navigator</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator/javagator</path>
+        <cnb>org.netbeans.modules.javagator</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator/propagator</path>
+        <cnb>org.netbeans.modules.propagator</cnb>
+    </module>
+    <module>
+        <path>contrib/options</path>
+        <cnb>org.netbeans.modules.options</cnb>
+    </module>
+    <module>
+        <path>contrib/options/baseoptions</path>
+        <cnb>org.netbeans.modules.baseoptions</cnb>
+    </module>
+    <module>
+        <path>contrib/options/optionscore</path>
+        <cnb>org.netbeans.modules.optionscore</cnb>
+    </module>
+    <module>
+        <path>core</path>
+        <cnb>org.netbeans.core</cnb>
+        <jar>lib/core.jar</jar>
+    </module>
+    <module>
+        <path>core/compiler</path>
+        <cnb>org.netbeans.core.compiler</cnb>
+        <jar>modules/autoload/core-compiler.jar</jar>
+    </module>
+    <module>
+        <path>core/deprecated</path>
+        <cnb>org.netbeans.core.deprecated</cnb>
+        <jar>modules/autoload/core-deprecated.jar</jar>
+    </module>
+    <module>
+        <path>core/execution</path>
+        <cnb>org.netbeans.core.execution</cnb>
+    </module>
+    <module>
+        <path>core/ide</path>
+        <cnb>org.netbeans.core.ide</cnb>
+    </module>
+    <module>
+        <path>core/javahelp</path>
+        <cnb>org.netbeans.modules.javahelp</cnb>
+    </module>
+    <module>
+        <path>core/output</path>
+        <cnb>org.netbeans.core.output</cnb>
+    </module>
+    <module>
+        <path>core/output2</path>
+        <cnb>org.netbeans.core.output2</cnb>
+    </module>
+    <module>
+        <path>core/registry</path>
+        <cnb>org.netbeans.core.registry</cnb>
+    </module>
+    <module>
+        <path>core/settings</path>
+        <cnb>org.netbeans.modules.settings</cnb>
+    </module>
+    <module>
+        <path>core/swing/plaf</path>
+        <cnb>org.netbeans.swing.plaf</cnb>
+        <jar>lib/org-netbeans-swing-plaf.jar</jar>
+    </module>
+    <module>
+        <path>core/swing/tabcontrol</path>
+        <cnb>org.netbeans.swing.tabcontrol</cnb>
+    </module>
+    <module>
+        <path>core/term</path>
+        <cnb>org.netbeans.lib.terminalemulator</cnb>
+    </module>
+    <module>
+        <path>core/ui</path>
+        <cnb>org.netbeans.core.ui</cnb>
+    </module>
+    <module>
+        <path>core/windows</path>
+        <cnb>org.netbeans.core.windows</cnb>
+    </module>
+    <module>
+        <path>core/multiview</path>
+        <cnb>org.netbeans.core.multiview</cnb>
+    </module>
+    <module>
+        <path>core/favorites</path>
+        <cnb>org.netbeans.modules.favorites</cnb>
+    </module>
+    <module>
+        <path>db</path>
+        <cnb>org.netbeans.modules.db</cnb>
+    </module>
+    <module>
+        <path>debuggercore/oldapi</path>
+        <cnb>org.openide.debugger</cnb>
+    </module>
+    <module>
+        <path>debuggercore</path>
+        <cnb>org.netbeans.spi.debugger.ui</cnb>
+    </module>
+    <module>
+        <path>debuggercore/api</path>
+        <cnb>org.netbeans.api.debugger</cnb>
+    </module>
+    <module>
+        <path>debuggercore/viewmodel</path>
+        <cnb>org.netbeans.spi.viewmodel</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/api</path>
+        <cnb>org.netbeans.api.debugger.jpda</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/ant</path>
+        <cnb>org.netbeans.modules.debugger.jpda.ant</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda</path>
+        <cnb>org.netbeans.modules.debugger.jpda</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/ui</path>
+        <cnb>org.netbeans.modules.debugger.jpda.ui</cnb>
+    </module>
+    <module>
+        <path>diff</path>
+        <cnb>org.netbeans.modules.diff</cnb>
+    </module>
+    <module>
+        <path>editor</path>
+        <cnb>org.netbeans.modules.editor</cnb>
+    </module>
+    <module>
+        <path>editor/lib</path>
+        <cnb>org.netbeans.modules.editor.lib</cnb>
+    </module>
+    <module>
+        <path>editor/fold</path>
+        <cnb>org.netbeans.modules.editor.fold</cnb>
+    </module>
+    <module>
+        <path>editor/util</path>
+        <cnb>org.netbeans.modules.editor.util</cnb>
+    </module>
+    <module>
+        <path>extbrowser</path>
+        <cnb>org.netbeans.modules.extbrowser</cnb>
+    </module>
+    <module>
+        <path>form</path>
+        <cnb>org.netbeans.modules.form</cnb>
+    </module>
+    <module>
+        <path>html</path>
+        <cnb>org.netbeans.modules.html</cnb>
+    </module>
+    <module>
+        <path>httpserver</path>
+        <cnb>org.netbeans.modules.httpserver</cnb>
+    </module>
+    <module>
+        <path>httpserver/servletapi</path>
+        <cnb>org.netbeans.modules.servletapi</cnb>
+        <jar>modules/autoload/servletapi.jar</jar>
+    </module>
+    <module>
+        <path>i18n</path>
+        <cnb>org.netbeans.modules.i18n</cnb>
+    </module>
+    <module>
+        <path>i18n/form</path>
+        <cnb>org.netbeans.modules.i18n.form</cnb>
+    </module>
+    <module>
+        <path>ide/applemenu</path>
+        <cnb>org.netbeans.modules.applemenu</cnb>
+    </module>
+    <module>
+        <path>ide/updatecenters</path>
+        <cnb>org.netbeans.modules.updatecenters</cnb>
+    </module>
+    <module>
+        <path>ide/welcome</path>
+        <cnb>org.netbeans.modules.welcome</cnb>
+    </module>
+    <module>
+        <path>image</path>
+        <cnb>org.netbeans.modules.image</cnb>
+    </module>
+    <module>
+        <path>j2eeserver</path>
+        <cnb>org.netbeans.modules.j2eeserver</cnb>
+    </module>
+    <module>
+        <path>j2eeserver/j2eeapis</path>
+        <cnb>org.netbeans.modules.j2eeapis</cnb>
+        <jar>modules/autoload/j2eeapis.jar</jar>
+    </module>
+    <module>
+        <path>j2eeserver/ant</path>
+        <cnb>org.netbeans.modules.j2ee.ant</cnb>
+    </module>
+    <module>
+        <path>java</path>
+        <cnb>org.netbeans.modules.java</cnb>
+    </module>
+    <module>
+        <path>java/api</path>
+        <cnb>org.netbeans.api.java</cnb>
+    </module>
+    <module>
+        <path>java/j2seplatform</path>
+        <cnb>org.netbeans.modules.java.j2seplatform</cnb>
+    </module>
+    <module>
+        <path>java/j2seproject</path>
+        <cnb>org.netbeans.modules.java.j2seproject</cnb>
+    </module>
+    <module>
+        <path>java/javacore</path>
+        <cnb>org.netbeans.modules.javacore</cnb>
+    </module>
+    <module>
+        <path>java/javamodel</path>
+        <cnb>org.netbeans.jmi.javamodel</cnb>
+    </module>
+    <module>
+        <path>java/platform</path>
+        <cnb>org.netbeans.modules.java.platform</cnb>
+    </module>
+    <module>
+        <path>java/project</path>
+        <cnb>org.netbeans.modules.java.project</cnb>
+    </module>
+    <module>
+        <path>java/srcmodel</path>
+        <cnb>org.openide.src</cnb>
+    </module>
+    <module>
+        <path>javacvs/compat</path>
+        <cnb>org.netbeans.modules.cvsclient</cnb>
+        <jar>modules/javacvscompat.jar</jar>
+    </module>
+    <module>
+        <path>javacvs/libmodule</path>
+        <cnb>org.netbeans.lib.cvsclient</cnb>
+    </module>
+    <module>
+        <path>javadoc</path>
+        <cnb>org.netbeans.modules.javadoc</cnb>
+    </module>
+    <module>
+        <path>jellytools</path>
+        <cnb>org.netbeans.modules.jellytools</cnb>
+    </module>
+    <module>
+        <path>jemmy/idemodule</path>
+        <cnb>org.netbeans.modules.jemmy.idemodule</cnb>
+    </module>
+    <module>
+        <path>jemmysupport</path>
+        <cnb>org.netbeans.modules.jemmysupport</cnb>
+    </module>
+    <module>
+        <path>junit</path>
+        <cnb>org.netbeans.modules.junit</cnb>
+    </module>
+    <module>    
+        <path>latex/ant/antint</path>
+        <cnb>org.netbeans.modules.latex.antint</cnb>
+    </module>
+    <module>
+        <path>latex/auted</path>
+        <cnb>org.netbeans.modules.latex.auted</cnb>
+    </module>
+    <module>
+        <path>latex/bibtex</path>
+        <cnb>org.netbeans.modules.latex.bibtex</cnb>
+    </module>
+    <module>
+        <path>latex/branding</path>
+        <cnb>org.netbeans.modules.latex.branding</cnb>
+    </module>
+    <module>
+        <path>latex/core</path>
+        <cnb>org.netbeans.modules.latex</cnb>
+    </module>
+    <module>
+        <path>latex/editor</path>
+        <cnb>org.netbeans.modules.latex.editor</cnb>
+    </module>
+    <module>
+        <path>latex/guiproject</path>
+        <cnb>org.netbeans.modules.latex.guiproject</cnb>
+    </module>
+    <module>
+        <path>latex/loaders</path>
+        <cnb>org.netbeans.modules.latex.loaders</cnb>
+    </module>
+    <module>
+        <path>latex/manual</path>
+        <cnb>org.netbeans.modules.latex.help</cnb>
+    </module>
+    <module>
+        <path>latex/model</path>
+        <cnb>org.netbeans.modules.latex.model</cnb>
+    </module>
+    <module>
+        <path>latex/nexplorer</path>
+        <cnb>org.netbeans.modules.nexplorer</cnb>
+    </module>
+    <module>
+        <path>latex/project</path>
+        <cnb>org.netbeans.modules.latex.project</cnb>
+    </module>
+    <module>
+        <path>latex/ui</path>
+        <cnb>org.netbeans.modules.latex.ui</cnb>
+    </module>
+    <module>
+        <path>lexer</path>
+        <cnb>org.netbeans.modules.lexer</cnb>
+    </module>
+    <module>
+        <path>lexer/editorbridge</path>
+        <cnb>org.netbeans.modules.lexer.editorbridge</cnb>
+    </module>
+    <module>
+        <path>libs/commons_logging</path>
+        <cnb>org.netbeans.libs.commons_logging</cnb>
+    </module>
+    <module>
+        <path>libs/j2eeeditor</path>
+        <cnb>org.netbeans.libs.j2eeeditor</cnb>
+        <jar>modules/autoload/j2eeeditor.jar</jar>
+    </module>
+    <module>
+        <path>libs/jaxp</path>
+        <cnb>org.netbeans.libs.jaxp</cnb>
+        <jar>modules/autoload/jaxp.jar</jar>
+    </module>
+    <module>
+        <path>libs/regexp</path>
+        <cnb>org.netbeans.libs.regexp</cnb>
+        <jar>modules/autoload/nb-regexp-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>libs/xalan</path>
+        <cnb>org.netbeans.libs.xalan</cnb>
+        <jar>modules/autoload/nb-xalan-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>libs/xerces</path>
+        <cnb>org.netbeans.libs.xerces</cnb>
+        <jar>modules/autoload/nb-xerces-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>mdr/jmi</path>
+        <cnb>javax.jmi.reflect</cnb>
+    </module>
+    <module>
+        <path>mdr/nbjmiutils</path>
+        <cnb>org.netbeans.modules.jmiutils</cnb>
+    </module>
+    <module>
+        <path>mdr/mdrapi</path>
+        <cnb>org.netbeans.api.mdr</cnb>
+    </module>
+    <module>
+        <path>mdr/module</path>
+        <cnb>org.netbeans.modules.mdr</cnb>
+    </module>
+    <module>
+        <path>mdr/mof</path>
+        <cnb>javax.jmi.model</cnb>
+    </module>
+    <module>
+        <path>monitor</path>
+        <cnb>org.netbeans.modules.web.monitor</cnb>
+    </module>
+    <module>
+        <path>openide</path>
+        <cnb>org.openide</cnb>
+        <jar>lib/openide.jar</jar>
+    </module>
+    <module>
+        <path>openide/compiler</path>
+        <cnb>org.openide.compiler</cnb>
+    </module>
+    <module>
+        <path>openide/convertor</path>
+        <cnb>org.netbeans.modules.convertor</cnb>
+    </module>
+    <module>
+        <path>openide/deprecated</path>
+        <cnb>org.openide.deprecated</cnb>
+    </module>
+    <module>
+        <path>openide/execution</path>
+        <cnb>org.openide.execution</cnb>
+    </module>
+    <module>
+        <path>openide/execution/deprecated</path>
+        <cnb>org.openide.execution.deprecated</cnb>
+    </module>
+    <module>
+        <path>openide/io</path>
+        <cnb>org.openide.io</cnb>
+    </module>
+    <module>
+        <path>openide/loaders</path>
+        <cnb>org.openide.loaders</cnb>
+        <jar>lib/openide-loaders.jar</jar>
+    </module>
+    <module>
+        <path>openide/masterfs</path>
+        <cnb>org.netbeans.modules.masterfs</cnb>
+    </module>
+    <module>
+        <path>openide/registry</path>
+        <cnb>org.netbeans.modules.registry</cnb>
+    </module>
+     <module>
+        <path>openide/looks</path>
+        <cnb>org.netbeans.modules.looks</cnb>
+    </module>
+    <module>
+        <path>openidex</path>
+        <cnb>org.openidex.util</cnb>
+    </module>
+    <module>
+        <path>performance/insane</path>
+        <cnb>org.netbeans.modules.performance.insane</cnb>
+    </module>
+    <module>
+        <path>projects/libraries</path>
+        <cnb>org.netbeans.modules.project.libraries</cnb>
+    </module>
+    <module>
+        <path>projects/projectapi</path>
+        <cnb>org.netbeans.modules.projectapi</cnb>
+    </module>
+    <module>
+        <path>projects/projectui</path>
+        <cnb>org.netbeans.modules.projectui</cnb>
+    </module>
+        <module>
+        <path>projects/projectuiapi</path>
+        <cnb>org.netbeans.modules.projectuiapi</cnb>
+    </module>
+    <module>
+        <path>projects/queries</path>
+        <cnb>org.netbeans.modules.queries</cnb>
+    </module>
+    <module>
+        <path>properties</path>
+        <cnb>org.netbeans.modules.properties</cnb>
+        <jar>modules/properties.jar</jar>
+    </module>
+    <module>
+        <path>refactoring</path>
+        <cnb>org.netbeans.modules.refactoring</cnb>
+    </module>
+    <module>
+        <path>scripting</path>
+        <cnb>org.netbeans.modules.scripting</cnb>
+    </module>
+    <module>
+        <path>scripting/bsf</path>
+        <cnb>org.netbeans.modules.scripting.bsf</cnb>
+    </module>
+    <module>
+        <path>schema2beans/rt</path>
+        <cnb>org.netbeans.modules.schema2beans</cnb>
+    </module>
+    <module>
+        <path>sysprops</path>
+        <cnb>org.netbeans.modules.sysprops</cnb>
+    </module>
+    <module>
+        <path>tasklist/api</path>
+        <cnb>org.netbeans.tasklistapi</cnb>
+        <jar>modules/autoload/tasklist-api.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/core</path>
+        <cnb>org.netbeans.modules.tasklist.core</cnb>
+        <jar>modules/autoload/tasklist-core.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/docscan</path>
+        <cnb>org.netbeans.modules.tasklist.docscan</cnb>
+        <jar>modules/tasklist-docscan.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/pmd</path>
+        <cnb>org.netbeans.modules.tasklist.pmd</cnb>
+        <jar>modules/eager/tasklist-pmd.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/suggestions</path>
+        <cnb>org.netbeans.modules.suggestions_framework</cnb>
+        <jar>modules/autoload/suggestions-framework.jar</jar>
+    </module>
+    <module>
+        <path>text</path>
+        <cnb>org.netbeans.modules.text</cnb>
+    </module>
+    <module>
+        <path>tomcatint/bundledtomcat</path>
+        <cnb>org.netbeans.modules.web.tomcat.bundled</cnb>
+        <jar>modules/tomcat40-bundled.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat40</path>
+        <cnb>org.netbeans.modules.web.tomcat.tomcat40</cnb>
+        <jar>modules/tomcat40.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat40autocompile</path>
+        <cnb>org.netbeans.modules.web.tomcat.tomcat40.autocompile</cnb>
+        <jar>modules/eager/tomcat40-autocompile.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat5</path>
+        <cnb>org.netbeans.modules.tomcat5</cnb>
+    </module>
+    <module>
+        <path>tomcatint/tomcat5/bundled</path>
+        <cnb>org.netbeans.modules.tomcat5.bundled</cnb>
+        <jar>modules/eager/tomcat5-bundled.jar</jar>
+    </module>
+    <module>
+        <path>ide/welcome</path>
+        <cnb>org.netbeans.modules.welcome</cnb>
+        <jar>modules/welcome.jar</jar>
+    </module>
+    <module>
+        <path>usersguide</path>
+        <cnb>org.netbeans.modules.usersguide</cnb>
+    </module>
+    <module>
+        <path>usersguide/j2seexamples</path>
+        <cnb>org.netbeans.modules.java.examples</cnb>
+    </module>
+    <module>
+        <path>utilities</path>
+        <cnb>org.netbeans.modules.utilities</cnb>
+    </module>
+    <module>
+        <path>utilities/project</path>
+        <cnb>org.netbeans.modules.utilities.project</cnb>
+    </module>
+    <module>
+        <path>utilities/group</path>
+        <cnb>org.netbeans.modules.group</cnb>
+    </module>
+    <module>
+        <path>vcscore</path>
+        <cnb>org.netbeans.modules.vcscore</cnb>
+    </module>
+    <module>
+        <path>vcscvs/compat</path>
+        <cnb>org.netbeans.modules.vcs.cmdline.compat</cnb>
+        <jar>modules/cvscompat.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric</path>
+        <cnb>org.netbeans.modules.vcs.advanced</cnb>
+        <jar>modules/vcsgen.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/cvsprofiles</path>
+        <cnb>org.netbeans.modules.vcs.profiles.cvsprofiles</cnb>
+        <jar>modules/cvs-profile.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/pvcs</path>
+        <cnb>org.netbeans.modules.vcs.profiles.pvcs</cnb>
+        <jar>modules/pvcs-profile.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/vss</path>
+        <cnb>org.netbeans.modules.vcs.profiles.vss</cnb>
+        <jar>modules/vss-profile.jar</jar>
+    </module>
+    <module>
+        <path>web/core</path>
+        <cnb>org.netbeans.modules.web.core</cnb>
+    </module>
+    <module>
+        <path>web/ddapi</path>
+        <cnb>org.netbeans.api.web.dd</cnb>
+    </module>
+    <module>
+        <path>web/examples</path>
+        <cnb>org.netbeans.modules.web.examples</cnb>
+    </module>
+    <module>
+        <path>web/jspdebug</path>
+        <cnb>org.netbeans.modules.web.debug</cnb>
+    </module>
+    <module>
+        <path>web/jspparser</path>
+        <cnb>org.netbeans.modules.web.jspparser</cnb>
+    </module>
+    <module>
+        <path>web/jspsyntax</path>
+        <cnb>org.netbeans.modules.web.core.syntax</cnb>
+    </module>
+    <module>
+        <path>web/project</path>
+        <cnb>org.netbeans.modules.web.project</cnb>
+    </module>
+    <module>
+        <path>web/webapi</path>
+        <cnb>org.netbeans.api.web.webmodule</cnb>
+    </module>
+    <module>
+        <path>web/servletapi23</path>
+        <cnb>org.netbeans.modules.servletapi23</cnb>
+        <jar>modules/autoload/servletapi23.jar</jar>
+    </module>
+    <module>
+        <path>web/servletapi24</path>
+        <cnb>org.netbeans.modules.servletapi24</cnb>
+        <jar>modules/autoload/servletapi24.jar</jar>
+    </module>
+    <module>
+        <path>web/taglibed</path>
+        <cnb>org.netbeans.modules.web.taglibed</cnb>
+        <jar>modules/taglibed.jar</jar>
+    </module>
+    <module>
+        <path>xml/api</path>
+        <cnb>org.netbeans.api.xml</cnb>
+    </module>
+    <module>
+        <path>xml/catalog</path>
+        <cnb>org.netbeans.modules.xml.catalog</cnb>
+        <jar>modules/xml-catalog.jar</jar>
+    </module>
+    <module>
+        <path>xml/core</path>
+        <cnb>org.netbeans.modules.xml.core</cnb>
+    </module>
+    <module>
+        <path>xml/css</path>
+        <cnb>org.netbeans.modules.css</cnb>
+        <jar>modules/css.jar</jar>
+    </module>
+    <module>
+        <path>xml/schema</path>
+        <cnb>org.netbeans.modules.xml.schema</cnb>
+        <jar>modules/xml-schema.jar</jar>
+    </module>
+    <module>
+        <path>xml/tax</path>
+        <cnb>org.netbeans.modules.xml.tax</cnb>
+        <jar>modules/autoload/xml-tax.jar</jar>
+    </module>
+    <module>
+        <path>xml/text-edit</path>
+        <cnb>org.netbeans.modules.xml.text</cnb>
+        <jar>modules/xml-text-edit.jar</jar>
+    </module>
+    <module>
+        <path>xml/tools</path>
+        <cnb>org.netbeans.modules.xml.tools</cnb>
+        <jar>modules/xml-tools.jar</jar>
+    </module>
+    <module>
+        <path>xml/xsl</path>
+        <cnb>org.netbeans.modules.xsl</cnb>
+        <jar>modules/xsl.jar</jar>
+    </module>
+    <module>
+        <path>xtest/nbjunit</path>
+        <cnb>org.netbeans.modules.nbjunit</cnb>
+    </module>
+</modules>

Added: FormLayout/trunk/nb4.1/nbbuild/user.build.properties
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/user.build.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/user.build.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,53 @@
+#                 Sun Public License Notice
+#
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+#
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+# the name of your cluster
+clustername=nblayoutpack
+
+# The location of your binary netbeans installation.  Modules will be installed
+# into this location.
+netbeans.dest.dir=T:/netbeans/4.1/
+
+# netbeans.user directory to use when launching netbeans
+# with "ant tryme"
+test.user.dir=testuserdir
+
+# the list of clusters that your cluster depends on
+# (used for the sanity-test and tryme targets)
+
+# ...for just the platform
+#test.cluster.list=${netbeans.dest.dir}/${clustername}
+
+# ...for the whole IDE
+test.cluster.list=${netbeans.dest.dir}/${clustername}${path.separator}${netbeans.dest.dir}/extra${path.separator}${netbeans.dest.dir}/ide4${path.separator}${netbeans.dest.dir}/nb4.0
+
+# Options to pass to NetBeans when starting it with "ant tryme":
+tryme.args=
+
+# Additional parameters to pass to NetBeans as it is started in sanity-check mode.
+# Normally you ought not change this.
+# However those running automated builds may wish to use:
+# -J-DErrorManager.minimum=17
+# (please don't ask why it is 17)
+# which will suppress a variety of mostly harmless deprecation warnings.
+sanitystart.args.additional=
+
+# Path to JDK to be used for tryme and sanity-check targets
+#jdkhome=
+
+# Additional parameters to pass to NetBeans as it is started in tryme mode.
+tryme.args=
+
+# If a port is specified, the tryme target will start netbeans in debug mode.
+#debug.port=8765
+
+# Uncomment to pause netbeans at the start of a debugging session
+#debug.pause=y

Added: FormLayout/trunk/nb4.1/nbbuild/user.cluster.properties
===================================================================
--- FormLayout/trunk/nb4.1/nbbuild/user.cluster.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nbbuild/user.cluster.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,10 @@
+# declare a name for your cluster
+# (should match the name in user.build.properties)
+user.cluster=cluster.nblayoutpack
+
+# the directory under ${netbeans.home} containing your cluster
+cluster.nblayoutpack.dir=nblayoutpack
+
+# the list of modules (the names of the directories containing 
+# the modules, rooted at nbbuild/..)
+cluster.nblayoutpack=nblayoutpack

Added: FormLayout/trunk/nb4.1/nblayoutpack/build.xml
===================================================================
--- FormLayout/trunk/nb4.1/nblayoutpack/build.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nblayoutpack/build.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="nblayoutpack-tablelayout" default="netbeans" basedir=".">
+
+    <property file="../../build.properties"/>
+    <tstamp>
+      <format property="buildnumbertimestamp" pattern="yyyyMMdd.HHmm"/>
+    </tstamp>
+    <property name="impl.version" value="${spec.version}.${buildnumbertimestamp}"/>
+
+    <property name="license.file" location="../../license.txt"/>
+
+    <import file="../nbbuild/module-scripts/projectized.xml"/>
+
+    <!-- inherited targets -->
+    <!--
+    compile: compiles source code
+    jar: creates module jar
+    netbeans: installs module to $NETBEANS_HOME
+    nbm: makes NBM file in build/
+    javadoc: generates javadocs
+    test: runs junit tests
+    clean: does the obvious
+    -->
+
+    <!-- 
+    If you're adding compile dependencies on 3rd party jars 
+    (jgraph, jdom, etc.), uncomment this section ...
+
+    Identifies all the files to be considered part of this module when deployed 
+    -->
+    <target name="files-init" depends="basic-init">
+        <echo>${module.jar}</echo>
+        <echo>${nb.system.dir}/Modules/${code.name.base.dashes}.xml</echo>
+        <echo>${nb.modules.dir}/ext/nblayoutpack/forms-1.0.5.jar</echo>
+        <patternset id="module.files">
+            <include name="${module.jar}"/>
+            <include name="${nb.system.dir}/Modules/${code.name.base.dashes}.xml"/>
+            <include name="${nb.modules.dir}/ext/nblayoutpack/forms-1.0.5.jar"/>
+        </patternset>
+    </target>
+
+    <!-- 
+    netbeans-extra is a hook provided to plug in file copying. 
+    If you're adding compile dependencies on 3rd party jars 
+    (jgraph, jdom, etc.), uncomment this section ...
+    This example assumes that jgraph.jar and jdom.jar are in snipe/lib/
+    -->
+         
+    <target name="netbeans-extra" depends="init">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.modules.dir}/ext/nblayoutpack"/>
+        <copy todir="${netbeans.dest.dir}/${cluster.dir}/${nb.modules.dir}/ext/nblayoutpack">
+          <fileset dir="../../lib">
+            <include name="forms-1.0.5.jar"/>
+          </fileset>
+        </copy>
+    </target>
+
+
+</project>

Added: FormLayout/trunk/nb4.1/nblayoutpack/manifest.mf
===================================================================
--- FormLayout/trunk/nb4.1/nblayoutpack/manifest.mf	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nblayoutpack/manifest.mf	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,7 @@
+Manifest-Version: 1.0
+OpenIDE-Module: de.berlios.nblayoutpack.formlayout
+OpenIDE-Module-Localizing-Bundle: de/berlios/nblayoutpack/formlayout/Bundle.properties
+OpenIDE-Module-Layer: de/berlios/nblayoutpack/formlayout/nb4.0/layer.xml
+OpenIDE-Module-Install: de/berlios/nblayoutpack/formlayout/FormLayoutModule.class
+OpenIDE-Module-Module-Dependencies: org.netbeans.modules.form/2 = 200505031930
+Class-Path: ext/nblayoutpack/forms-1.0.5.jar

Added: FormLayout/trunk/nb4.1/nblayoutpack/nbproject/private/private.xml
===================================================================
--- FormLayout/trunk/nb4.1/nblayoutpack/nbproject/private/private.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nblayoutpack/nbproject/private/private.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project-private xmlns="http://www.netbeans.org/ns/project-private/1">
+    <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/1"/>
+    <open-files xmlns="http://www.netbeans.org/ns/projectui-open-files/1">
+        <file>file:/I:/projects/Java/NBLP/FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutIntrospector.java</file>
+        <file>file:/I:/projects/Java/NBLP/FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java</file>
+        <file>file:/I:/projects/Java/NBLP/FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/GroupsEditor.java</file>
+        <file>file:/I:/projects/Java/NBLP/FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/HAlignEditor.java</file>
+        <file>file:/I:/projects/Java/NBLP/FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/VAlignEditor.java</file>
+    </open-files>
+</project-private>

Added: FormLayout/trunk/nb4.1/nblayoutpack/nbproject/project.properties
===================================================================
--- FormLayout/trunk/nb4.1/nblayoutpack/nbproject/project.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nblayoutpack/nbproject/project.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,27 @@
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+
+cp.extra=../../lib/forms-1.0.5.jar
+
+src.dir=../../src
+
+build.package.compress=true
+build.package.index=true
+build.compiler.debug=false
+
+nbm.homepage=http://nblayoutpack.berlios.de
+nbm.distribution=http://nblayoutpack.berlios.de
+
+nbm=${name}-nb4.1-${impl.version}.nbm
+
+build.classes.dir=../../../output/classes
+build.dir=../../../output/nb4.1

Added: FormLayout/trunk/nb4.1/nblayoutpack/nbproject/project.xml
===================================================================
--- FormLayout/trunk/nb4.1/nblayoutpack/nbproject/project.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/nb4.1/nblayoutpack/nbproject/project.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://www.netbeans.org/ns/project/1">
+    <type>org.netbeans.modules.apisupport.project</type>
+    <configuration>
+        <data xmlns="http://www.netbeans.org/ns/nb-module-project/1">
+            <code-name-base>de.berlios.nblayoutpack.formlayout</code-name-base>
+            <path>FormLayout/trunk/nb4.1</path>
+            <module-dependencies>
+                <dependency>
+                    <code-name-base>org.openide</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>1</release-version>
+                        <specification-version>4.39</specification-version>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.openide.loaders</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency/>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.netbeans.modules.form</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>2</release-version>
+                    </run-dependency>
+                </dependency>
+            </module-dependencies>
+            <public-packages/>
+        </data>
+    </configuration>
+</project>

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/Bundle.properties
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/Bundle.properties	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/Bundle.properties	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,54 @@
+## Resource bundle for package de.berlios.nblayoutpack.formlayout
+#Mon Jan 3 10:29:08 EET 2005
+OpenIDE-Module-Display-Category=NetBeans Layout Pack
+OpenIDE-Module-Name=FormLayout 1.0 support
+OpenIDE-Module-Long-Description=FormLayout layout manager support.
+Mount/java/formlayout.xml=JGoodies Forms 1.0.5
+Palette/Layouts/com-jgoodies-forms-layout-FormLayout.instance=FormLayout
+
+PROP_columns=Columns
+HINT_columns=Columns specifications
+
+PROP_rows=Rows
+HINT_rows=Rows specifications
+
+PROP_gridX=Grid X
+HINT_gridX=
+
+PROP_gridY=Grid Y
+HINT_gridY=
+
+PROP_gridWidth=Grid Width
+HINT_gridWidth=
+
+PROP_gridHeight=Grid Height
+HINT_gridHeight=
+
+PROP_hAlign=Horizontal alignment
+HINT_hAlign=
+
+PROP_vAlign=Vertical alignment
+HINT_vAlign=
+
+PROP_insets=Insets
+HINT_insets=
+
+VALUE_hAlign_DEFAULT=DEFAULT
+VALUE_hAlign_CENTER=CENTER
+VALUE_hAlign_FILL=FILL
+VALUE_hAlign_LEFT=LEFT
+VALUE_hAlign_RIGHT=RIGHT
+
+VALUE_vAlign_DEFAULT=DEFAULT
+VALUE_vAlign_CENTER=CENTER
+VALUE_vAlign_FILL=FILL
+VALUE_vAlign_TOP=TOP
+VALUE_vAlign_BOTTOM=BOTTOM
+
+EXC_InvalidComponentLayoutPropertyChange={0} value {1} is invalid.
+
+PROP_columnGroups=Column groups
+HINT_columnGroups=Separate groups using ';' and items using ','.
+
+PROP_rowGroups=Row groups
+HINT_rowGroups=Separate groups using ';' and items using ','.

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutIntrospector.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutIntrospector.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutIntrospector.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,107 @@
+/*
+ * FormLayoutIntrospector.java
+ *
+ * Created on January 3, 2005, 2:37 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout;
+
+import java.awt.*;
+import java.lang.reflect.*;
+
+import org.openide.ErrorManager;
+
+import com.jgoodies.forms.layout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class FormLayoutIntrospector{
+  
+  private static Constructor layoutConstructor;
+  private static Constructor constrConstructor;
+  private static Method setColumnGroupsMethod;
+  private static Method setRowGroupsMethod;
+  private static Method valueOfMethod;
+
+  /** Creates a new instance of FormLayoutIntrospector */
+  private FormLayoutIntrospector(){
+  }
+  
+  public static Constructor getLayoutConstructor(){
+    if(layoutConstructor == null){
+      try{
+        layoutConstructor = FormLayout.class.getConstructor(new Class[]{String.class, String.class});
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return layoutConstructor;
+  }
+  
+  public static Constructor getConstraintsConstructor(){
+    if(constrConstructor == null){
+      try{
+        constrConstructor = CellConstraints.class.getConstructor(new Class[]{
+          Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE,
+          CellConstraints.Alignment.class, CellConstraints.Alignment.class,
+          Insets.class
+        });
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return constrConstructor;
+  }
+  
+  public static Method getSetColumnGroupsMethod(){
+    if(setColumnGroupsMethod == null){
+      try{
+        setColumnGroupsMethod = FormLayout.class.getMethod("setColumnGroups", new Class[]{int[][].class});
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return setColumnGroupsMethod;
+  }
+  
+  public static Method getSetRowGroupsMethod(){
+    if(setRowGroupsMethod == null){
+      try{
+        setRowGroupsMethod = FormLayout.class.getMethod("setRowGroups", new Class[]{int[][].class});
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return setRowGroupsMethod;
+  }
+
+  public static CellConstraints.Alignment getAlignment(String value){
+    CellConstraints.Alignment result = CellConstraints.DEFAULT;
+    if(value == null){
+      return result;
+    }
+    if(valueOfMethod == null){
+      try{
+        valueOfMethod = CellConstraints.Alignment.class.getDeclaredMethod("valueOf", new Class[]{String.class});
+        valueOfMethod.setAccessible(true);
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    try{
+      result = (CellConstraints.Alignment)valueOfMethod.invoke(null, new Object[]{value});
+    }
+    catch(Exception e){
+      ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+    }
+    return result;
+  }
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutModule.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutModule.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutModule.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,55 @@
+package de.berlios.nblayoutpack.formlayout;
+
+import org.openide.modules.ModuleInstall;
+
+import org.netbeans.modules.form.layoutsupport.LayoutSupportRegistry;
+
+/** Manages a module's lifecycle.
+ * Remember that an installer is optional and often not needed at all.
+ *
+ * @author Illya Kysil
+ */
+public class FormLayoutModule extends ModuleInstall{
+  
+  public void restored(){
+    LayoutSupportRegistry.registerSupportForLayout(
+      "com.jgoodies.forms.layout.FormLayout",
+      "de.berlios.nblayoutpack.formlayout.FormLayoutSupport"
+    );
+  }
+  
+  // Less commonly needed:
+  /*
+    public boolean closing() {
+        // return false if cannot close now
+        return true;
+    }
+   */
+  
+  public void close(){
+    LayoutSupportRegistry.registerSupportForLayout(
+      "com.jgoodies.forms.layout.FormLayout",
+      LayoutSupportRegistry.DEFAULT_SUPPORT
+    );
+  }
+  // Generally the methods below should be avoided in favor of restored():
+  /*
+    // By default, do nothing but call restored().
+    public void installed() {
+  restored();
+    }
+   
+    // By default, do nothing.
+    public void uninstalled() {
+    }
+   
+    // By default, call restored().
+    public void updated(int release, String specVersion) {
+    }
+   */
+  
+  // It is no longer recommended to override Externalizable methods
+  // (readExternal and writeExternal). See the Modules API section on
+  // "installation-clean" modules for an explanation.
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/FormLayoutSupport.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,1040 @@
+/*
+ * FormLayoutSupport.java
+ *
+ * Created on January 3, 2005, 10:34 AM
+ */
+
+package de.berlios.nblayoutpack.formlayout;
+
+import java.awt.*;
+import java.beans.*;
+import java.lang.reflect.*;
+import java.text.*;
+import java.util.*;
+
+import javax.swing.*;
+
+import org.openide.ErrorManager;
+import org.openide.nodes.*;
+import org.openide.util.Utilities;
+
+import org.netbeans.modules.form.*;
+import org.netbeans.modules.form.codestructure.*;
+import org.netbeans.modules.form.layoutsupport.*;
+
+import com.jgoodies.forms.debug.*;
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.converter.*;
+import de.berlios.nblayoutpack.formlayout.editors.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class FormLayoutSupport extends AbstractLayoutSupport{
+  
+  /** The icon for FormLayout. */
+  private static String iconURL =
+      "de/berlios/nblayoutpack/formlayout/resources/formlayout16.png"; // NOI18N
+  /** The icon for TableLayout. */
+  private static String icon32URL =
+      "de/berlios/nblayoutpack/formlayout/resources/formlayout32.png"; // NOI18N
+
+  /** Creates a new instance of FormLayoutSupport */
+  public FormLayoutSupport(){
+  }
+  
+  public Class getSupportedClass(){
+    return com.jgoodies.forms.layout.FormLayout.class;
+  }
+  
+  /** Provides an icon to be used for the layout node in Component
+   * Inspector. Only 16x16 color icon is required.
+   * @param type is one of BeanInfo constants: ICON_COLOR_16x16,
+   *        ICON_COLOR_32x32, ICON_MONO_16x16, ICON_MONO_32x32
+   * @return icon to be displayed for node in Component Inspector
+   */
+  public Image getIcon(int type){
+    switch (type) {
+      case BeanInfo.ICON_COLOR_16x16:
+      case BeanInfo.ICON_MONO_16x16:
+        return Utilities.loadImage(iconURL);
+      default:
+        return Utilities.loadImage(icon32URL);
+    }
+  }
+  
+  public static ResourceBundle getBundle(){
+    return org.openide.util.NbBundle.getBundle(FormLayoutSupport.class);
+  }
+
+  private String columns = "p";
+  private String rows    = "p";
+  private int[][] columnGroups = new int[0][0];
+  private int[][] rowGroups    = new int[0][0];
+  
+  /**
+   * Getter for property columns.
+   * @return Value of property columns.
+   */
+  public String getColumns(){
+    return columns;
+  }
+  
+  /**
+   * Setter for property columns.
+   * @param columns New value of property columns.
+   */
+  public void setColumns(String columns){
+    this.columns = columns;
+  }
+  
+  /**
+   * Getter for property rows.
+   * @return Value of property rows.
+   */
+  public String getRows(){
+    return rows;
+  }
+  
+  /**
+   * Setter for property rows.
+   * @param rows New value of property rows.
+   */
+  public void setRows(String rows){
+    this.rows = rows;
+  }
+  
+  /**
+   * Getter for property columnGroups.
+   * @return Value of property columnGroups.
+   */
+  public int[][] getColumnGroups(){
+    return this.columnGroups;
+  }
+  
+  /**
+   * Setter for property columnGroups.
+   * @param columnGroups New value of property columnGroups.
+   */
+  public void setColumnGroups(int[][] columnGroups){
+    this.columnGroups = columnGroups;
+  }
+  
+  /**
+   * Getter for property rowGroups.
+   * @return Value of property rowGroups.
+   */
+  public int[][] getRowGroups(){
+    return this.rowGroups;
+  }
+  
+  /**
+   * Setter for property rowGroups.
+   * @param rowGroups New value of property rowGroups.
+   */
+  public void setRowGroups(int[][] rowGroups){
+    this.rowGroups = rowGroups;
+  }
+  
+  /** Sets up the layout (without adding components) on a real container,
+   * according to the internal metadata representation. This method must
+   * override AbstractLayoutSupport because FormLayout instance cannot
+   * be used universally - new instance must be created for each container.
+   * @param container instance of a real container to be set
+   * @param containerDelegate effective container delegate of the container;
+   *        for layout managers we always use container delegate instead of
+   *        the container
+   */
+  public void setLayoutToContainer(Container container, Container containerDelegate){
+    try{
+      containerDelegate.setLayout(cloneLayoutInstance(container, containerDelegate));
+    }
+    catch(Exception e){
+      ErrorManager.getDefault().notify(ErrorManager.WARNING, e);
+    }
+  }
+
+  protected LayoutManager cloneLayoutInstance(Container container, Container containerDelegate){
+    FormLayout result = new FormLayout(columns, rows);
+    result.setColumnGroups(columnGroups);
+    result.setRowGroups(rowGroups);
+    return result;
+  }
+  
+  protected LayoutManager createDefaultLayoutInstance() throws Exception{
+    return new FormLayout(columns, rows);
+  }
+  
+  private static final String baseVarName = "_formLayoutInstance";
+
+  /** Creates code structures for a new layout manager (opposite to
+   * readInitLayoutCode). As the TableLayout is not a bean, this method must
+   * override from AbstractLayoutSupport.
+   * @param layoutCode CodeGroup to be filled with relevant
+   *        initialization code;
+   * @return new CodeExpression representing the TableLayout
+   */
+  protected CodeExpression createInitLayoutCode(CodeGroup layoutCode){
+    CodeStructure codeStructure = getCodeStructure();
+    FormProperty[] properties = getProperties();
+    CodeExpression[] constrParams = new CodeExpression[2];
+    constrParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[0]));
+    constrParams[1] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[1]));
+    CodeExpression varExpression = codeStructure.createExpression(FormLayoutIntrospector.getLayoutConstructor(), constrParams);
+    String varName = baseVarName;
+    CodeVariable var = codeStructure.getVariable(varName);
+    int i = 1;
+    while(var != null){
+      varName = baseVarName + (i++);
+      var = codeStructure.getVariable(varName);
+    };
+    var = codeStructure.createVariable(CodeVariable.LOCAL /*| CodeVariable.EXPLICIT_DECLARATION*/, FormLayout.class, varName);
+    codeStructure.attachExpressionToVariable(varExpression, var);
+    layoutCode.addStatement(0, var.getAssignment(varExpression));
+    CodeExpression[] setColumnGroupsParams = new CodeExpression[1];
+    setColumnGroupsParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[2]));
+    layoutCode.addStatement(codeStructure.createStatement(varExpression, FormLayoutIntrospector.getSetColumnGroupsMethod(), setColumnGroupsParams));
+    CodeExpression[] setRowGroupsParams = new CodeExpression[1];
+    setRowGroupsParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[3]));
+    layoutCode.addStatement(codeStructure.createStatement(varExpression, FormLayoutIntrospector.getSetRowGroupsMethod(), setRowGroupsParams));
+    return varExpression;
+  }
+
+  protected void readInitLayoutCode(CodeExpression codeExpression, CodeGroup layoutCode){
+    CodeVariable var = codeExpression.getVariable();
+    layoutCode.addStatement(0, var.getAssignment(codeExpression));
+    CodeExpression[] constructorParams = var.getAssignment(codeExpression).getStatementParameters();
+    FormProperty[] properties = getProperties();
+    FormCodeSupport.readPropertyExpression(constructorParams[0], properties[0], false);
+    FormCodeSupport.readPropertyExpression(constructorParams[1], properties[1], true);
+    Iterator it = CodeStructure.getDefinedStatementsIterator(codeExpression);
+    while(it.hasNext()){
+      CodeStatement statement = (CodeStatement)it.next();
+      if(isMethod(statement, FormLayoutIntrospector.getSetColumnGroupsMethod())){
+        FormCodeSupport.readPropertyStatement(statement, properties[2], true);
+      }
+      if(isMethod(statement, FormLayoutIntrospector.getSetRowGroupsMethod())){
+        FormCodeSupport.readPropertyStatement(statement, properties[3], true);
+      }
+      layoutCode.addStatement(statement);
+    }
+    updateLayoutInstance();
+  }
+  
+  public boolean isMethod(CodeStatement statement, Method method){
+    Object obj = statement.getMetaObject();
+    if (obj != null && obj instanceof Method) {
+      Method other = (Method)obj;
+      // Compare class names only since classes can be loaded by different ClassLoaders
+      if((method.getDeclaringClass().getName().equals(other.getDeclaringClass().getName()))
+         && (method.getName() == other.getName())) {
+        if(!method.getReturnType().equals(other.getReturnType())){
+          return false;
+        }
+        Class[] params1 = method.getParameterTypes();
+        Class[] params2 = other.getParameterTypes();
+        if (params1.length == params2.length) {
+          for (int i = 0; i < params1.length; i++) {
+            if (params1[i] != params2[i])
+              return false;
+          }
+          return true;
+        }
+      }
+    }
+    return false;
+  }
+
+  /** Called from createComponentCode method, creates code for a component
+   * layout constraints (opposite to readConstraintsCode).
+   * @param constrCode CodeGroup to be filled with constraints code; not
+   *        needed here because AbsoluteConstraints object is represented
+   *        only by a single constructor code expression and no statements
+   * @param constr layout constraints metaobject representing the constraints
+   * @param compExp CodeExpression object representing the component; not
+   *        needed here
+   * @return created CodeExpression representing the layout constraints
+   */
+  protected CodeExpression createConstraintsCode(CodeGroup constrCode,
+  LayoutConstraints constr, CodeExpression compExp, int index){
+    if(!(constr instanceof FormLayoutSupportConstraints))
+      return null;
+    
+    FormLayoutSupportConstraints flsConstr = (FormLayoutSupportConstraints)constr;
+    // code expressions for constructor parameters are created in
+    // FormLayoutSupportConstraints
+    CodeExpression[] params = flsConstr.createPropertyExpressions(getCodeStructure());
+    return getCodeStructure().createExpression(FormLayoutIntrospector.getConstraintsConstructor(), params);
+  }
+  
+  protected LayoutConstraints readConstraintsCode(CodeExpression constrExp, CodeGroup constrCode, CodeExpression compExp){
+    FormLayoutSupportConstraints constr = new FormLayoutSupportConstraints();
+    // reading is done in FormLayoutSupportConstraints
+    constr.readCodeExpression(constrExp, constrCode);
+    return constr;
+  }
+  
+  private FormProperty[] properties;
+  
+  protected FormProperty[] getProperties(){
+    if(properties == null){
+      properties = createProperties();
+    }
+    return properties;
+  }
+
+  protected FormProperty[] createProperties(){
+    FormProperty[] properties = new FormProperty[]{
+      new FormProperty("columns", // NOI18N
+                       String.class,
+                       getBundle().getString("PROP_columns"), // NOI18N
+                       getBundle().getString("HINT_columns")){ // NOI18N
+
+        public Object getTargetValue(){
+          return columns;
+        }
+        public void setTargetValue(Object value){
+          columns = (String)value;
+        }
+        public void setPropertyContext(FormPropertyContext ctx){
+          // disabling this method due to limited persistence
+          // capabilities (compatibility with previous versions)
+        } 
+        public PropertyEditor getExpliciteEditor(){
+          return new ColumnEditor();
+        }
+        protected void propertyValueChanged(Object old, Object current){
+          super.propertyValueChanged(old, current);
+          updateLayoutInstance();
+        }
+      },
+
+      new FormProperty("rows", // NOI18N
+                       String.class,
+                       getBundle().getString("PROP_rows"), // NOI18N
+                       getBundle().getString("HINT_rows")){ // NOI18N
+
+        public Object getTargetValue(){
+          return rows;
+        }
+        public void setTargetValue(Object value){
+          rows = (String)value;
+        }
+        public void setPropertyContext(FormPropertyContext ctx){
+          // disabling this method due to limited persistence
+          // capabilities (compatibility with previous versions)
+        } 
+        public PropertyEditor getExpliciteEditor(){
+          return new RowEditor();
+        }
+        protected void propertyValueChanged(Object old, Object current){
+          super.propertyValueChanged(old, current);
+          updateLayoutInstance();
+        }
+      },
+
+      new FormProperty("columnGroups", // NOI18N
+                       int[][].class,
+                       getBundle().getString("PROP_columnGroups"), // NOI18N
+                       getBundle().getString("HINT_columnGroups")){ // NOI18N
+
+        public Object getTargetValue(){
+          return columnGroups;
+        }
+        public void setTargetValue(Object value){
+          columnGroups = (int[][])value;
+        }
+        public void setPropertyContext(FormPropertyContext ctx){
+          // disabling this method due to limited persistence
+          // capabilities (compatibility with previous versions)
+        }
+        public PropertyEditor getExpliciteEditor(){
+          return new ColumnGroupsEditor();
+        }
+      },
+
+      new FormProperty("rowGroups", // NOI18N
+                       int[][].class,
+                       getBundle().getString("PROP_rowGroups"), // NOI18N
+                       getBundle().getString("HINT_rowGroups")){ // NOI18N
+
+        public Object getTargetValue(){
+          return rowGroups;
+        }
+        public void setTargetValue(Object value){
+          rowGroups = (int[][])value;
+        }
+        public void setPropertyContext(FormPropertyContext ctx){
+          // disabling this method due to limited persistence
+          // capabilities (compatibility with previous versions)
+        }
+        public PropertyEditor getExpliciteEditor(){
+          return new RowGroupsEditor();
+        }
+      },
+    };
+    properties[2].setValue("canEditAsText", Boolean.TRUE); // NOI18N
+    properties[3].setValue("canEditAsText", Boolean.TRUE); // NOI18N
+    return properties;
+  }
+
+  public LayoutConstraints createDefaultConstraints(){
+    return new FormLayoutSupportConstraints();
+  }
+  
+  /** Provides resizing options for given component. It can combine the
+   * bit-flag constants RESIZE_UP, RESIZE_DOWN, RESIZE_LEFT, RESIZE_RIGHT.
+   * @param container instance of a real container in which the
+   *        component is to be resized
+   * @param containerDelegate effective container delegate of the container
+   *        (e.g. like content pane of JFrame)
+   * @param component real component to be resized
+   * @param index position of the component in its container
+   * @return resizing options for the component; 0 if no resizing is possible
+   */
+  public int getResizableDirections(Container container, Container containerDelegate,
+  Component component, int index){
+    FormLayout formLayout = (FormLayout)containerDelegate.getLayout();
+    FormLayoutSupportConstraints flConstr = (FormLayoutSupportConstraints)getConstraints(index);
+    
+    int resizable = 0;
+    
+    if((flConstr.gridX > 1) || (flConstr.gridWidth > 0)){
+      resizable |= RESIZE_LEFT;
+    }
+    
+    if((flConstr.gridX + flConstr.gridWidth < formLayout.getColumnCount()) ||
+       (flConstr.gridWidth > 0)){
+      resizable |= RESIZE_RIGHT;
+    }
+    
+    if((flConstr.gridY > 1) || (flConstr.gridHeight > 0)){
+      resizable |= RESIZE_UP;
+    }
+    
+    if((flConstr.gridY + flConstr.gridHeight < formLayout.getRowCount()) ||
+       (flConstr.gridHeight > 0)){
+      resizable |= RESIZE_DOWN;
+    }
+    
+    return resizable;
+  }
+  
+  private int[] getSizes(int[] offsets){
+    int[] result = new int[offsets.length - 1];
+    for(int i = 1; i < offsets.length; i++){
+      result[i - 1] = offsets[i] - offsets[i - 1];
+    }
+    return result;
+  }
+  
+  /** This method should paint a feedback for a component dragged over
+   * a container (or just for mouse cursor being moved over container).
+   * In principle, it should present given component layout constraints or
+   * index graphically.
+   * @param container instance of a real container over/in which the
+   *        component is dragged
+   * @param containerDelegate effective container delegate of the container
+   *        (e.g. like content pane of JFrame) - here the feedback is painted
+   * @param component the real component being dragged, can be null
+   * @param newConstraints component layout constraints to be presented
+   * @param newIndex component's index position to be presented
+   *        (if newConstraints == null)
+   * @param g Graphics object for painting (with color and line style set)
+   * @return whether any feedback was painted (may return false if the
+   *         constraints or index are invalid, or if the painting is not
+   *         implemented)
+   */
+  public boolean paintDragFeedback(Container container, Container containerDelegate,
+  Component component, LayoutConstraints newConstraints, int newIndex, Graphics g){
+    FormLayout formLayout = (FormLayout)containerDelegate.getLayout();
+    FormLayoutSupportConstraints flConstr = (FormLayoutSupportConstraints)newConstraints;
+    FormLayout.LayoutInfo layoutInfo = FormDebugUtils.getLayoutInfo(containerDelegate);
+    int[] columnSize = getSizes(layoutInfo.columnOrigins);
+    int[] rowSize = getSizes(layoutInfo.rowOrigins);
+
+    int counter;
+
+    Color defColor = g.getColor();
+    Rectangle sRect = new Rectangle(-1, -1, 0, 0);
+    int y = 0;
+    for(int row = 0; row < rowSize.length; row++){
+      if((row + 1 >= flConstr.gridY) && (row + 1 <= flConstr.gridY + flConstr.gridHeight - 1)){
+        if(sRect.y < 0){
+          sRect.y = y;
+        }
+        sRect.height += rowSize[row];
+      }
+      g.drawLine(0, y, containerDelegate.getWidth(), y);
+      y += rowSize[row];
+    }
+    g.drawLine(0, y, containerDelegate.getWidth(), y);
+    int x = 0;
+    for(int column = 0; column < columnSize.length; column++){
+      if((column + 1 >= flConstr.gridX) && (column + 1 <= flConstr.gridX + flConstr.gridWidth - 1)){
+        if(sRect.x < 0){
+          sRect.x = x;
+        }
+        sRect.width += columnSize[column];
+      }
+      g.drawLine(x, 0, x, containerDelegate.getHeight());
+      x += columnSize[column];
+    }
+    g.drawLine(x, 0, x, containerDelegate.getHeight());
+    g.setColor(Color.red);
+    g.drawRect(sRect.x, sRect.y, sRect.width, sRect.height);
+    return true;
+  }
+  
+    /** This method should calculate layout constraints for a component dragged
+   * over a container (or just for mouse cursor being moved over container).
+   * @param container instance of a real container over/in which the
+   *        component is dragged
+   * @param containerDelegate effective container delegate of the container
+   *        (e.g. like content pane of JFrame)
+   * @param component the real component being dragged, can be null
+   * @param index position (index) of the component in its current container;
+   *        -1 if there's no dragged component
+   * @param posInCont position of mouse in the container delegate
+   * @param posInComp position of mouse in the dragged component; null if
+   *        there's no dragged component
+   * @return new LayoutConstraints object corresponding to the position of
+   *         the component in the container; may return null if the layout
+   *         does not use component constraints, or if default constraints
+   *         should be used
+   */
+  public LayoutConstraints getNewConstraints(Container container, Container containerDelegate,
+  Component component, int index, Point posInCont, Point posInComp){
+    FormLayout formLayout = (FormLayout)containerDelegate.getLayout();
+    FormLayoutSupportConstraints flConstr = (FormLayoutSupportConstraints)getConstraints(index);
+    FormLayout.LayoutInfo layoutInfo = FormDebugUtils.getLayoutInfo(containerDelegate);
+    int[] columnSize = getSizes(layoutInfo.columnOrigins);
+    int[] rowSize = getSizes(layoutInfo.rowOrigins);
+    int[] columnOffset = layoutInfo.columnOrigins;
+    int[] rowOffset = layoutInfo.rowOrigins;
+    int x = posInCont.x;
+    int y = posInCont.y;
+    int column = 0;
+    int row = 0;
+    
+    for(int i = 0; i < columnSize.length; i++){
+      if(x >= columnOffset[i]){
+        column = i;
+      }
+      if(x < columnOffset[i + 1]){
+        break;
+      }
+    }
+    
+    for(int i = 0; i < rowSize.length; i++){
+      if(y >= rowOffset[i]){
+        row = i;
+      }
+      if(y < rowOffset[i + 1]){
+        break;
+      }
+    }
+    
+    CellConstraints.Alignment hAlign = flConstr != null ? flConstr.hAlign : CellConstraints.DEFAULT;
+    CellConstraints.Alignment vAlign = flConstr != null ? flConstr.vAlign : CellConstraints.DEFAULT;
+    Insets insets = flConstr != null ? flConstr.insets : new Insets(0, 0, 0, 0);
+    return new FormLayoutSupportConstraints(column + 1, row + 1, 1, 1, hAlign, vAlign, insets);
+  }
+  
+/** This method should calculate layout constraints for a component being
+   * resized.
+   * @param container instance of a real container in which the
+   *        component is to be resized
+   * @param containerDelegate effective container delegate of the container
+   *        (e.g. like content pane of JFrame)
+   * @param component real component to be resized
+   * @param index position of the component in its container
+   * @param sizeChanges Insets object with size differences
+   * @param posInCont position of mouse in the container delegate
+   * @return component layout constraints for resized component; null if
+   *         resizing is not possible or not implemented
+   */
+  public LayoutConstraints getResizedConstraints(Container container, Container containerDelegate,
+  Component component, int index, Insets sizeChanges, Point posInCont){
+    FormLayout formLayout = (FormLayout)containerDelegate.getLayout();
+    FormLayoutSupportConstraints flConstr = (FormLayoutSupportConstraints)getConstraints(index);
+    FormLayout.LayoutInfo layoutInfo = FormDebugUtils.getLayoutInfo(containerDelegate);
+    int[] columnSize = getSizes(layoutInfo.columnOrigins);
+    int[] rowSize = getSizes(layoutInfo.rowOrigins);
+    int[] columnOffset = layoutInfo.columnOrigins;
+    int[] rowOffset = layoutInfo.rowOrigins;
+    
+    int fLeft = flConstr.gridX - 1;
+    int fRight = flConstr.gridX + flConstr.gridWidth - 2;
+    int fTop = flConstr.gridY - 1;
+    int fBottom = flConstr.gridY + flConstr.gridHeight - 2;
+    
+    int left;
+    if(sizeChanges.left != 0){
+      left = 0;
+      for(int i = 0; i < columnSize.length; i++){
+        if(posInCont.x >= columnOffset[i]){
+          left = i;
+        }
+        if(posInCont.x < columnOffset[i + 1]){
+          break;
+        }
+      }
+      if(left > fRight)
+        left = fRight;
+    }
+    else{
+      left = fLeft;
+    }
+    
+    int top;
+    if(sizeChanges.top != 0){
+      top = 0;
+      for(int i = 0; i < rowSize.length; i++){
+        if(posInCont.y >= rowOffset[i]){
+          top = i;
+        }
+        if(posInCont.y < rowOffset[i + 1]){
+          break;
+        }
+      }
+      if(top > fBottom){
+        top = fBottom;
+      }
+    }
+    else{
+      top = fTop;
+    }
+    
+    int right;
+    if(sizeChanges.right != 0) {
+      right = formLayout.getColumnCount() - 1;
+      for(int i = columnSize.length; i > 0; i--){
+        if(posInCont.x < columnOffset[i]){
+          right = i - 1;
+        }
+        if(posInCont.x >= columnOffset[i - 1]){
+          break;
+        }
+      }
+      if(right < fLeft){
+        right = fLeft;
+      }
+    }
+    else{
+      right = fRight;
+    }
+    
+    int bottom;
+    if(sizeChanges.bottom != 0){
+      bottom = formLayout.getRowCount() - 1;
+      for(int i = rowSize.length; i > 0; i--){
+        if(posInCont.y < rowOffset[i]){
+          bottom = i - 1;
+        }
+        if(posInCont.y >= rowOffset[i - 1]){
+          break;
+        }
+      }
+      if(bottom < fTop){
+        bottom = fTop;
+      }
+    }
+    else{
+      bottom = fBottom;
+    }
+    return new FormLayoutSupportConstraints(left + 1, top + 1, right - left + 1, bottom - top + 1, flConstr.hAlign, flConstr.vAlign, flConstr.insets);
+  }
+
+  /** This method is called after a constraint property of some component
+   * is changed by the user. Subclasses may check if the layout is valid
+   * after the change and throw PropertyVetoException if the change should
+   * be reverted. It's up to the delegate to display an error or warning
+   * message, the exception is not reported outside. The default
+   * implementation accepts any change.
+   * @param index index of the component in the layout
+   * @param ev PropertyChangeEvent object describing the change
+   */
+  public void acceptComponentLayoutChange(int index, PropertyChangeEvent ev) throws PropertyVetoException{
+    FormLayout formLayout = (FormLayout)getLayoutContext().getPrimaryContainerDelegate().getLayout();
+    FormLayoutSupportConstraints flConstr = new FormLayoutSupportConstraints((FormLayoutSupportConstraints)getConstraints(index));
+    boolean isValid = true;
+    if(ev.getPropertyName().equals("CellConstraints.gridX")){
+      int gridX = ((Integer)ev.getNewValue()).intValue();
+      isValid = (gridX > 1) && (gridX + flConstr.gridWidth - 1 <= formLayout.getColumnCount());
+    }
+    if(ev.getPropertyName().equals("CellConstraints.gridWidth")){
+      int gridWidth = ((Integer)ev.getNewValue()).intValue();
+      isValid = (gridWidth > 0) && (flConstr.gridX + gridWidth - 1 <= formLayout.getColumnCount());
+    }
+    if(ev.getPropertyName().equals("CellConstraints.gridY")){
+      int gridY = ((Integer)ev.getNewValue()).intValue();
+      isValid = (gridY > 1) && (gridY + flConstr.gridHeight - 1 <= formLayout.getRowCount());
+    }
+    if(ev.getPropertyName().equals("CellConstraints.gridHeight")){
+      int gridHeight = ((Integer)ev.getNewValue()).intValue();
+      isValid = (gridHeight > 0) && (flConstr.gridY + gridHeight - 1 <= formLayout.getRowCount());
+    }
+    if(!isValid){
+      String messageFormat = getBundle().getString("EXC_InvalidComponentLayoutPropertyChange");
+      String message = MessageFormat.format(messageFormat, new Object[]{ev.getPropertyName(), ev.getNewValue()});
+      throw new PropertyVetoException(message, ev);
+    }
+  }
+  
+  /** This method is called after a property of the layout is changed by
+   * the user. Subclasses may check whether the layout is valid after the
+   * change and throw PropertyVetoException if the change should be reverted.
+   * It's up to the delagate to display an error or warning message, the
+   * exception is not reported outside. The default implementation accepts
+   * any change.
+   * @param ev PropertyChangeEvent object describing the change
+   */
+  public void acceptContainerLayoutChange(PropertyChangeEvent ev) throws PropertyVetoException{
+    Container container = getLayoutContext().getPrimaryContainerDelegate();
+    FormLayout formLayout = (FormLayout)container.getLayout();
+    Component[] comps = container.getComponents();
+    CellConstraints[] ccs = new CellConstraints[comps.length];
+    for(int i = 0; i < comps.length; i++){
+      ccs[i] = (CellConstraints)formLayout.getConstraints(comps[i]);
+    }
+    ColumnSpec[] colSpecs = new ColumnSpec[formLayout.getColumnCount()];
+    for(int i = 0; i < colSpecs.length; i++){
+      colSpecs[i] = formLayout.getColumnSpec(i + 1);
+    }
+    RowSpec[] rowSpecs = new RowSpec[formLayout.getRowCount()];
+    for(int i = 0; i < rowSpecs.length; i++){
+      rowSpecs[i] = formLayout.getRowSpec(i + 1);
+    }
+    int[][] colGroups = formLayout.getColumnGroups();
+    int[][] rowGroups = formLayout.getRowGroups();
+    if(ev.getPropertyName().equals("columns")){
+      try{
+        colSpecs = ColumnSpec.decodeSpecs((String)ev.getNewValue());
+      }
+      catch(Exception e){
+        throw new PropertyVetoException("", ev);
+      }
+    }
+    if(ev.getPropertyName().equals("rows")){
+      try{
+        rowSpecs = RowSpec.decodeSpecs((String)ev.getNewValue());
+      }
+      catch(Exception e){
+        throw new PropertyVetoException("", ev);
+      }
+    }
+    if(ev.getPropertyName().equals("columnGroups")){
+      colGroups = (int[][])ev.getNewValue();
+    }
+    if(ev.getPropertyName().equals("rowGroups")){
+      rowGroups = (int[][])ev.getNewValue();
+    }
+    for(int i = 0; i < ccs.length; i++){
+      if(ccs[i].gridX + ccs[i].gridWidth - 2 >= colSpecs.length){
+        throw new PropertyVetoException("", ev);
+      }
+      if(ccs[i].gridY + ccs[i].gridHeight - 2 >= rowSpecs.length){
+        throw new PropertyVetoException("", ev);
+      }
+    }
+    boolean[] colPresent = new boolean[formLayout.getColumnCount()];
+    Arrays.fill(colPresent, false);
+    for(int group = 0; group < colGroups.length; group++){
+      for(int item = 0; item < colGroups[group].length; item++){
+        if((colGroups[group][item] < 1) || (colGroups[group][item] > formLayout.getColumnCount()) || colPresent[colGroups[group][item] - 1]){
+          throw new PropertyVetoException("", ev);
+        }
+        colPresent[colGroups[group][item] - 1] = true;
+      }
+    }
+    boolean[] rowPresent = new boolean[formLayout.getRowCount()];
+    Arrays.fill(rowPresent, false);
+    for(int group = 0; group < rowGroups.length; group++){
+      for(int item = 0; item < rowGroups[group].length; item++){
+        if((rowGroups[group][item] < 1) || (rowGroups[group][item] > formLayout.getRowCount()) || rowPresent[rowGroups[group][item] - 1]){
+          throw new PropertyVetoException("", ev);
+        }
+        rowPresent[rowGroups[group][item] - 1] = true;
+      }
+    }
+    super.acceptContainerLayoutChange(ev);
+  }
+  
+  /** This method is called when switching layout - giving an opportunity to
+   * convert the previous constrainst of components to constraints of the new
+   * layout (this layout). The default implementation does nothing.
+   * @param previousConstraints [input] layout constraints of components in
+   *                                    the previous layout
+   * @param currentConstraints [output] array of converted constraints for
+   *                                    the new layout - to be filled
+   * @param components [input] real components in a real container having the
+   *                           previous layout
+   */
+  public void convertConstraints(LayoutConstraints[] previousConstraints,
+  LayoutConstraints[] currentConstraints, Component[] components){
+    if((components == null) || (components.length == 0)){
+      return;
+    }
+    ConstraintsConverter converter = new DefaultConstraintsConverter();
+    converter.convertConstraints(getLayoutContext(), this, previousConstraints, currentConstraints, components);
+  }
+
+  public class FormLayoutSupportConstraints implements LayoutConstraints{
+
+    private Node.Property[] properties;
+
+    public int gridX;
+    public int gridY;
+    public int gridWidth;
+    public int gridHeight;
+    public CellConstraints.Alignment hAlign;
+    public CellConstraints.Alignment vAlign;
+    public Insets insets;
+
+    /** Creates a new instance of FormLayoutSupportConstraints */
+    public FormLayoutSupportConstraints(){
+      CellConstraints cc = new CellConstraints();
+      gridX = cc.gridX;
+      gridY = cc.gridY;
+      gridWidth = cc.gridWidth;
+      gridHeight = cc.gridHeight;
+      hAlign = cc.hAlign;
+      vAlign = cc.vAlign;
+      insets = cc.insets;
+    }
+
+    public FormLayoutSupportConstraints(FormLayoutSupportConstraints prototype){
+      this.gridX = prototype.gridX;
+      this.gridY = prototype.gridY;
+      this.gridWidth = prototype.gridWidth;
+      this.gridHeight = prototype.gridHeight;
+      this.hAlign = prototype.hAlign;
+      this.vAlign = prototype.vAlign;
+      this.insets = prototype.insets;
+    }
+
+    public FormLayoutSupportConstraints(int gridX, int gridY, int gridWidth, int gridHeight,
+    CellConstraints.Alignment hAlign, CellConstraints.Alignment vAlign, Insets insets){
+      this.gridX = gridX;
+      this.gridY = gridY;
+      this.gridWidth = gridWidth;
+      this.gridHeight = gridHeight;
+      this.hAlign = hAlign;
+      this.vAlign = vAlign;
+      this.insets = insets;
+    }
+
+    public String toString(){
+      StringBuffer sb = new StringBuffer(getClass().getName()).append("[");
+      sb.append("gridX=").append(gridX).append(",");
+      sb.append("gridY=").append(gridY).append(",");
+      sb.append("gridWidth=").append(gridWidth).append(",");
+      sb.append("gridHeight=").append(gridHeight).append(",");
+      sb.append("hAlign=").append(hAlign).append(",");
+      sb.append("vAlign=").append(vAlign).append(",");
+      sb.append("insets=").append(insets).append("]");
+      return sb.toString();
+    }
+    
+    public Node.Property[] getProperties(){
+      if(properties == null){
+        properties = createProperties();
+        reinstateProperties();
+      }
+      return properties;
+    }
+
+    public Object getConstraintsObject(){
+      return new CellConstraints(gridX, gridY, gridWidth, gridHeight, hAlign, vAlign, insets);
+    }
+
+    public LayoutConstraints cloneConstraints(){
+      return new FormLayoutSupportConstraints(this);
+    }
+
+    protected Node.Property[] createProperties(){
+      return new Node.Property[]{
+        new FormProperty("CellConstraints.gridX", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_gridX"), // NOI18N
+                         getBundle().getString("HINT_gridX")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(gridX);
+          }
+          public void setTargetValue(Object value){
+            gridX = ((Integer)value).intValue();
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        },
+
+        new FormProperty("CellConstraints.gridY", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_gridY"), // NOI18N
+                         getBundle().getString("HINT_gridY")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(gridY);
+          }
+          public void setTargetValue(Object value){
+            gridY = ((Integer)value).intValue();
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        },
+
+        new FormProperty("CellConstraints.gridWidth", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_gridWidth"), // NOI18N
+                         getBundle().getString("HINT_gridWidth")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(gridWidth);
+          }
+          public void setTargetValue(Object value){
+            gridWidth = ((Integer)value).intValue();
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          }
+        },
+
+        new FormProperty("CellConstraints.gridHeight", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_gridHeight"), // NOI18N
+                         getBundle().getString("HINT_gridHeight")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(gridHeight);
+          }
+          public void setTargetValue(Object value){
+            gridHeight = ((Integer)value).intValue();
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        },
+
+        new FormProperty("CellConstraints.hAlign", // NOI18N
+                         CellConstraints.Alignment.class,
+                         getBundle().getString("PROP_hAlign"), // NOI18N
+                         getBundle().getString("HINT_hAlign")){ // NOI18N
+
+          public Object getTargetValue(){
+            return hAlign;
+          }
+          public void setTargetValue(Object value){
+            hAlign = (CellConstraints.Alignment)value;
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+          public PropertyEditor getExpliciteEditor(){
+            return new HAlignEditor();
+          }
+        },
+
+        new FormProperty("CellConstraints.vAlign", // NOI18N
+                         CellConstraints.Alignment.class,
+                         getBundle().getString("PROP_vAlign"), // NOI18N
+                         getBundle().getString("HINT_vAlign")){ // NOI18N
+
+          public Object getTargetValue(){
+            return vAlign;
+          }
+          public void setTargetValue(Object value){
+            vAlign = (CellConstraints.Alignment)value;
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+          public PropertyEditor getExpliciteEditor(){
+            return new VAlignEditor();
+          }
+        },
+
+        new FormProperty("CellConstraints.insets", // NOI18N
+                         Insets.class,
+                         getBundle().getString("PROP_insets"), // NOI18N
+                         getBundle().getString("HINT_insets")){ // NOI18N
+
+          public Object getTargetValue(){
+            return insets;
+          }
+          public void setTargetValue(Object value){
+            insets = (Insets)value;
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        }
+      };
+    }
+
+    private void reinstateProperties(){
+      try{
+        for(int i = 0; i < properties.length; i++){
+          FormProperty prop = (FormProperty)properties[i];
+          prop.reinstateProperty();
+        }
+      }
+      catch(IllegalAccessException e1) {} // should not happen
+      catch(java.lang.reflect.InvocationTargetException e2) {} // should not happen
+    }
+
+    /** This method creates CodeExpression objects for properties of
+     * AbsoluteConstraints - this is used by the layout delegate's method
+     * createConstraintsCode which uses the expressions as parameters
+     * in AbsoluteConstraints constructor.
+     * @param codeStructure main CodeStructure object in which the code
+     *        expressions are created
+     * @param shift this parameter is used only by subclasses of
+     *        AbsoluteLayoutConstraints (which may insert another
+     *        constructor parameters before x, y, w and h)
+     * @return array of created code expressions
+     */
+    protected final CodeExpression[] createPropertyExpressions(CodeStructure codeStructure){
+      // first make sure properties are created...
+      getProperties();
+      
+      // ...then create code expressions based on the properties
+      ArrayList params = new ArrayList();
+      params.add(codeStructure.createExpression(FormCodeSupport.createOrigin(properties[0])));
+      params.add(codeStructure.createExpression(FormCodeSupport.createOrigin(properties[1])));
+      params.add(codeStructure.createExpression(FormCodeSupport.createOrigin(properties[2])));
+      params.add(codeStructure.createExpression(FormCodeSupport.createOrigin(properties[3])));
+      params.add(codeStructure.createExpression(FormCodeSupport.createOrigin(properties[4])));
+      params.add(codeStructure.createExpression(FormCodeSupport.createOrigin(properties[5])));
+      params.add(codeStructure.createExpression(FormCodeSupport.createOrigin(properties[6])));
+      return (CodeExpression[])params.toArray(new CodeExpression[params.size()]);
+    }
+    
+    protected final void readCodeExpression(CodeExpression constrExp, CodeGroup codeGroup){
+      // first make sure properties are created...
+      getProperties();
+      CodeExpression[] params = constrExp.getOrigin().getCreationParameters();
+      FormCodeSupport.readPropertyExpression(params[0], properties[0], false);
+      FormCodeSupport.readPropertyExpression(params[1], properties[1], false);
+      FormCodeSupport.readPropertyExpression(params[2], properties[2], false);
+      FormCodeSupport.readPropertyExpression(params[3], properties[3], false);
+      FormCodeSupport.readPropertyExpression(params[4], properties[4], false);
+      FormCodeSupport.readPropertyExpression(params[5], properties[5], false);
+      FormCodeSupport.readPropertyExpression(params[6], properties[6], false);
+    }
+
+  }
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/ConstraintsConverter.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/ConstraintsConverter.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/ConstraintsConverter.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,23 @@
+/*
+ * ConstraintsConverter.java
+ *
+ * Created on January 8, 2005, 23:16 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.converter;
+
+import java.awt.*;
+
+import org.netbeans.modules.form.layoutsupport.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public abstract class ConstraintsConverter{
+
+  public abstract void convertConstraints(LayoutSupportContext layoutSupportContext,
+  LayoutSupportDelegate layoutSupportDelegate, LayoutConstraints[] previousConstraints,
+  LayoutConstraints[] currentConstraints, Component[] components);
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/DefaultConstraintsConverter.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/DefaultConstraintsConverter.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/converter/DefaultConstraintsConverter.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,263 @@
+/*
+ * DefaultConstraintsConverter.java
+ *
+ * Created on January 8, 2005, 23:19 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.converter;
+
+import java.awt.Component;
+import java.awt.Container;
+import java.awt.Dimension;
+import java.awt.LayoutManager;
+import java.awt.Rectangle;
+import java.util.*;
+
+import org.openide.ErrorManager;
+
+import org.netbeans.modules.form.layoutsupport.*;
+
+import com.jgoodies.forms.debug.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class DefaultConstraintsConverter extends ConstraintsConverter{
+  
+  /** Creates a new instance of DefaultConstraintsConverter */
+  public DefaultConstraintsConverter(){
+  }
+  
+  public void convertConstraints(LayoutSupportContext layoutSupportContext,
+  LayoutSupportDelegate layoutSupportDelegate, LayoutConstraints[] previousConstraints,
+  LayoutConstraints[] currentConstraints, Component[] components){
+    FormLayoutSupport formLayoutSupport = (FormLayoutSupport)layoutSupportDelegate;
+    ArrayList xsList = new ArrayList();
+    ArrayList ysList = new ArrayList();
+    int prevX = 0;
+    int prevY = 0;
+    int maxX = 0;
+    int maxY = 0;
+    for(int i = 0; i < components.length; i++){
+      Component comp = components[i];
+      Rectangle cRect = comp.getBounds();
+      xsList.add(new SpaceInfo(cRect.x, cRect.width));
+      ysList.add(new SpaceInfo(cRect.y, cRect.height));
+      if(cRect.x != prevX){
+        if(cRect.x > prevX){
+          xsList.add(new SpaceInfo(prevX, cRect.x - prevX));
+        }
+        else{
+          xsList.add(new SpaceInfo(cRect.x, prevX - cRect.x));
+        }
+      }
+      if(cRect.y != prevY){
+        if(cRect.y > prevY){
+          ysList.add(new SpaceInfo(prevY, cRect.y - prevY));
+        }
+        else{
+          ysList.add(new SpaceInfo(cRect.y, prevY - cRect.y));
+        }
+      }
+      prevX = cRect.x + cRect.width;
+      prevY = cRect.y + cRect.height;
+      maxX = Math.max(maxX, prevX);
+      maxY = Math.max(maxY, prevY);
+    }
+//    Container container = layoutSupportContext.getPrimaryContainerDelegate();
+//    Dimension cDim = container.getSize();
+//    ErrorManager.getDefault().log(ErrorManager.WARNING, "cDim: " + cDim);
+//    ErrorManager.getDefault().log(ErrorManager.WARNING, "maxX: " + maxX + ", maxY: " + maxY);
+//    if(cDim.width - maxX > 0){
+//      xsList.add(new SpaceInfo(maxX, cDim.width - maxX));
+//    }
+//    if(cDim.height - maxY > 0){
+//      ysList.add(new SpaceInfo(maxY, cDim.height - maxY));
+//    }
+    splitSpace(xsList);
+    splitSpace(ysList);
+    SpaceInfo[] xsi = (SpaceInfo[])xsList.toArray(new SpaceInfo[xsList.size()]);
+    SpaceInfo[] ysi = (SpaceInfo[])ysList.toArray(new SpaceInfo[ysList.size()]);
+    String[] columns = new String[xsi.length];
+    String[] rows = new String[ysi.length];
+    copySize(xsi, columns);
+    copySize(ysi, rows);
+    for(int i = 0; i < components.length; i++){
+      Component comp = components[i];
+      Rectangle cRect = comp.getBounds();
+      Dimension prefSize = comp.getPreferredSize();
+      Dimension minSize = comp.getMinimumSize();
+      FormLayoutSupport.FormLayoutSupportConstraints constr = (FormLayoutSupport.FormLayoutSupportConstraints)formLayoutSupport.createDefaultConstraints();
+      for(int j = 0; j < xsi.length; j++){
+        if(xsi[j].position == cRect.x){
+          constr.gridX = j + 1;
+          constr.gridWidth = 0;
+        }
+        if((cRect.width > 0) && (xsi[j].position >= cRect.x)){
+          constr.gridWidth++;
+          cRect.width -= xsi[j].size;
+        }
+        if(cRect.width == 0){
+          if(constr.gridWidth == 1){
+            if(xsi[constr.gridX - 1].size == minSize.width){
+              columns[constr.gridX - 1] = "min(" + minSize.width + ";pref)";
+            }
+            if(xsi[constr.gridX - 1].size == prefSize.width){
+              columns[constr.gridX - 1] = "pref";
+            }
+          }
+          break;
+        }
+      }
+      for(int j = 0; j < ysi.length; j++){
+        if(ysi[j].position == cRect.y){
+          constr.gridY = j + 1;
+          constr.gridHeight = 0;
+        }
+        if((cRect.height > 0) && (ysi[j].position >= cRect.y)){
+          constr.gridHeight++;
+          cRect.height -= ysi[j].size;
+        }
+        if(cRect.height == 0){
+          if(constr.gridHeight == 1){
+            if(ysi[constr.gridY - 1].size == minSize.height){
+              rows[constr.gridY - 1] = "min(" + minSize.height + ";pref)";
+            }
+            if(ysi[constr.gridY - 1].size == prefSize.height){
+              rows[constr.gridY - 1] = "pref";
+            }
+          }
+          break;
+        }
+      }
+      constr.gridWidth = Math.max(1, constr.gridWidth);
+      constr.gridHeight = Math.max(1, constr.gridHeight);
+      currentConstraints[i] = constr;
+    }
+    formLayoutSupport.setColumns(combineSpec(columns));
+    formLayoutSupport.setRows(combineSpec(rows));
+  }
+
+  private void copySize(SpaceInfo[] si, String[] size){
+    for(int i = 0; i < si.length; i++){
+      size[i] = String.valueOf(si[i].size);
+    }
+  }
+
+  private String combineSpec(String[] specs){
+    StringBuffer sb = new StringBuffer();
+    boolean isFirst = true;
+    for(int i = 0; i < specs.length; i++){
+      if(isFirst){
+        isFirst = false;
+      }
+      else{
+        sb.append(",");
+      }
+      sb.append(specs[i]);
+    }
+    return sb.toString();
+  }
+  
+  private void splitSpace(List list){
+    List result = new ArrayList();
+    List list2 = new ArrayList(list);
+    Collections.reverse(list2);
+    for(Iterator iter = list.iterator(); iter.hasNext(); ){
+      SpaceInfo si1 = (SpaceInfo)iter.next();
+      int sipL1 = si1.position;
+      int sipR1 = si1.position + si1.size - 1;
+      boolean hasIntersections = false;
+      for(Iterator iter2 = list2.iterator(); iter2.hasNext(); ){
+        SpaceInfo si2 = (SpaceInfo)iter2.next();
+        if(si1 == si2){
+          break;
+        }
+        int sipL2 = si2.position;
+        int sipR2 = si2.position + si2.size - 1;
+        if((sipL1 > sipL2) && (sipL1 < sipR2) ||
+           (sipR1 > sipL2) && (sipR1 < sipR2) ||
+           (sipL2 > sipL1) && (sipL2 < sipR1) ||
+           (sipR2 > sipL1) && (sipR2 < sipR1)){
+          hasIntersections = true;
+          int L1 = Math.min(sipL1, sipL2);
+          int L2 = Math.max(sipL1, sipL2);
+          int R1 = Math.min(sipR1, sipR2);
+          int R2 = Math.max(sipR1, sipR2);
+          int[] sizes = new int[]{L2 - L1, R1 - L2 + 1, R2 - R1};
+          int position = L1;
+          for(int i = 0; i < sizes.length; i++){
+            if(sizes[i] > 0){
+              result.add(new SpaceInfo(position, sizes[i]));
+            }
+            position += sizes[i];
+          }
+        }
+      }
+      if(!hasIntersections){
+        result.add(si1);
+      }
+    }
+    list2 = new ArrayList(result);
+    Collection toRemove = new ArrayList();
+    for(Iterator iter = result.iterator(); iter.hasNext(); ){
+      SpaceInfo si1 = (SpaceInfo)iter.next();
+      int sipL1 = si1.position;
+      int sipR1 = si1.position + si1.size - 1;
+      for(Iterator iter2 = list2.iterator(); iter2.hasNext(); ){
+        SpaceInfo si2 = (SpaceInfo)iter2.next();
+        if(si1 == si2){
+          continue;
+        }
+        if((si1.position == si2.position) && (si1.size >= si2.size) && !toRemove.contains(si2)){
+          toRemove.add(si1);
+          break;
+        }
+      }
+    }
+    result.removeAll(toRemove);
+    Collections.sort(result);
+    list.clear();
+    list.addAll(result);
+  }
+  
+  private static class SpaceInfo implements Comparable{
+    int position;
+    int size;
+
+    public SpaceInfo(int position, int size){
+      this.position = position;
+      this.size = size;
+    }
+
+    public int compareTo(Object o){
+      SpaceInfo si = (SpaceInfo)o;
+      return position - si.position;
+    }
+
+    public String toString(){
+      StringBuffer sb = new StringBuffer(getClass().getName()).append("[");
+      sb.append("position=").append(position).append(",");
+      sb.append("size=").append(size).append("]");
+      return sb.toString();
+    }
+    
+  }
+
+  public static void main(String[] args){
+    List sil = new ArrayList();
+    sil.add(new SpaceInfo(4, 8));
+    sil.add(new SpaceInfo(0, 10));
+    sil.add(new SpaceInfo(2, 4));
+    sil.add(new SpaceInfo(1, 10));
+    new DefaultConstraintsConverter().splitSpace(sil);
+    for(Iterator iter = sil.iterator(); iter.hasNext(); ){
+      SpaceInfo si = (SpaceInfo)iter.next();
+      System.out.println(si);
+    }
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/AbstractColumnRowCustomizerContext.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/AbstractColumnRowCustomizerContext.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/AbstractColumnRowCustomizerContext.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,58 @@
+/*
+ * AbstractColumnRowCustomizerContext.java
+ *
+ * Created on January 9, 2005, 3:21 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import java.beans.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public abstract class AbstractColumnRowCustomizerContext implements ColumnRowCustomizerContext{
+  
+  protected FormLayoutSupport layoutSupport;
+  protected PropertyEditor propertyEditor;
+
+  /** Creates a new instance of AbstractColumnRowCustomizerContext */
+  public AbstractColumnRowCustomizerContext(){
+  }
+  
+  /**
+   * Getter for property propertyEditor.
+   * @return Value of property propertyEditor.
+   */
+  public PropertyEditor getPropertyEditor(){
+    return propertyEditor;
+  }  
+  
+  /**
+   * Setter for property propertyEditor.
+   * @param propertyEditor New value of property propertyEditor.
+   */
+  public void setPropertyEditor(PropertyEditor propertyEditor){
+    this.propertyEditor = propertyEditor;
+  }  
+  
+  /**
+   * Getter for property layoutSupport.
+   * @return Value of property layoutSupport.
+   */
+  public FormLayoutSupport getLayoutSupport(){
+    return layoutSupport;
+  }
+  
+  /**
+   * Setter for property layoutSupport.
+   * @param layoutSupport New value of property layoutSupport.
+   */
+  public void setLayoutSupport(FormLayoutSupport layoutSupport){
+    this.layoutSupport = layoutSupport;
+  }
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/AbstractGroupCustomizerContext.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/AbstractGroupCustomizerContext.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/AbstractGroupCustomizerContext.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,66 @@
+/*
+ * AbstractGroupCustomizerContext.java
+ *
+ * Created on January 13, 2005, 9:17 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import java.beans.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+import de.berlios.nblayoutpack.formlayout.editors.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public abstract class AbstractGroupCustomizerContext implements GroupCustomizerContext{
+  
+  protected FormLayoutSupport layoutSupport;
+  protected PropertyEditor propertyEditor;
+
+  /** Creates a new instance of AbstractGroupCustomizerContext */
+  public AbstractGroupCustomizerContext(){
+  }
+
+  /**
+   * Getter for property propertyEditor.
+   * @return Value of property propertyEditor.
+   */
+  public PropertyEditor getPropertyEditor(){
+    return propertyEditor;
+  }  
+  
+  /**
+   * Setter for property propertyEditor.
+   * @param propertyEditor New value of property propertyEditor.
+   */
+  public void setPropertyEditor(PropertyEditor propertyEditor){
+    this.propertyEditor = propertyEditor;
+  }  
+  
+  /**
+   * Getter for property layoutSupport.
+   * @return Value of property layoutSupport.
+   */
+  public FormLayoutSupport getLayoutSupport(){
+    return layoutSupport;
+  }
+  
+  /**
+   * Setter for property layoutSupport.
+   * @param layoutSupport New value of property layoutSupport.
+   */
+  public void setLayoutSupport(FormLayoutSupport layoutSupport){
+    this.layoutSupport = layoutSupport;
+  }
+
+  public void checkGroup(String group) throws Exception{
+    int[][] groups = GroupsEditor.parseGroups(group, false);
+    if(groups.length != 1){
+      throw new IllegalArgumentException();
+    }
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnCustomizerContext.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnCustomizerContext.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnCustomizerContext.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,64 @@
+/*
+ * ColumnCustomizerContext.java
+ *
+ * Created on January 9, 2005, 3:19 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import java.awt.*;
+import java.beans.*;
+
+import javax.swing.*;
+import javax.swing.table.*;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class ColumnCustomizerContext extends AbstractColumnRowCustomizerContext{
+  
+  /** Creates a new instance of ColumnCustomizerContext */
+  public ColumnCustomizerContext(){
+  }
+  
+  public void afterInsert(int index, String spec){
+  }
+  
+  public void beforeDelete(int index){
+  }
+  
+  public void checkSpecification(String spec) throws Exception{
+    ColumnSpec[] specs = ColumnSpec.decodeSpecs(spec);
+  }
+  
+  public String getValue(){
+    if(layoutSupport != null){
+      return layoutSupport.getColumns();
+    }
+    if(propertyEditor != null){
+      return propertyEditor.getAsText();
+    }
+    return "";
+  }
+  
+  public void initSpecLabel(JLabel label){
+    label.setText("Column specification:");
+    label.setDisplayedMnemonic('C');
+    label.setDisplayedMnemonicIndex(0);
+  }
+  
+  public void setValue(String spec){
+    if(layoutSupport != null){
+      layoutSupport.setColumns(spec);
+    }
+    if(propertyEditor != null){
+      propertyEditor.setAsText(spec);
+    }
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnGroupCustomizerContext.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnGroupCustomizerContext.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnGroupCustomizerContext.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,48 @@
+/*
+ * ColumnGroupCustomizerContext.java
+ *
+ * Created on January 13, 2005, 9:27 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import javax.swing.*;
+
+import de.berlios.nblayoutpack.formlayout.editors.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class ColumnGroupCustomizerContext extends AbstractGroupCustomizerContext{
+  
+  /** Creates a new instance of ColumnGroupCustomizerContext */
+  public ColumnGroupCustomizerContext(){
+  }
+  
+  public String getValue(){
+    if(layoutSupport != null){
+      return GroupsEditor.getAsString(layoutSupport.getColumnGroups());
+    }
+    if(propertyEditor != null){
+      return propertyEditor.getAsText();
+    }
+    return "";
+  }
+  
+  public void initSpecLabel(JLabel label){
+    label.setText("Column group:");
+    label.setDisplayedMnemonic('C');
+    label.setDisplayedMnemonicIndex(0);
+  }
+  
+  public void setValue(String spec){
+    if(layoutSupport != null){
+      layoutSupport.setColumnGroups(GroupsEditor.parseGroups(spec));
+    }
+    if(propertyEditor != null){
+      propertyEditor.setAsText(spec);
+    }
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizer.form
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizer.form	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizer.form	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,938 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<Form version="1.1" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
+  <AuxValues>
+    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,57,0,0,1,-37"/>
+  </AuxValues>
+  <SubComponents>
+    <Component class="javax.swing.JLabel" name="specLabel">
+      <Properties>
+        <Property name="displayedMnemonic" type="int" value="67"/>
+        <Property name="labelFor" type="java.awt.Component" editor="org.netbeans.modules.form.ComponentChooserEditor">
+          <ComponentRef name="specField"/>
+        </Property>
+        <Property name="text" type="java.lang.String" value="Column/row specification:"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JTextField" name="specField">
+      <Events>
+        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="specFieldActionPerformed"/>
+      </Events>
+    </Component>
+    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
+      <Properties>
+        <Property name="verticalScrollBarPolicy" type="int" value="22"/>
+      </Properties>
+
+      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+      <SubComponents>
+        <Component class="javax.swing.JTable" name="layoutTable">
+          <Properties>
+            <Property name="model" type="javax.swing.table.TableModel" editor="org.netbeans.modules.form.editors2.TableModelEditor">
+              <Table columnCount="2" rowCount="2">
+                <Column editable="true" title="Title 1" type="java.lang.Object"/>
+                <Column editable="true" title="Title 2" type="java.lang.Object"/>
+              </Table>
+            </Property>
+          </Properties>
+          <Events>
+            <EventHandler event="keyPressed" listener="java.awt.event.KeyListener" parameters="java.awt.event.KeyEvent" handler="layoutTableKeyPressed"/>
+          </Events>
+        </Component>
+      </SubComponents>
+    </Container>
+    <Component class="javax.swing.JButton" name="addButton">
+      <Properties>
+        <Property name="icon" type="javax.swing.Icon" editor="org.openide.explorer.propertysheet.editors.IconEditor">
+          <Image iconType="3" name="/de/berlios/nblayoutpack/formlayout/resources/add.png"/>
+        </Property>
+        <Property name="mnemonic" type="int" value="65"/>
+        <Property name="toolTipText" type="java.lang.String" value="Add"/>
+        <Property name="focusable" type="boolean" value="false"/>
+        <Property name="horizontalTextPosition" type="int" value="0"/>
+      </Properties>
+      <Events>
+        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="addButtonActionPerformed"/>
+      </Events>
+    </Component>
+    <Component class="javax.swing.JButton" name="deleteButton">
+      <Properties>
+        <Property name="icon" type="javax.swing.Icon" editor="org.openide.explorer.propertysheet.editors.IconEditor">
+          <Image iconType="3" name="/de/berlios/nblayoutpack/formlayout/resources/remove.png"/>
+        </Property>
+        <Property name="mnemonic" type="int" value="68"/>
+        <Property name="toolTipText" type="java.lang.String" value="Delete"/>
+        <Property name="focusable" type="boolean" value="false"/>
+      </Properties>
+      <Events>
+        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="deleteButtonActionPerformed"/>
+      </Events>
+    </Component>
+    <Component class="javax.swing.JButton" name="insertBeforeButton">
+      <Properties>
+        <Property name="icon" type="javax.swing.Icon" editor="org.openide.explorer.propertysheet.editors.IconEditor">
+          <Image iconType="3" name="/de/berlios/nblayoutpack/formlayout/resources/insertbefore.png"/>
+        </Property>
+        <Property name="toolTipText" type="java.lang.String" value="Insert before"/>
+        <Property name="focusable" type="boolean" value="false"/>
+      </Properties>
+      <Events>
+        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="insertBeforeButtonActionPerformed"/>
+      </Events>
+    </Component>
+    <Component class="javax.swing.JButton" name="insertAfterButton">
+      <Properties>
+        <Property name="icon" type="javax.swing.Icon" editor="org.openide.explorer.propertysheet.editors.IconEditor">
+          <Image iconType="3" name="/de/berlios/nblayoutpack/formlayout/resources/insertafter.png"/>
+        </Property>
+        <Property name="toolTipText" type="java.lang.String" value="Insert after"/>
+        <Property name="focusable" type="boolean" value="false"/>
+      </Properties>
+      <Events>
+        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="insertAfterButtonActionPerformed"/>
+      </Events>
+    </Component>
+    <Component class="javax.swing.JButton" name="moveUpButton">
+      <Properties>
+        <Property name="icon" type="javax.swing.Icon" editor="org.openide.explorer.propertysheet.editors.IconEditor">
+          <Image iconType="3" name="/de/berlios/nblayoutpack/formlayout/resources/moveup.png"/>
+        </Property>
+        <Property name="toolTipText" type="java.lang.String" value="Move up"/>
+        <Property name="focusable" type="boolean" value="false"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JButton" name="moveDownButton">
+      <Properties>
+        <Property name="icon" type="javax.swing.Icon" editor="org.openide.explorer.propertysheet.editors.IconEditor">
+          <Image iconType="3" name="/de/berlios/nblayoutpack/formlayout/resources/movedown.png"/>
+        </Property>
+        <Property name="toolTipText" type="java.lang.String" value="Move down"/>
+        <Property name="focusable" type="boolean" value="false"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JButton" name="mergeUpButton">
+      <Properties>
+        <Property name="icon" type="javax.swing.Icon" editor="org.openide.explorer.propertysheet.editors.IconEditor">
+          <Image iconType="3" name="/de/berlios/nblayoutpack/formlayout/resources/mergeup.png"/>
+        </Property>
+        <Property name="toolTipText" type="java.lang.String" value="Merge up"/>
+        <Property name="actionCommand" type="java.lang.String" value="mergeUp"/>
+        <Property name="focusable" type="boolean" value="false"/>
+        <Property name="enabled" type="boolean" value="false"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JButton" name="mergeDownButton">
+      <Properties>
+        <Property name="icon" type="javax.swing.Icon" editor="org.openide.explorer.propertysheet.editors.IconEditor">
+          <Image iconType="3" name="/de/berlios/nblayoutpack/formlayout/resources/mergedown.png"/>
+        </Property>
+        <Property name="toolTipText" type="java.lang.String" value="Merge down"/>
+        <Property name="actionCommand" type="java.lang.String" value="mergeDown"/>
+        <Property name="focusable" type="boolean" value="false"/>
+        <Property name="enabled" type="boolean" value="false"/>
+      </Properties>
+    </Component>
+  </SubComponents>
+  <LayoutCode>
+    <CodeStatement>
+      <CodeExpression id="1__formLayoutInstance">
+        <CodeVariable name="_formLayoutInstance" type="4096" declaredType="com.jgoodies.forms.layout.FormLayout"/>
+        <ExpressionOrigin>
+          <ExpressionProvider type="CodeConstructor">
+            <CodeConstructor class="com.jgoodies.forms.layout.FormLayout" parameterTypes="java.lang.String, java.lang.String"/>
+          </ExpressionProvider>
+          <Parameters>
+            <CodeExpression id="2">
+              <ExpressionOrigin>
+                <Value type="java.lang.String" value="4dlu,250px:grow,8dlu,p,4dlu,p,4dlu"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="3">
+              <ExpressionOrigin>
+                <Value type="java.lang.String" value="4dlu,p,4dlu,p,8dlu,p,4dlu,p,8dlu,p,4dlu,p,0:grow,4dlu"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </ExpressionOrigin>
+      </CodeExpression>
+      <StatementProvider type="CodeExpression">
+        <CodeExpression id="1__formLayoutInstance"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="2"/>
+        <CodeExpression id="3"/>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="1__formLayoutInstance"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setColumnGroups" class="com.jgoodies.forms.layout.FormLayout" parameterTypes="[[I"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="4">
+          <ExpressionOrigin>
+            <Value type="[[I" editor="de.berlios.nblayoutpack.formlayout.editors.ColumnGroupsEditor">
+              <SerializedValue value="-84,-19,0,5,117,114,0,3,91,91,73,23,-9,-28,79,25,-113,-119,60,2,0,0,120,112,0,0,0,1,117,114,0,2,91,73,77,-70,96,38,118,-22,-78,-91,2,0,0,120,112,0,0,0,2,0,0,0,4,0,0,0,6"/>
+            </Value>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="1__formLayoutInstance"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setRowGroups" class="com.jgoodies.forms.layout.FormLayout" parameterTypes="[[I"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="5">
+          <ExpressionOrigin>
+            <Value type="[[I" editor="de.berlios.nblayoutpack.formlayout.editors.RowGroupsEditor">
+              <SerializedValue value="-84,-19,0,5,117,114,0,3,91,91,73,23,-9,-28,79,25,-113,-119,60,2,0,0,120,112,0,0,0,1,117,114,0,2,91,73,77,-70,96,38,118,-22,-78,-91,2,0,0,120,112,0,0,0,0"/>
+            </Value>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6">
+        <ExpressionOrigin>
+          <ExpressionProvider type="ComponentRef">
+            <ComponentRef name="."/>
+          </ExpressionProvider>
+        </ExpressionOrigin>
+      </CodeExpression>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setLayout" class="java.awt.Container" parameterTypes="java.awt.LayoutManager"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="1__formLayoutInstance"/>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="7_specLabel">
+          <CodeVariable name="specLabel" type="8194" declaredType="javax.swing.JLabel"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="specLabel"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="8">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="9">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="10">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="11">
+                <ExpressionOrigin>
+                  <Value type="int" value="5"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="12">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="13">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="14">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="15">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="16_specField">
+          <CodeVariable name="specField" type="8194" declaredType="javax.swing.JTextField"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="specField"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="17">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="18">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="19">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="20">
+                <ExpressionOrigin>
+                  <Value type="int" value="5"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="21">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="22">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="23">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="24">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="25_jScrollPane1">
+          <CodeVariable name="jScrollPane1" type="8194" declaredType="javax.swing.JScrollPane"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="jScrollPane1"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="26">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="27">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="28">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="29">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="30">
+                <ExpressionOrigin>
+                  <Value type="int" value="8"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="31">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="32">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="33">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="34_addButton">
+          <CodeVariable name="addButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="addButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="35">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="36">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="37">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="38">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="39">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="40">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="41">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="42">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="43_deleteButton">
+          <CodeVariable name="deleteButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="deleteButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="44">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="45">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="46">
+                <ExpressionOrigin>
+                  <Value type="int" value="8"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="47">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="48">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="49">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="50">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,5"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="51">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="52_insertBeforeButton">
+          <CodeVariable name="insertBeforeButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="insertBeforeButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="53">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="54">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="55">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="56">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="57">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="58">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="59">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="60">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="61_insertAfterButton">
+          <CodeVariable name="insertAfterButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="insertAfterButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="62">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="63">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="64">
+                <ExpressionOrigin>
+                  <Value type="int" value="8"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="65">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="66">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="67">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="68">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="69">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="70_moveUpButton">
+          <CodeVariable name="moveUpButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="moveUpButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="71">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="72">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="73">
+                <ExpressionOrigin>
+                  <Value type="int" value="10"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="74">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="75">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="76">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="77">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="78">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="79_moveDownButton">
+          <CodeVariable name="moveDownButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="moveDownButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="80">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="81">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="82">
+                <ExpressionOrigin>
+                  <Value type="int" value="12"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="83">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="84">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="85">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="86">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="87">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="88_mergeUpButton">
+          <CodeVariable name="mergeUpButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="mergeUpButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="89">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="90">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="91">
+                <ExpressionOrigin>
+                  <Value type="int" value="10"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="92">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="93">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="94">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="95">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="96">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="97_mergeDownButton">
+          <CodeVariable name="mergeDownButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="mergeDownButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="98">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="99">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="100">
+                <ExpressionOrigin>
+                  <Value type="int" value="12"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="101">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="102">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="103">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="104">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="105">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+  </LayoutCode>
+</Form>

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizer.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizer.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizer.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,444 @@
+/*
+ * ColumnRowCustomizer.java
+ *
+ * Created on January 7, 2005, 1:56 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.beans.*;
+import java.util.*;
+
+import javax.swing.*;
+import javax.swing.event.*;
+import javax.swing.table.*;
+
+import org.openide.explorer.propertysheet.editors.EnhancedCustomPropertyEditor;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class ColumnRowCustomizer extends JPanel
+                                 implements EnhancedCustomPropertyEditor{
+
+  private ColumnRowCustomizerContext context;
+  private LayoutTableModel layoutTableModel;
+  private Action moveUpAction = new MoveUpAction();
+  private Action moveDownAction = new MoveDownAction();
+
+  /** Creates new form ColumnRowCustomizer */
+  public ColumnRowCustomizer(ColumnRowCustomizerContext context){
+    this.context = context;
+    initComponents();
+    InputMap im = layoutTable.getInputMap(JComponent.WHEN_FOCUSED);
+    im.put(KeyStroke.getKeyStroke(KeyEvent.VK_UP, KeyEvent.CTRL_DOWN_MASK), "moveUp");
+    im.put(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, KeyEvent.CTRL_DOWN_MASK), "moveDown");
+    ActionMap actionMap = layoutTable.getActionMap();
+    actionMap.put("moveUp", moveUpAction);
+    actionMap.put("moveDown", moveDownAction);
+    moveUpButton.setAction(moveUpAction);
+    moveDownButton.setAction(moveDownAction);
+    context.initSpecLabel(specLabel);
+    layoutTableModel = new LayoutTableModel();
+    layoutTable.setModel(layoutTableModel);
+    DefaultTableCellRenderer numberCellRenderer = new DefaultTableCellRenderer();
+    numberCellRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
+    layoutTable.getColumnModel().getColumn(0).setPreferredWidth(36);
+    layoutTable.getColumnModel().getColumn(0).setCellRenderer(numberCellRenderer);
+    layoutTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
+    layoutTable.getSelectionModel().addListSelectionListener(new TableListener());
+    updateData();
+  }
+  
+  public Object getPropertyValue() throws java.lang.IllegalStateException{
+    return getCustomizerValue();
+  }
+
+  protected String getCustomizerValue(){
+    String[] data = layoutTableModel.getData();
+    StringBuffer sb = new StringBuffer();
+    boolean isFirst = true;
+    for(int i = 0; i < data.length; i++){
+      if(isFirst){
+        isFirst = false;
+      }
+      else{
+        sb.append(",");
+      }
+      sb.append(data[i]);
+    }
+    return sb.toString();
+  }
+  
+  /** This method is called from within the constructor to
+   * initialize the form.
+   * WARNING: Do NOT modify this code. The content of this method is
+   * always regenerated by the Form Editor.
+   */
+  private void initComponents() {//GEN-BEGIN:initComponents
+    specLabel = new javax.swing.JLabel();
+    specField = new javax.swing.JTextField();
+    jScrollPane1 = new javax.swing.JScrollPane();
+    layoutTable = new javax.swing.JTable();
+    addButton = new javax.swing.JButton();
+    deleteButton = new javax.swing.JButton();
+    insertBeforeButton = new javax.swing.JButton();
+    insertAfterButton = new javax.swing.JButton();
+    moveUpButton = new javax.swing.JButton();
+    moveDownButton = new javax.swing.JButton();
+    mergeUpButton = new javax.swing.JButton();
+    mergeDownButton = new javax.swing.JButton();
+    
+    com.jgoodies.forms.layout.FormLayout _formLayoutInstance = new com.jgoodies.forms.layout.FormLayout("4dlu,250px:grow,8dlu,p,4dlu,p,4dlu", "4dlu,p,4dlu,p,8dlu,p,4dlu,p,8dlu,p,4dlu,p,0:grow,4dlu");
+    _formLayoutInstance.setColumnGroups(new int[][]{{4, 6}});
+    _formLayoutInstance.setRowGroups(new int[][]{});
+    setLayout(_formLayoutInstance);
+    
+    specLabel.setDisplayedMnemonic('C');
+    specLabel.setLabelFor(specField);
+    specLabel.setText("Column/row specification:");
+    add(specLabel, new com.jgoodies.forms.layout.CellConstraints(2, 2, 5, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    specField.addActionListener(new java.awt.event.ActionListener() {
+      public void actionPerformed(java.awt.event.ActionEvent evt) {
+        specFieldActionPerformed(evt);
+      }
+    });
+    
+    add(specField, new com.jgoodies.forms.layout.CellConstraints(2, 4, 5, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    jScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
+    layoutTable.setModel(new javax.swing.table.DefaultTableModel(
+    new Object [][] {
+      {null, null},
+      {null, null}
+    },
+    new String [] {
+      "Title 1", "Title 2"
+    }
+    ));
+    layoutTable.addKeyListener(new java.awt.event.KeyAdapter() {
+      public void keyPressed(java.awt.event.KeyEvent evt) {
+        layoutTableKeyPressed(evt);
+      }
+    });
+    
+    jScrollPane1.setViewportView(layoutTable);
+    
+    add(jScrollPane1, new com.jgoodies.forms.layout.CellConstraints(2, 6, 1, 8, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/add.png")));
+    addButton.setMnemonic('A');
+    addButton.setToolTipText("Add");
+    addButton.setFocusable(false);
+    addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
+    addButton.addActionListener(new java.awt.event.ActionListener() {
+      public void actionPerformed(java.awt.event.ActionEvent evt) {
+        addButtonActionPerformed(evt);
+      }
+    });
+    
+    add(addButton, new com.jgoodies.forms.layout.CellConstraints(4, 6, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/remove.png")));
+    deleteButton.setMnemonic('D');
+    deleteButton.setToolTipText("Delete");
+    deleteButton.setFocusable(false);
+    deleteButton.addActionListener(new java.awt.event.ActionListener() {
+      public void actionPerformed(java.awt.event.ActionEvent evt) {
+        deleteButtonActionPerformed(evt);
+      }
+    });
+    
+    add(deleteButton, new com.jgoodies.forms.layout.CellConstraints(4, 8, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.TOP, new java.awt.Insets(0, 0, 0, 0)));
+    
+    insertBeforeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/insertbefore.png")));
+    insertBeforeButton.setToolTipText("Insert before");
+    insertBeforeButton.setFocusable(false);
+    insertBeforeButton.addActionListener(new java.awt.event.ActionListener() {
+      public void actionPerformed(java.awt.event.ActionEvent evt) {
+        insertBeforeButtonActionPerformed(evt);
+      }
+    });
+    
+    add(insertBeforeButton, new com.jgoodies.forms.layout.CellConstraints(6, 6, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    insertAfterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/insertafter.png")));
+    insertAfterButton.setToolTipText("Insert after");
+    insertAfterButton.setFocusable(false);
+    insertAfterButton.addActionListener(new java.awt.event.ActionListener() {
+      public void actionPerformed(java.awt.event.ActionEvent evt) {
+        insertAfterButtonActionPerformed(evt);
+      }
+    });
+    
+    add(insertAfterButton, new com.jgoodies.forms.layout.CellConstraints(6, 8, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    moveUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/moveup.png")));
+    moveUpButton.setToolTipText("Move up");
+    moveUpButton.setFocusable(false);
+    add(moveUpButton, new com.jgoodies.forms.layout.CellConstraints(4, 10, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    moveDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/movedown.png")));
+    moveDownButton.setToolTipText("Move down");
+    moveDownButton.setFocusable(false);
+    add(moveDownButton, new com.jgoodies.forms.layout.CellConstraints(4, 12, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    mergeUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/mergeup.png")));
+    mergeUpButton.setToolTipText("Merge up");
+    mergeUpButton.setActionCommand("mergeUp");
+    mergeUpButton.setFocusable(false);
+    mergeUpButton.setEnabled(false);
+    add(mergeUpButton, new com.jgoodies.forms.layout.CellConstraints(6, 10, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+    mergeDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/mergedown.png")));
+    mergeDownButton.setToolTipText("Merge down");
+    mergeDownButton.setActionCommand("mergeDown");
+    mergeDownButton.setFocusable(false);
+    mergeDownButton.setEnabled(false);
+    add(mergeDownButton, new com.jgoodies.forms.layout.CellConstraints(6, 12, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+    
+  }//GEN-END:initComponents
+
+  private void layoutTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_layoutTableKeyPressed
+    int keyCode = evt.getKeyCode();
+    int modifiers = evt.getModifiers();
+    if((keyCode == KeyEvent.VK_SPACE) && (modifiers == 0)){
+      specField.requestFocusInWindow();
+      specField.selectAll();
+    }
+    if((keyCode == KeyEvent.VK_DELETE) && (modifiers == 0)){
+      delete(layoutTable.getSelectedRow());
+    }
+  }//GEN-LAST:event_layoutTableKeyPressed
+
+  private void specFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specFieldActionPerformed
+    replace(layoutTable.getSelectedRow());
+  }//GEN-LAST:event_specFieldActionPerformed
+
+  private void insertAfterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertAfterButtonActionPerformed
+    insert(layoutTable.getSelectedRow(), 1);
+  }//GEN-LAST:event_insertAfterButtonActionPerformed
+
+  private void insertBeforeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBeforeButtonActionPerformed
+    insert(layoutTable.getSelectedRow(), 0);
+  }//GEN-LAST:event_insertBeforeButtonActionPerformed
+
+  private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
+    delete(layoutTable.getSelectedRow());
+  }//GEN-LAST:event_deleteButtonActionPerformed
+
+  private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
+    insert(0, layoutTableModel.getData().length);
+  }//GEN-LAST:event_addButtonActionPerformed
+
+  protected void insert(int position, int delta){
+    String spec = specField.getText();
+    try{
+      context.checkSpecification(spec);
+    }
+    catch(Exception e){
+      specField.requestFocusInWindow();
+      return;
+    }
+    ArrayList list = new ArrayList(Arrays.asList(layoutTableModel.getData()));
+    list.add(position + delta, spec);
+    layoutTableModel.setData((String[])list.toArray(new String[list.size()]));
+    layoutTable.getSelectionModel().setSelectionInterval(position + delta, position + delta);
+    specField.requestFocusInWindow();
+    specField.selectAll();
+  }
+  
+  protected void replace(int position){
+    if(position < 0){
+      insert(0, layoutTableModel.getData().length);
+      return;
+    }
+    String spec = specField.getText();
+    try{
+      context.checkSpecification(spec);
+    }
+    catch(Exception e){
+      specField.requestFocusInWindow();
+      return;
+    }
+    String[] data = layoutTableModel.getData();
+    data[position] = spec;
+    layoutTableModel.setData(data);
+    layoutTable.getSelectionModel().setSelectionInterval(position, position);
+    specField.requestFocusInWindow();
+    specField.selectAll();
+  }
+  
+  protected void delete(int position){
+    ArrayList list = new ArrayList(Arrays.asList(layoutTableModel.getData()));
+    list.remove(position);
+    String[] data = (String[])list.toArray(new String[list.size()]);
+    layoutTableModel.setData(data);
+    int selRow = Math.min(position, data.length - 1);
+    layoutTable.getSelectionModel().setSelectionInterval(selRow, selRow);
+    specField.requestFocusInWindow();
+    specField.selectAll();
+  }
+  
+  public void updateData(){
+    String value = context.getValue();
+    layoutTableModel.setData(value.split(","));
+    updateButtons();
+  }
+  
+  public void updateButtons(){
+    int selRow = layoutTable.getSelectedRow();
+    insertBeforeButton.setEnabled(selRow >= 0);
+    insertAfterButton.setEnabled(selRow >= 0);
+    deleteButton.setEnabled(selRow >= 0);
+    moveUpAction.setEnabled(selRow > 0);
+    moveDownAction.setEnabled((selRow >= 0) && (selRow < layoutTableModel.getRowCount() - 1));
+  }
+    
+  /**
+   * Getter for property context.
+   * @return Value of property context.
+   */
+  public ColumnRowCustomizerContext getContext(){
+    return context;
+  }
+  
+  /**
+   * Setter for property context.
+   * @param context New value of property context.
+   */
+  public void setContext(ColumnRowCustomizerContext context){
+    this.context = context;
+  }
+  
+  // Variables declaration - do not modify//GEN-BEGIN:variables
+  private javax.swing.JButton addButton;
+  private javax.swing.JButton deleteButton;
+  private javax.swing.JButton insertAfterButton;
+  private javax.swing.JButton insertBeforeButton;
+  private javax.swing.JScrollPane jScrollPane1;
+  private javax.swing.JTable layoutTable;
+  private javax.swing.JButton mergeDownButton;
+  private javax.swing.JButton mergeUpButton;
+  private javax.swing.JButton moveDownButton;
+  private javax.swing.JButton moveUpButton;
+  private javax.swing.JTextField specField;
+  private javax.swing.JLabel specLabel;
+  // End of variables declaration//GEN-END:variables
+  
+  private class LayoutTableModel extends AbstractTableModel{
+
+    private String[] layoutData;
+    
+    void setData(String[] data){
+      layoutData = data;
+      fireTableDataChanged();
+//      String customizerValue = getCustomizerValue();
+//      if(!customizerValue.equalsIgnoreCase(getValue())){
+//        setValue(customizerValue);
+//      }
+    }
+    
+    String[] getData(){
+      return layoutData;
+    }
+    
+    // --------
+    
+    public int getRowCount(){
+      return layoutData == null ? 0 : layoutData.length;
+    }
+    
+    public int getColumnCount(){
+      return 2;
+    }
+    
+    public Object getValueAt(int row, int column){
+      switch (column){
+        case 0: return new Integer(row + 1);
+        case 1: return layoutData[row];
+      }
+      throw new ArrayIndexOutOfBoundsException();
+    }
+    
+    public Class getColumnClass(int column){
+      switch (column) {
+        case 0: return Integer.class;
+        case 1: return String.class;
+      }
+      throw new ArrayIndexOutOfBoundsException();
+    }
+    
+    public String getColumnName(int column){
+      switch (column){
+        case 0:
+        case 1: return "";
+      }
+      throw new ArrayIndexOutOfBoundsException();
+    }
+  }
+
+  private class TableListener implements ListSelectionListener{
+
+    public void valueChanged(ListSelectionEvent e){
+      int selRow = layoutTable.getSelectedRow();
+      if(selRow < 0){
+        specField.setText("");
+      }
+      else{
+        specField.setText(layoutTableModel.getData()[selRow]);
+      }
+      updateButtons();
+    }
+
+  }
+
+  private class MoveUpAction extends AbstractAction{
+
+    public MoveUpAction(){
+      putValue(Action.SMALL_ICON, new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/moveup.png")));
+      putValue(Action.SHORT_DESCRIPTION, "Move up");
+    }
+
+    public void actionPerformed(ActionEvent e){
+      int selRow = layoutTable.getSelectedRow();
+      String[] data = layoutTableModel.getData();
+      String temp = data[selRow];
+      data[selRow] = data[selRow - 1];
+      data[selRow - 1] = temp;
+      layoutTableModel.setData(data);
+      layoutTable.getSelectionModel().setSelectionInterval(selRow - 1, selRow - 1);
+      layoutTable.requestFocusInWindow();
+    }
+
+  }
+
+  private class MoveDownAction extends AbstractAction{
+
+    public MoveDownAction(){
+      putValue(Action.SMALL_ICON, new javax.swing.ImageIcon(getClass().getResource("/de/berlios/nblayoutpack/formlayout/resources/movedown.png")));
+      putValue(Action.SHORT_DESCRIPTION, "Move down");
+    }
+
+    public void actionPerformed(ActionEvent e){
+      int selRow = layoutTable.getSelectedRow();
+      String[] data = layoutTableModel.getData();
+      String temp = data[selRow];
+      data[selRow] = data[selRow + 1];
+      data[selRow + 1] = temp;
+      layoutTableModel.setData(data);
+      layoutTable.getSelectionModel().setSelectionInterval(selRow + 1, selRow + 1);
+      layoutTable.requestFocusInWindow();
+    }
+
+  }
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizerContext.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizerContext.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/ColumnRowCustomizerContext.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,24 @@
+/*
+ * ColumnRowCustomizerContext.java
+ *
+ * Created on January 9, 2005, 3:10 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import javax.swing.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public interface ColumnRowCustomizerContext{
+
+  public void initSpecLabel(JLabel label);
+  public String getValue();
+  public void setValue(String spec);
+  public void checkSpecification(String spec) throws Exception;
+  public void afterInsert(int index, String spec);
+  public void beforeDelete(int index);
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizer.form
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizer.form	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizer.form	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,471 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<Form version="1.1" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
+  <AuxValues>
+    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,0,-60,0,0,1,-112"/>
+  </AuxValues>
+  <SubComponents>
+    <Component class="javax.swing.JLabel" name="specLabel">
+      <Properties>
+        <Property name="displayedMnemonic" type="int" value="67"/>
+        <Property name="labelFor" type="java.awt.Component" editor="org.netbeans.modules.form.ComponentChooserEditor">
+          <ComponentRef name="specField"/>
+        </Property>
+        <Property name="text" type="java.lang.String" value="Column/row group:"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JTextField" name="specField">
+      <Events>
+        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="specFieldActionPerformed"/>
+      </Events>
+    </Component>
+    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
+      <Properties>
+        <Property name="verticalScrollBarPolicy" type="int" value="22"/>
+      </Properties>
+
+      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+      <SubComponents>
+        <Component class="javax.swing.JTable" name="layoutTable">
+          <Properties>
+            <Property name="model" type="javax.swing.table.TableModel" editor="org.netbeans.modules.form.editors2.TableModelEditor">
+              <Table columnCount="4" rowCount="4">
+                <Column editable="true" title="Title 1" type="java.lang.Object"/>
+                <Column editable="true" title="Title 2" type="java.lang.Object"/>
+                <Column editable="true" title="Title 3" type="java.lang.Object"/>
+                <Column editable="true" title="Title 4" type="java.lang.Object"/>
+              </Table>
+            </Property>
+          </Properties>
+          <Events>
+            <EventHandler event="keyPressed" listener="java.awt.event.KeyListener" parameters="java.awt.event.KeyEvent" handler="layoutTableKeyPressed"/>
+          </Events>
+        </Component>
+      </SubComponents>
+    </Container>
+    <Component class="javax.swing.JButton" name="addButton">
+      <Properties>
+        <Property name="mnemonic" type="int" value="65"/>
+        <Property name="text" type="java.lang.String" value="Add"/>
+      </Properties>
+      <Events>
+        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="addButtonActionPerformed"/>
+      </Events>
+    </Component>
+    <Component class="javax.swing.JButton" name="deleteButton">
+      <Properties>
+        <Property name="mnemonic" type="int" value="68"/>
+        <Property name="text" type="java.lang.String" value="Delete"/>
+      </Properties>
+      <Events>
+        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="deleteButtonActionPerformed"/>
+      </Events>
+    </Component>
+  </SubComponents>
+  <LayoutCode>
+    <CodeStatement>
+      <CodeExpression id="1__formLayoutInstance">
+        <CodeVariable name="_formLayoutInstance" type="4096" declaredType="com.jgoodies.forms.layout.FormLayout"/>
+        <ExpressionOrigin>
+          <ExpressionProvider type="CodeConstructor">
+            <CodeConstructor class="com.jgoodies.forms.layout.FormLayout" parameterTypes="java.lang.String, java.lang.String"/>
+          </ExpressionProvider>
+          <Parameters>
+            <CodeExpression id="2">
+              <ExpressionOrigin>
+                <Value type="java.lang.String" value="4dlu,250px:grow,8dlu,p,4dlu"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="3">
+              <ExpressionOrigin>
+                <Value type="java.lang.String" value="4dlu,p,4dlu,p,8dlu,p,8dlu,p,0:grow,4dlu"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </ExpressionOrigin>
+      </CodeExpression>
+      <StatementProvider type="CodeExpression">
+        <CodeExpression id="1__formLayoutInstance"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="2"/>
+        <CodeExpression id="3"/>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="1__formLayoutInstance"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setColumnGroups" class="com.jgoodies.forms.layout.FormLayout" parameterTypes="[[I"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="4">
+          <ExpressionOrigin>
+            <Value type="[[I" editor="de.berlios.nblayoutpack.formlayout.editors.ColumnGroupsEditor">
+              <SerializedValue value="-84,-19,0,5,117,114,0,3,91,91,73,23,-9,-28,79,25,-113,-119,60,2,0,0,120,112,0,0,0,1,117,114,0,2,91,73,77,-70,96,38,118,-22,-78,-91,2,0,0,120,112,0,0,0,0"/>
+            </Value>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="1__formLayoutInstance"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setRowGroups" class="com.jgoodies.forms.layout.FormLayout" parameterTypes="[[I"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="5">
+          <ExpressionOrigin>
+            <Value type="[[I" editor="de.berlios.nblayoutpack.formlayout.editors.RowGroupsEditor">
+              <SerializedValue value="-84,-19,0,5,117,114,0,3,91,91,73,23,-9,-28,79,25,-113,-119,60,2,0,0,120,112,0,0,0,1,117,114,0,2,91,73,77,-70,96,38,118,-22,-78,-91,2,0,0,120,112,0,0,0,0"/>
+            </Value>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6">
+        <ExpressionOrigin>
+          <ExpressionProvider type="ComponentRef">
+            <ComponentRef name="."/>
+          </ExpressionProvider>
+        </ExpressionOrigin>
+      </CodeExpression>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setLayout" class="java.awt.Container" parameterTypes="java.awt.LayoutManager"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="1__formLayoutInstance"/>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="7_specLabel">
+          <CodeVariable name="specLabel" type="8194" declaredType="javax.swing.JLabel"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="specLabel"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="8">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="9">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="10">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="11">
+                <ExpressionOrigin>
+                  <Value type="int" value="3"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="12">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="13">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="14">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="15">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="16_specField">
+          <CodeVariable name="specField" type="8194" declaredType="javax.swing.JTextField"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="specField"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="17">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="18">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="19">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="20">
+                <ExpressionOrigin>
+                  <Value type="int" value="3"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="21">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="22">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="23">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="24">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="25_jScrollPane1">
+          <CodeVariable name="jScrollPane1" type="8194" declaredType="javax.swing.JScrollPane"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="jScrollPane1"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="26">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="27">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="28">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="29">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="30">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="31">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="32">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="33">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="34_addButton">
+          <CodeVariable name="addButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="addButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="35">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="36">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="37">
+                <ExpressionOrigin>
+                  <Value type="int" value="6"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="38">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="39">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="40">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="41">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="42">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="6"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="43_deleteButton">
+          <CodeVariable name="deleteButton" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="deleteButton"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="44">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="com.jgoodies.forms.layout.CellConstraints" parameterTypes="int, int, int, int, com.jgoodies.forms.layout.CellConstraints$Alignment, com.jgoodies.forms.layout.CellConstraints$Alignment, java.awt.Insets"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="45">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="46">
+                <ExpressionOrigin>
+                  <Value type="int" value="8"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="47">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="48">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="49">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.HAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="50">
+                <ExpressionOrigin>
+                  <Value type="com.jgoodies.forms.layout.CellConstraints$Alignment" editor="de.berlios.nblayoutpack.formlayout.editors.VAlignEditor">
+                    <SerializedValue value="-84,-19,0,5,115,114,0,51,99,111,109,46,106,103,111,111,100,105,101,115,46,102,111,114,109,115,46,108,97,121,111,117,116,46,67,101,108,108,67,111,110,115,116,114,97,105,110,116,115,36,65,108,105,103,110,109,101,110,116,101,21,-91,54,126,-41,-107,103,2,0,1,73,0,7,111,114,100,105,110,97,108,120,112,0,0,0,0"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="51">
+                <ExpressionOrigin>
+                  <Value type="java.awt.Insets" editor="org.netbeans.beaninfo.editors.InsetsEditor">
+                    <Insets value="[0, 0, 0, 0]"/>
+                  </Value>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+  </LayoutCode>
+</Form>

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizer.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizer.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizer.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,329 @@
+/*
+ * GroupCustomizer.java
+ *
+ * Created on January 13, 2005, 9:13 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import java.awt.*;
+import java.awt.event.*;
+import java.beans.*;
+import java.util.*;
+
+import javax.swing.*;
+import javax.swing.event.*;
+import javax.swing.table.*;
+
+import org.openide.explorer.propertysheet.editors.EnhancedCustomPropertyEditor;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+import de.berlios.nblayoutpack.formlayout.editors.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class GroupCustomizer extends JPanel implements EnhancedCustomPropertyEditor{
+
+  private GroupCustomizerContext context;
+  private LayoutTableModel layoutTableModel;
+  
+  /** Creates new form GroupCustomizer */
+  public GroupCustomizer(GroupCustomizerContext context){
+    this.context = context;
+    initComponents();
+    context.initSpecLabel(specLabel);
+    layoutTableModel = new LayoutTableModel();
+    layoutTable.setModel(layoutTableModel);
+    DefaultTableCellRenderer numberCellRenderer = new DefaultTableCellRenderer();
+    numberCellRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
+    layoutTable.getColumnModel().getColumn(0).setPreferredWidth(36);
+    layoutTable.getColumnModel().getColumn(0).setCellRenderer(numberCellRenderer);
+    layoutTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
+    layoutTable.getSelectionModel().addListSelectionListener(new TableListener());
+    updateData();
+  }
+  
+  public Object getPropertyValue() throws java.lang.IllegalStateException{
+    return GroupsEditor.parseGroups(getCustomizerValue());
+  }
+
+  protected String getCustomizerValue(){
+    String[] data = layoutTableModel.getData();
+    StringBuffer sb = new StringBuffer();
+    boolean isFirst = true;
+    for(int i = 0; i < data.length; i++){
+      if(isFirst){
+        isFirst = false;
+      }
+      else{
+        sb.append(";");
+      }
+      sb.append(data[i]);
+    }
+    return sb.toString();
+  }
+  
+  /** This method is called from within the constructor to
+   * initialize the form.
+   * WARNING: Do NOT modify this code. The content of this method is
+   * always regenerated by the Form Editor.
+   */
+  private void initComponents() {//GEN-BEGIN:initComponents
+    specLabel = new javax.swing.JLabel();
+    specField = new javax.swing.JTextField();
+    jScrollPane1 = new javax.swing.JScrollPane();
+    layoutTable = new javax.swing.JTable();
+    addButton = new javax.swing.JButton();
+    deleteButton = new javax.swing.JButton();
+
+    com.jgoodies.forms.layout.FormLayout _formLayoutInstance = new com.jgoodies.forms.layout.FormLayout("4dlu,250px:grow,8dlu,p,4dlu", "4dlu,p,4dlu,p,8dlu,p,8dlu,p,0:grow,4dlu");
+    _formLayoutInstance.setColumnGroups(new int[][]{});
+    _formLayoutInstance.setRowGroups(new int[][]{});
+    setLayout(_formLayoutInstance);
+
+    specLabel.setDisplayedMnemonic('C');
+    specLabel.setLabelFor(specField);
+    specLabel.setText("Column/row group:");
+    add(specLabel, new com.jgoodies.forms.layout.CellConstraints(2, 2, 3, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+
+    specField.addActionListener(new java.awt.event.ActionListener() {
+      public void actionPerformed(java.awt.event.ActionEvent evt) {
+        specFieldActionPerformed(evt);
+      }
+    });
+
+    add(specField, new com.jgoodies.forms.layout.CellConstraints(2, 4, 3, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+
+    jScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
+    layoutTable.setModel(new javax.swing.table.DefaultTableModel(
+      new Object [][] {
+        {null, null, null, null},
+        {null, null, null, null},
+        {null, null, null, null},
+        {null, null, null, null}
+      },
+      new String [] {
+        "Title 1", "Title 2", "Title 3", "Title 4"
+      }
+    ));
+    layoutTable.addKeyListener(new java.awt.event.KeyAdapter() {
+      public void keyPressed(java.awt.event.KeyEvent evt) {
+        layoutTableKeyPressed(evt);
+      }
+    });
+
+    jScrollPane1.setViewportView(layoutTable);
+
+    add(jScrollPane1, new com.jgoodies.forms.layout.CellConstraints(2, 6, 1, 4, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+
+    addButton.setMnemonic('A');
+    addButton.setText("Add");
+    addButton.addActionListener(new java.awt.event.ActionListener() {
+      public void actionPerformed(java.awt.event.ActionEvent evt) {
+        addButtonActionPerformed(evt);
+      }
+    });
+
+    add(addButton, new com.jgoodies.forms.layout.CellConstraints(4, 6, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+
+    deleteButton.setMnemonic('D');
+    deleteButton.setText("Delete");
+    deleteButton.addActionListener(new java.awt.event.ActionListener() {
+      public void actionPerformed(java.awt.event.ActionEvent evt) {
+        deleteButtonActionPerformed(evt);
+      }
+    });
+
+    add(deleteButton, new com.jgoodies.forms.layout.CellConstraints(4, 8, 1, 1, com.jgoodies.forms.layout.CellConstraints.DEFAULT, com.jgoodies.forms.layout.CellConstraints.DEFAULT, new java.awt.Insets(0, 0, 0, 0)));
+
+  }//GEN-END:initComponents
+
+  private void layoutTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_layoutTableKeyPressed
+    if((evt.getKeyCode() == KeyEvent.VK_SPACE) && (evt.getModifiers() == 0)){
+      specField.requestFocusInWindow();
+      specField.selectAll();
+    }
+    if((evt.getKeyCode() == KeyEvent.VK_DELETE) && (evt.getModifiers() == 0)){
+      delete(layoutTable.getSelectedRow());
+    }
+  }//GEN-LAST:event_layoutTableKeyPressed
+
+  private void specFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specFieldActionPerformed
+    replace(layoutTable.getSelectedRow());
+  }//GEN-LAST:event_specFieldActionPerformed
+
+  private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
+    delete(layoutTable.getSelectedRow());
+  }//GEN-LAST:event_deleteButtonActionPerformed
+
+  private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
+    insert(0, layoutTableModel.getData().length);
+  }//GEN-LAST:event_addButtonActionPerformed
+
+  protected void insert(int position, int delta){
+    String spec = specField.getText();
+    try{
+      context.checkGroup(spec);
+    }
+    catch(Exception e){
+      specField.requestFocusInWindow();
+      return;
+    }
+    ArrayList list = new ArrayList(Arrays.asList(layoutTableModel.getData()));
+    list.add(position + delta, spec);
+    layoutTableModel.setData((String[])list.toArray(new String[list.size()]));
+    layoutTable.getSelectionModel().setSelectionInterval(position + delta, position + delta);
+    specField.requestFocusInWindow();
+    specField.selectAll();
+  }
+  
+  protected void replace(int position){
+    if(position < 0){
+      insert(0, layoutTableModel.getData().length);
+      return;
+    }
+    String spec = specField.getText();
+    try{
+      context.checkGroup(spec);
+    }
+    catch(Exception e){
+      specField.requestFocusInWindow();
+      return;
+    }
+    String[] data = layoutTableModel.getData();
+    data[position] = spec;
+    layoutTableModel.setData(data);
+    layoutTable.getSelectionModel().setSelectionInterval(position, position);
+    specField.requestFocusInWindow();
+    specField.selectAll();
+  }
+  
+  protected void delete(int position){
+    ArrayList list = new ArrayList(Arrays.asList(layoutTableModel.getData()));
+    list.remove(position);
+    String[] data = (String[])list.toArray(new String[list.size()]);
+    layoutTableModel.setData(data);
+    int selRow = Math.min(position, data.length - 1);
+    layoutTable.getSelectionModel().setSelectionInterval(selRow, selRow);
+    specField.requestFocusInWindow();
+    specField.selectAll();
+  }
+  
+  public void updateData(){
+    String value = context.getValue();
+    String[] data = value.split(";");
+    String[] cData = new String[data.length];
+    int cDataLength = 0;
+    for(int i = 0; i < data.length; i++){
+      if(!data[i].trim().equals("")){
+        cData[cDataLength++] = data[i].trim();
+      }
+    }
+    String[] mData = new String[cDataLength];
+    System.arraycopy(cData, 0, mData, 0, cDataLength);
+    layoutTableModel.setData(mData);
+    updateButtons();
+  }
+  
+  public void updateButtons(){
+    int selRow = layoutTable.getSelectedRow();
+    deleteButton.setEnabled(selRow >= 0);
+  }
+    
+  /**
+   * Getter for property context.
+   * @return Value of property context.
+   */
+  public GroupCustomizerContext getContext(){
+    return context;
+  }
+  
+  /**
+   * Setter for property context.
+   * @param context New value of property context.
+   */
+  public void setContext(GroupCustomizerContext context){
+    this.context = context;
+  }
+  
+  // Variables declaration - do not modify//GEN-BEGIN:variables
+  private javax.swing.JButton addButton;
+  private javax.swing.JButton deleteButton;
+  private javax.swing.JScrollPane jScrollPane1;
+  private javax.swing.JTable layoutTable;
+  private javax.swing.JTextField specField;
+  private javax.swing.JLabel specLabel;
+  // End of variables declaration//GEN-END:variables
+
+  private class LayoutTableModel extends AbstractTableModel{
+
+    private String[] layoutData;
+    
+    void setData(String[] data){
+      layoutData = data;
+      fireTableDataChanged();
+//      String customizerValue = getCustomizerValue();
+//      if(!customizerValue.equalsIgnoreCase(getValue())){
+//        setValue(customizerValue);
+//      }
+    }
+    
+    String[] getData(){
+      return layoutData;
+    }
+    
+    // --------
+    
+    public int getRowCount(){
+      return layoutData == null ? 0 : layoutData.length;
+    }
+    
+    public int getColumnCount(){
+      return 2;
+    }
+    
+    public Object getValueAt(int row, int column){
+      switch (column){
+        case 0: return new Integer(row + 1);
+        case 1: return layoutData[row];
+      }
+      throw new ArrayIndexOutOfBoundsException();
+    }
+    
+    public Class getColumnClass(int column){
+      switch (column) {
+        case 0: return Integer.class;
+        case 1: return String.class;
+      }
+      throw new ArrayIndexOutOfBoundsException();
+    }
+    
+    public String getColumnName(int column){
+      switch (column){
+        case 0:
+        case 1: return "";
+      }
+      throw new ArrayIndexOutOfBoundsException();
+    }
+  }
+
+  private class TableListener implements ListSelectionListener{
+    
+    public void valueChanged(ListSelectionEvent e){
+      int selRow = layoutTable.getSelectedRow();
+      if(selRow < 0){
+        specField.setText("");
+      }
+      else{
+        specField.setText(layoutTableModel.getData()[selRow]);
+      }
+      updateButtons();
+    }
+    
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizerContext.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizerContext.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/GroupCustomizerContext.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,22 @@
+/*
+ * GroupCustomizerContext.java
+ *
+ * Created on January 13, 2005, 9:13 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import javax.swing.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public interface GroupCustomizerContext{
+  
+  public void initSpecLabel(JLabel label);
+  public String getValue();
+  public void setValue(String spec);
+  public void checkGroup(String group) throws Exception;
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/RowCustomizerContext.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/RowCustomizerContext.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/RowCustomizerContext.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,64 @@
+/*
+ * RowCustomizerContext.java
+ *
+ * Created on January 9, 2005, 3:19 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import java.awt.*;
+import java.beans.*;
+
+import javax.swing.*;
+import javax.swing.table.*;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class RowCustomizerContext extends AbstractColumnRowCustomizerContext{
+  
+  /** Creates a new instance of RowCustomizerContext */
+  public RowCustomizerContext(){
+  }
+  
+  public void afterInsert(int index, String spec){
+  }
+  
+  public void beforeDelete(int index){
+  }
+  
+  public void checkSpecification(String spec) throws Exception{
+    RowSpec[] specs = RowSpec.decodeSpecs(spec);
+  }
+  
+  public String getValue(){
+    if(layoutSupport != null){
+      return layoutSupport.getRows();
+    }
+    if(propertyEditor != null){
+      return propertyEditor.getAsText();
+    }
+    return "";
+  }
+  
+  public void initSpecLabel(JLabel label){
+    label.setText("Row specification:");
+    label.setDisplayedMnemonic('R');
+    label.setDisplayedMnemonicIndex(0);
+  }
+  
+  public void setValue(String spec){
+    if(layoutSupport != null){
+      layoutSupport.setRows(spec);
+    }
+    if(propertyEditor != null){
+      propertyEditor.setAsText(spec);
+    }
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/RowGroupCustomizerContext.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/RowGroupCustomizerContext.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/customizer/RowGroupCustomizerContext.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,48 @@
+/*
+ * RowGroupCustomizerContext.java
+ *
+ * Created on January 13, 2005, 9:35 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.customizer;
+
+import javax.swing.*;
+
+import de.berlios.nblayoutpack.formlayout.editors.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class RowGroupCustomizerContext extends AbstractGroupCustomizerContext{
+  
+  /** Creates a new instance of RowGroupCustomizerContext */
+  public RowGroupCustomizerContext(){
+  }
+  
+  public String getValue(){
+    if(layoutSupport != null){
+      return GroupsEditor.getAsString(layoutSupport.getRowGroups());
+    }
+    if(propertyEditor != null){
+      return propertyEditor.getAsText();
+    }
+    return "";
+  }
+  
+  public void initSpecLabel(JLabel label){
+    label.setText("Row group:");
+    label.setDisplayedMnemonic('R');
+    label.setDisplayedMnemonicIndex(0);
+  }
+  
+  public void setValue(String spec){
+    if(layoutSupport != null){
+      layoutSupport.setRowGroups(GroupsEditor.parseGroups(spec));
+    }
+    if(propertyEditor != null){
+      propertyEditor.setAsText(spec);
+    }
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/ColumnEditor.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/ColumnEditor.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/ColumnEditor.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,57 @@
+/*
+ * ColumnEditor.java
+ *
+ * Created on January 7, 2005, 1:52 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.editors;
+
+import java.awt.*;
+import java.beans.*;
+
+import org.netbeans.modules.form.*;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+import de.berlios.nblayoutpack.formlayout.customizer.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class ColumnEditor extends PropertyEditorSupport{
+  
+  private ColumnRowCustomizer customizer;
+  
+  /** Creates a new instance of ColumnEditor */
+  public ColumnEditor(){
+  }
+  
+  public String getAsText(){
+    return (String)getValue();
+  }
+
+  public void setAsText(String str){
+    setValue(str);
+  }
+
+  public String getJavaInitializationString(){
+    return new StringBuffer("\"").append(getAsText()).append("\"").toString();
+  }
+
+  public boolean supportsCustomEditor(){
+    return true;
+  }  
+
+  public Component getCustomEditor(){
+    if(customizer == null){
+      ColumnCustomizerContext context = new ColumnCustomizerContext();
+      context.setPropertyEditor(this);
+      customizer = new ColumnRowCustomizer(context);
+    }
+    customizer.updateData();
+    return customizer;
+  }  
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/ColumnGroupsEditor.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/ColumnGroupsEditor.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/ColumnGroupsEditor.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,25 @@
+/*
+ * ColumnGroupsEditor.java
+ *
+ * Created on January 13, 2005, 9:55 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.editors;
+
+import de.berlios.nblayoutpack.formlayout.customizer.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class ColumnGroupsEditor extends GroupsEditor{
+  
+  /** Creates a new instance of ColumnGroupsEditor */
+  public ColumnGroupsEditor(){
+  }
+  
+  protected AbstractGroupCustomizerContext createContext(){
+    return new ColumnGroupCustomizerContext();
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/GroupsEditor.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/GroupsEditor.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/GroupsEditor.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,191 @@
+/*
+ * GroupsEditor.java
+ *
+ * Created on January 7, 2005, 12:36 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.editors;
+
+import java.awt.*;
+import java.beans.*;
+import java.io.IOException;
+
+import org.w3c.dom.*;
+
+import org.openide.explorer.propertysheet.editors.*;
+
+import org.netbeans.modules.form.*;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+import de.berlios.nblayoutpack.formlayout.customizer.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class GroupsEditor extends PropertyEditorSupport implements XMLPropertyEditor{
+  
+  private GroupCustomizer customizer;
+  
+  /** Creates a new instance of GroupsEditor */
+  public GroupsEditor(){
+  }
+  
+  public String getAsText(){
+    return getAsString((int[][])getValue());
+  }
+  
+  public static String getAsString(int[][] values){
+    StringBuffer sb = new StringBuffer("");
+    boolean isFirstGroup = true;
+    for(int group = 0; group < values.length; group++){
+      if(values[group].length > 0){
+        if(isFirstGroup){
+          isFirstGroup = false;
+        }
+        else{
+          sb.append(";");
+        }
+        boolean isFirstValue = true;
+        for(int item = 0; item < values[group].length; item++){
+          if(isFirstValue){
+            isFirstValue = false;
+          }
+          else{
+            sb.append(",");
+          }
+          sb.append(values[group][item]);
+        }
+      }
+    }
+    return sb.toString();
+  }
+
+  public void setAsText(String str){
+    setValue(parseGroups(str));
+  }
+
+  public String getJavaInitializationString(){
+    int[][] values = (int[][])getValue();
+    StringBuffer sb = new StringBuffer("new int[][]{");
+    boolean isFirstGroup = true;
+    for(int group = 0; group < values.length; group++){
+      if(values[group].length > 0){
+        if(isFirstGroup){
+          isFirstGroup = false;
+        }
+        else{
+          sb.append(", ");
+        }
+        sb.append("{");
+        boolean isFirstValue = true;
+        for(int item = 0; item < values[group].length; item++){
+          if(isFirstValue){
+            isFirstValue = false;
+          }
+          else{
+            sb.append(", ");
+          }
+          sb.append(values[group][item]);
+        }
+        sb.append("}");
+      }
+    }
+    sb.append("}");
+    return sb.toString();
+  }
+
+  public static int[][] parseGroups(String str){
+    try{
+      return parseGroups(str, true);
+    }
+    catch(Exception ignored){}
+    return null;
+  }
+
+  public static int[][] parseGroups(String str, boolean ignoreExceptions) throws Exception{
+    String[] groups = str.split(";");
+    int[][] values = new int[groups.length][];
+    for(int group = 0; group < groups.length; group++){
+      String[] items = groups[group].split(",");
+      int[] parsedValues = new int[items.length];
+      int itemIndex = 0;
+      for(int item = 0; item < items.length; item++){
+        try{
+          parsedValues[itemIndex] = Integer.parseInt(items[item]);
+          itemIndex++;
+        }
+        catch(NumberFormatException e){
+          if(!ignoreExceptions){
+            throw e;
+          }
+        }
+      }
+      int[] itemValues = new int[itemIndex];
+      System.arraycopy(parsedValues, 0, itemValues, 0, itemIndex);
+      values[group] = itemValues;
+    }
+    return values;
+  }
+  
+  /** Called to load property value from specified XML subtree. If succesfully loaded,
+   * the value should be available via the getValue method.
+   * An IOException should be thrown when the value cannot be restored from the specified XML element
+   * @param element the XML DOM element representing a subtree of XML from which the value should be loaded
+   * @exception IOException thrown when the value cannot be restored from the specified XML element
+   */
+  public void readFromXML(Node element) throws IOException{
+    Node vNode = element.getAttributes().getNamedItem("value");
+    setAsText(vNode.getNodeValue());
+  }
+  
+  /** Called to store current property value into XML subtree. The property value should be set using the
+   * setValue method prior to calling this method.
+   * @param doc The XML document to store the XML in - should be used for creating nodes only
+   * @return the XML DOM element representing a subtree of XML from which the value should be loaded
+   */
+  public Node storeToXML(Document doc){
+    Element result = doc.createElement("Groups");
+    result.setAttribute("value", getAsText());
+    return result;
+  }
+
+  public boolean supportsCustomEditor(){
+    return true;
+  }  
+
+  public Component getCustomEditor(){
+    if(customizer == null){
+      AbstractGroupCustomizerContext context = createContext();
+      context.setPropertyEditor(this);
+      customizer = new GroupCustomizer(context);
+    }
+    customizer.updateData();
+    return customizer;
+  }  
+
+  protected AbstractGroupCustomizerContext createContext(){
+    return new DefaultGroupCustomizerContext();
+  }
+  
+  private class DefaultGroupCustomizerContext extends AbstractGroupCustomizerContext{
+    
+    public void initSpecLabel(javax.swing.JLabel label){
+      label.setText("Group:");
+      label.setDisplayedMnemonic('G');
+      label.setDisplayedMnemonicIndex(0);
+    }
+    
+    public String getValue(){
+      return propertyEditor.getAsText();
+    }
+    
+    public void setValue(String spec){
+      propertyEditor.setAsText(spec);
+    }
+    
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/HAlignEditor.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/HAlignEditor.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/HAlignEditor.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,113 @@
+/*
+ * HAlignEditor.java
+ *
+ * Created on January 6, 2005, 12:32 AM
+ */
+
+package de.berlios.nblayoutpack.formlayout.editors;
+
+import java.beans.*;
+import java.io.IOException;
+
+import org.w3c.dom.*;
+
+import org.openide.explorer.propertysheet.editors.*;
+
+import org.netbeans.modules.form.*;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class HAlignEditor extends PropertyEditorSupport implements XMLPropertyEditor{
+  
+  /** Creates a new instance of HAlignEditor */
+  public HAlignEditor(){
+  }
+  
+  private final String[] tags = {
+    FormLayoutSupport.getBundle().getString("VALUE_hAlign_DEFAULT"), // NOI18N
+    FormLayoutSupport.getBundle().getString("VALUE_hAlign_CENTER"),  // NOI18N
+    FormLayoutSupport.getBundle().getString("VALUE_hAlign_FILL"),    // NOI18N
+    FormLayoutSupport.getBundle().getString("VALUE_hAlign_LEFT"),    // NOI18N
+    FormLayoutSupport.getBundle().getString("VALUE_hAlign_RIGHT"),   // NOI18N
+  };
+  private final CellConstraints.Alignment[] values = {
+    CellConstraints.DEFAULT,
+    CellConstraints.CENTER,
+    CellConstraints.FILL,
+    CellConstraints.LEFT,
+    CellConstraints.RIGHT,
+  };
+  private final String[] javaInitStrings = {
+    "com.jgoodies.forms.layout.CellConstraints.DEFAULT", // NOI18N
+    "com.jgoodies.forms.layout.CellConstraints.CENTER",  // NOI18N
+    "com.jgoodies.forms.layout.CellConstraints.FILL",    // NOI18N
+    "com.jgoodies.forms.layout.CellConstraints.LEFT",    // NOI18N
+    "com.jgoodies.forms.layout.CellConstraints.RIGHT",   // NOI18N
+  };
+
+  public String[] getTags(){
+    return tags;
+  }
+
+  public String getAsText(){
+    Object value = getValue();
+    for(int i=0; i < values.length; i++){
+      if(values[i].equals(value)){
+        return tags[i];
+      }
+    }
+    return null;
+  }
+
+  public void setAsText(String str){
+    for(int i=0; i < tags.length; i++){
+      if(tags[i].equals(str)){
+        setValue(values[i]);
+      }
+    }
+  }
+
+  public String getJavaInitializationString(){
+    Object value = getValue();
+    for (int i=0; i < values.length; i++){
+      if (values[i].equals(value)){
+        return javaInitStrings[i];
+      }
+    }
+    return null;
+  }
+  
+  /** Called to load property value from specified XML subtree. If succesfully loaded,
+   * the value should be available via the getValue method.
+   * An IOException should be thrown when the value cannot be restored from the specified XML element
+   * @param element the XML DOM element representing a subtree of XML from which the value should be loaded
+   * @exception IOException thrown when the value cannot be restored from the specified XML element
+   */
+  public void readFromXML(Node element) throws IOException{
+    try{
+      Node vNode = element.getAttributes().getNamedItem("value");
+      setValue(FormLayoutIntrospector.getAlignment(vNode.getNodeValue()));
+    }
+    catch(Exception e){
+      setValue(FormLayoutIntrospector.getAlignment("default"));
+    }
+  }
+  
+  /** Called to store current property value into XML subtree. The property value should be set using the
+   * setValue method prior to calling this method.
+   * @param doc The XML document to store the XML in - should be used for creating nodes only
+   * @return the XML DOM element representing a subtree of XML from which the value should be loaded
+   */
+  public Node storeToXML(Document doc){
+    Element result = doc.createElement("HAlign");
+    result.setAttribute("value", getValue().toString());
+    return result;
+  }
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/RowEditor.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/RowEditor.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/RowEditor.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,57 @@
+/*
+ * RowEditor.java
+ *
+ * Created on January 7, 2005, 1:52 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.editors;
+
+import java.awt.*;
+import java.beans.*;
+
+import org.netbeans.modules.form.*;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+import de.berlios.nblayoutpack.formlayout.customizer.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class RowEditor extends PropertyEditorSupport{
+  
+  private ColumnRowCustomizer customizer;
+
+  /** Creates a new instance of RowEditor */
+  public RowEditor(){
+  }
+  
+  public String getAsText(){
+    return (String)getValue();
+  }
+
+  public void setAsText(String str){
+    setValue(str);
+  }
+
+  public String getJavaInitializationString(){
+    return new StringBuffer("\"").append(getAsText()).append("\"").toString();
+  }
+
+  public boolean supportsCustomEditor(){
+    return true;
+  }  
+  
+  public Component getCustomEditor(){
+    if(customizer == null){
+      RowCustomizerContext context = new RowCustomizerContext();
+      context.setPropertyEditor(this);
+      customizer = new ColumnRowCustomizer(context);
+    }
+    customizer.updateData();
+    return customizer;
+  }  
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/RowGroupsEditor.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/RowGroupsEditor.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/RowGroupsEditor.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,25 @@
+/*
+ * RowGroupsEditor.java
+ *
+ * Created on January 13, 2005, 9:55 PM
+ */
+
+package de.berlios.nblayoutpack.formlayout.editors;
+
+import de.berlios.nblayoutpack.formlayout.customizer.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class RowGroupsEditor extends GroupsEditor{
+  
+  /** Creates a new instance of RowGroupsEditor */
+  public RowGroupsEditor(){
+  }
+  
+  protected AbstractGroupCustomizerContext createContext(){
+    return new RowGroupCustomizerContext();
+  }
+  
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/VAlignEditor.java
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/VAlignEditor.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/editors/VAlignEditor.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,113 @@
+/*
+ * VAlignEditor.java
+ *
+ * Created on January 6, 2005, 12:35 AM
+ */
+
+package de.berlios.nblayoutpack.formlayout.editors;
+
+import java.beans.*;
+import java.io.IOException;
+
+import org.w3c.dom.*;
+
+import org.openide.explorer.propertysheet.editors.*;
+
+import org.netbeans.modules.form.*;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class VAlignEditor extends PropertyEditorSupport implements XMLPropertyEditor{
+  
+  /** Creates a new instance of VAlignEditor */
+  public VAlignEditor(){
+  }
+  
+  private final String[] tags = {
+    FormLayoutSupport.getBundle().getString("VALUE_vAlign_DEFAULT"), // NOI18N
+    FormLayoutSupport.getBundle().getString("VALUE_vAlign_CENTER"),  // NOI18N
+    FormLayoutSupport.getBundle().getString("VALUE_vAlign_FILL"),    // NOI18N
+    FormLayoutSupport.getBundle().getString("VALUE_vAlign_TOP"),     // NOI18N
+    FormLayoutSupport.getBundle().getString("VALUE_vAlign_BOTTOM"),  // NOI18N
+  };
+  private final CellConstraints.Alignment[] values = {
+    CellConstraints.DEFAULT,
+    CellConstraints.CENTER,
+    CellConstraints.FILL,
+    CellConstraints.TOP,
+    CellConstraints.BOTTOM,
+  };
+  private final String[] javaInitStrings = {
+    "com.jgoodies.forms.layout.CellConstraints.DEFAULT", // NOI18N
+    "com.jgoodies.forms.layout.CellConstraints.CENTER",  // NOI18N
+    "com.jgoodies.forms.layout.CellConstraints.FILL",    // NOI18N
+    "com.jgoodies.forms.layout.CellConstraints.TOP",     // NOI18N
+    "com.jgoodies.forms.layout.CellConstraints.BOTTOM",  // NOI18N
+  };
+
+  public String[] getTags(){
+    return tags;
+  }
+
+  public String getAsText(){
+    Object value = getValue();
+    for(int i=0; i < values.length; i++){
+      if(values[i].equals(value)){
+        return tags[i];
+      }
+    }
+    return null;
+  }
+
+  public void setAsText(String str){
+    for(int i=0; i < tags.length; i++){
+      if(tags[i].equals(str)){
+        setValue(values[i]);
+      }
+    }
+  }
+
+  public String getJavaInitializationString(){
+    Object value = getValue();
+    for (int i=0; i < values.length; i++){
+      if (values[i].equals(value)){
+        return javaInitStrings[i];
+      }
+    }
+    return null;
+  }
+
+  /** Called to load property value from specified XML subtree. If succesfully loaded,
+   * the value should be available via the getValue method.
+   * An IOException should be thrown when the value cannot be restored from the specified XML element
+   * @param element the XML DOM element representing a subtree of XML from which the value should be loaded
+   * @exception IOException thrown when the value cannot be restored from the specified XML element
+   */
+  public void readFromXML(Node element) throws IOException{
+    try{
+      Node vNode = element.getAttributes().getNamedItem("value");
+      setValue(FormLayoutIntrospector.getAlignment(vNode.getNodeValue()));
+    }
+    catch(Exception e){
+      setValue(FormLayoutIntrospector.getAlignment("default"));
+    }
+  }
+  
+  /** Called to store current property value into XML subtree. The property value should be set using the
+   * setValue method prior to calling this method.
+   * @param doc The XML document to store the XML in - should be used for creating nodes only
+   * @return the XML DOM element representing a subtree of XML from which the value should be loaded
+   */
+  public Node storeToXML(Document doc){
+    Element result = doc.createElement("VAlign");
+    result.setAttribute("value", getValue().toString());
+    return result;
+  }
+
+}

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/formlayout.xml
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/formlayout.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/formlayout.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!DOCTYPE library PUBLIC "-//NetBeans//DTD Java Library 1.1//EN" "http://www.netbeans.org/dtds/java-library-1_1.dtd">
+<library>
+  <archive name="modules/ext/nblayoutpack/forms-1.0.5.jar"/>
+</library>

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/layer.xml
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/layer.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb3.6/layer.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.1//EN" "http://www.netbeans.org/dtds/filesystem-1_1.dtd">
+<?xml-stylesheet type="text/xml" href="http://openide.netbeans.org/fs/filesystem.xsl"?>
+
+<filesystem>
+  <folder name="Mount">
+    <folder name="java">
+      <file name="formlayout.xml" url="formlayout.xml">
+        <attr name="SystemFileSystem.localizingBundle" stringvalue="de.berlios.nblayoutpack.formlayout.Bundle"/>
+      </file>
+    </folder>
+  </folder>
+
+  <folder name="Palette">
+    <folder name="Layouts">
+      <file name="com-jgoodies-forms-layout-FormLayout.instance">
+        <attr name="SystemFileSystem.localizingBundle" stringvalue="de.berlios.nblayoutpack.formlayout.Bundle"/>
+        <attr name="SystemFileSystem.icon" urlvalue="nbres:/de/berlios/nblayoutpack/formlayout/resources/formlayout16.png"/>
+        <attr boolvalue="false" name="beaninfo"/>
+      </file>
+    </folder>
+  </folder>
+</filesystem>

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/formlayout.xml
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/formlayout.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/formlayout.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!DOCTYPE library PUBLIC "-//NetBeans//DTD Library Declaration 1.0//EN" "http://www.netbeans.org/dtds/library-declaration-1_0.dtd">
+
+<library version="1.0">
+    <name>JGoodies Forms 1.0.5</name>
+    <type>j2se</type>
+    <localizing-bundle>de/berlios/nblayoutpack/formlayout/Bundle</localizing-bundle>
+    <volume>
+        <type>classpath</type>
+        <resource>jar:nbinst:///modules/ext/nblayoutpack/forms-1.0.5.jar!/</resource>
+    </volume>
+</library>

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/layer.xml
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/layer.xml	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/layer.xml	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xml" href="http://openide.netbeans.org/fs/filesystem.xsl"?>
+<!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.1//EN" "http://www.netbeans.org/dtds/filesystem-1_1.dtd">
+<filesystem>
+
+  <folder name="org-netbeans-api-project-libraries">
+    <folder name="Libraries">
+      <file name="formlayout.xml" url="formlayout.xml"/>
+    </folder>
+  </folder>
+
+  <folder name="Palette">
+    <folder name="Layouts">
+      <attr name="SystemFileSystem.localizingBundle" stringvalue="de.berlios.nblayoutpack.formlayout.Bundle"/>
+      <file name="FormLayout.palette_item" url="palette/FormLayout.palette_item" />
+    </folder>
+  </folder>
+
+</filesystem>

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/palette/FormLayout.palette_item
===================================================================
--- FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/palette/FormLayout.palette_item	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/nb4.0/palette/FormLayout.palette_item	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<palette_item version="1.0">
+  <component classname="com.jgoodies.forms.layout.FormLayout" type="layout" />
+  <icon16 urlvalue="nbres:/de/berlios/nblayoutpack/formlayout/resources/formlayout16.png" />
+  <description localizing-bundle="de.berlios.nblayoutpack.formlayout.Bundle"
+               display-name-key="Palette/Layouts/com-jgoodies-forms-layout-FormLayout.instance" />
+  <classpath>
+      <resource type="library" name="formlayout" />
+  </classpath>
+</palette_item>

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/add.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/add.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/formlayout16.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/formlayout16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/formlayout32.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/formlayout32.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/insertafter.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/insertafter.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/insertbefore.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/insertbefore.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/mergedown.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/mergedown.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/mergeup.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/mergeup.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/movedown.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/movedown.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/moveup.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/moveup.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/remove.png
===================================================================
(Binary files differ)


Property changes on: FormLayout/trunk/src/de/berlios/nblayoutpack/formlayout/resources/remove.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: FormLayout/trunk/testsrc/ColumnRowCustomizerTest.java
===================================================================
--- FormLayout/trunk/testsrc/ColumnRowCustomizerTest.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/testsrc/ColumnRowCustomizerTest.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,60 @@
+/*
+ * ColumnRowCustomizerTest.java
+ *
+ * Created on January 7, 2005, 9:44 PM
+ */
+
+import java.awt.*;
+
+import javax.swing.*;
+
+import com.jgoodies.forms.layout.*;
+
+import de.berlios.nblayoutpack.formlayout.customizer.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class ColumnRowCustomizerTest implements ColumnRowCustomizerContext{
+  
+  /** Creates a new instance of ColumnRowCustomizerTest */
+  public ColumnRowCustomizerTest(){
+  }
+  
+  public void checkSpecification(String spec) throws Exception{
+    ColumnSpec[] specs = ColumnSpec.decodeSpecs(spec);
+  }
+  
+  public String getValue(){
+    return "4dlu,p,4dlu";
+  }
+  
+  public void setValue(String spec){
+    System.out.println(spec);
+  }
+  
+  public void initSpecLabel(JLabel label){
+    label.setText("Column specification:");
+  }
+  
+  /**
+   * @param args the command line arguments
+   */
+  public static void main(String[] args) {
+    JFrame frame = new JFrame();
+    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+    frame.setTitle("ColumnRowCustomizer Test");
+    frame.getContentPane().add(new ColumnRowCustomizer(new ColumnRowCustomizerTest()));
+    frame.pack();
+    frame.setLocation(200, 200);
+    frame.show();
+  }
+  
+  public void afterInsert(int index, String spec){
+  }
+  
+  public void beforeDelete(int index){
+  }
+  
+}

Added: FormLayout/trunk/testsrc/Main.form
===================================================================
--- FormLayout/trunk/testsrc/Main.form	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/testsrc/Main.form	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<Form version="1.0" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
+  <SyntheticProperties>
+    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
+  </SyntheticProperties>
+  <Events>
+    <EventHandler event="windowClosing" listener="java.awt.event.WindowListener" parameters="java.awt.event.WindowEvent" handler="exitForm"/>
+  </Events>
+  <AuxValues>
+    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,44,0,0,1,-102"/>
+  </AuxValues>
+
+  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignFlowLayout"/>
+  <SubComponents>
+    <Component class="javax.swing.JButton" name="jButton1">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jButton1"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JButton" name="jButton2">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jButton2"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JList" name="jList1">
+      <Properties>
+        <Property name="model" type="javax.swing.ListModel" editor="org.netbeans.modules.form.editors2.ListModelEditor">
+          <StringArray count="3">
+            <StringItem index="0" value="1"/>
+            <StringItem index="1" value="2"/>
+            <StringItem index="2" value="3"/>
+          </StringArray>
+        </Property>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JButton" name="jButton3">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jButton3"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JCheckBox" name="jCheckBox1">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jCheckBox1"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JRadioButton" name="jRadioButton1">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jRadioButton1"/>
+      </Properties>
+    </Component>
+  </SubComponents>
+</Form>

Added: FormLayout/trunk/testsrc/Main.java
===================================================================
--- FormLayout/trunk/testsrc/Main.java	2004-12-23 07:58:14 UTC (rev 1)
+++ FormLayout/trunk/testsrc/Main.java	2005-05-25 06:51:45 UTC (rev 2)
@@ -0,0 +1,85 @@
+/*
+ * Main.java
+ *
+ * Created on January 7, 2005, 12:53 AM
+ */
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class Main extends javax.swing.JFrame {
+  
+  /** Creates new form Main */
+  public Main() {
+    initComponents();
+  }
+  
+  /** This method is called from within the constructor to
+   * initialize the form.
+   * WARNING: Do NOT modify this code. The content of this method is
+   * always regenerated by the Form Editor.
+   */
+  private void initComponents() {//GEN-BEGIN:initComponents
+    jButton1 = new javax.swing.JButton();
+    jButton2 = new javax.swing.JButton();
+    jList1 = new javax.swing.JList();
+    jButton3 = new javax.swing.JButton();
+    jCheckBox1 = new javax.swing.JCheckBox();
+    jRadioButton1 = new javax.swing.JRadioButton();
+
+    getContentPane().setLayout(new java.awt.FlowLayout());
+
+    addWindowListener(new java.awt.event.WindowAdapter() {
+      public void windowClosing(java.awt.event.WindowEvent evt) {
+        exitForm(evt);
+      }
+    });
+
+    jButton1.setText("jButton1");
+    getContentPane().add(jButton1);
+
+    jButton2.setText("jButton2");
+    getContentPane().add(jButton2);
+
+    jList1.setModel(new javax.swing.AbstractListModel() {
+      String[] strings = { "1", "2", "3" };
+      public int getSize() { return strings.length; }
+      public Object getElementAt(int i) { return strings[i]; }
+    });
+    getContentPane().add(jList1);
+
+    jButton3.setText("jButton3");
+    getContentPane().add(jButton3);
+
+    jCheckBox1.setText("jCheckBox1");
+    getContentPane().add(jCheckBox1);
+
+    jRadioButton1.setText("jRadioButton1");
+    getContentPane().add(jRadioButton1);
+
+    pack();
+  }//GEN-END:initComponents
+  
+  /** Exit the Application */
+  private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
+    System.exit(0);
+  }//GEN-LAST:event_exitForm
+  
+  /**
+   * @param args the command line arguments
+   */
+  public static void main(String args[]) {
+    new Main().show();
+  }
+  
+  // Variables declaration - do not modify//GEN-BEGIN:variables
+  private javax.swing.JButton jButton1;
+  private javax.swing.JButton jButton2;
+  private javax.swing.JButton jButton3;
+  private javax.swing.JCheckBox jCheckBox1;
+  private javax.swing.JList jList1;
+  private javax.swing.JRadioButton jRadioButton1;
+  // End of variables declaration//GEN-END:variables
+  
+}



From ikysil at sheep.berlios.de  Wed May 25 08:54:09 2005
From: ikysil at sheep.berlios.de (Illya Kysil at BerliOS)
Date: Wed, 25 May 2005 08:54:09 +0200
Subject: [nblayoutpack-svn] r3 - / TableLayout TableLayout/trunk TableLayout/trunk/lib TableLayout/trunk/nb3.6 TableLayout/trunk/nb4.0 TableLayout/trunk/nb4.0/nbbuild TableLayout/trunk/nb4.0/nbbuild/cluster-scripts TableLayout/trunk/nb4.0/nbbuild/lib TableLayout/trunk/nb4.0/nbbuild/misc TableLayout/trunk/nb4.0/nbbuild/module-scripts TableLayout/trunk/nb4.0/nblayoutpack TableLayout/trunk/nb4.0/nblayoutpack/nbproject TableLayout/trunk/nb4.1 TableLayout/trunk/nb4.1/nbbuild TableLayout/trunk/nb4.1/nbbuild/cluster-scripts TableLayout/trunk/nb4.1/nbbuild/lib TableLayout/trunk/nb4.1/nbbuild/misc TableLayout/trunk/nb4.1/nbbuild/module-scripts TableLayout/trunk/nb4.1/nblayoutpack TableLayout/trunk/nb4.1/nblayoutpack/nbproject TableLayout/trunk/nb4.1/nblayoutpack/nbproject/private TableLayout/trunk/src TableLayout/trunk/src/de TableLayout/trunk/src/de/berlios TableLayout/trunk/src/de/berlios/nblayoutpack TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout TableLayout/trunk/src/de/berlios/nblayoutp!
 ack/tablelayout/converter TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6 TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0 TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/palette TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/resources TableLayout/trunk/testsrc
Message-ID: <200505250654.j4P6s9B8026010@sheep.berlios.de>

Author: ikysil
Date: 2005-05-25 08:54:07 +0200 (Wed, 25 May 2005)
New Revision: 3

Added:
   TableLayout/
   TableLayout/trunk/
   TableLayout/trunk/build.properties
   TableLayout/trunk/lib/
   TableLayout/trunk/lib/TableLayout-3.2.jar
   TableLayout/trunk/license.txt
   TableLayout/trunk/nb3.6/
   TableLayout/trunk/nb3.6/build.xml
   TableLayout/trunk/nb3.6/manifest.mf
   TableLayout/trunk/nb4.0/
   TableLayout/trunk/nb4.0/nbbuild/
   TableLayout/trunk/nb4.0/nbbuild/CHANGES.txt
   TableLayout/trunk/nb4.0/nbbuild/README.txt
   TableLayout/trunk/nb4.0/nbbuild/build.xml
   TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/
   TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster-description.properties
   TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.properties
   TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.xml
   TableLayout/trunk/nb4.0/nbbuild/lib/
   TableLayout/trunk/nb4.0/nbbuild/lib/nbantext.jar
   TableLayout/trunk/nb4.0/nbbuild/misc/
   TableLayout/trunk/nb4.0/nbbuild/misc/addSerialVer
   TableLayout/trunk/nb4.0/nbbuild/misc/bundlecheck.pl
   TableLayout/trunk/nb4.0/nbbuild/misc/bundlewc.pl
   TableLayout/trunk/nb4.0/nbbuild/misc/i18ncheck.pl
   TableLayout/trunk/nb4.0/nbbuild/module-scripts/
   TableLayout/trunk/nb4.0/nbbuild/module-scripts/default-properties.xml
   TableLayout/trunk/nb4.0/nbbuild/module-scripts/default.xml
   TableLayout/trunk/nb4.0/nbbuild/module-scripts/directories.properties
   TableLayout/trunk/nb4.0/nbbuild/module-scripts/projectized.xml
   TableLayout/trunk/nb4.0/nbbuild/module-scripts/standard-jar-excludes.txt
   TableLayout/trunk/nb4.0/nbbuild/module-scripts/standard-nbm-license.txt
   TableLayout/trunk/nb4.0/nbbuild/moduledefs-tmp.properties
   TableLayout/trunk/nb4.0/nbbuild/modules.xml
   TableLayout/trunk/nb4.0/nbbuild/user.build.properties
   TableLayout/trunk/nb4.0/nbbuild/user.cluster.properties
   TableLayout/trunk/nb4.0/nblayoutpack/
   TableLayout/trunk/nb4.0/nblayoutpack/build.xml
   TableLayout/trunk/nb4.0/nblayoutpack/manifest.mf
   TableLayout/trunk/nb4.0/nblayoutpack/nbproject/
   TableLayout/trunk/nb4.0/nblayoutpack/nbproject/project.properties
   TableLayout/trunk/nb4.0/nblayoutpack/nbproject/project.xml
   TableLayout/trunk/nb4.1/
   TableLayout/trunk/nb4.1/nbbuild/
   TableLayout/trunk/nb4.1/nbbuild/CHANGES.txt
   TableLayout/trunk/nb4.1/nbbuild/README.txt
   TableLayout/trunk/nb4.1/nbbuild/build.xml
   TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/
   TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster-description.properties
   TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.properties
   TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.xml
   TableLayout/trunk/nb4.1/nbbuild/lib/
   TableLayout/trunk/nb4.1/nbbuild/lib/nbantext.jar
   TableLayout/trunk/nb4.1/nbbuild/misc/
   TableLayout/trunk/nb4.1/nbbuild/misc/addSerialVer
   TableLayout/trunk/nb4.1/nbbuild/misc/bundlecheck.pl
   TableLayout/trunk/nb4.1/nbbuild/misc/bundlewc.pl
   TableLayout/trunk/nb4.1/nbbuild/misc/i18ncheck.pl
   TableLayout/trunk/nb4.1/nbbuild/module-scripts/
   TableLayout/trunk/nb4.1/nbbuild/module-scripts/default-properties.xml
   TableLayout/trunk/nb4.1/nbbuild/module-scripts/default.xml
   TableLayout/trunk/nb4.1/nbbuild/module-scripts/directories.properties
   TableLayout/trunk/nb4.1/nbbuild/module-scripts/projectized.xml
   TableLayout/trunk/nb4.1/nbbuild/module-scripts/standard-jar-excludes.txt
   TableLayout/trunk/nb4.1/nbbuild/module-scripts/standard-nbm-license.txt
   TableLayout/trunk/nb4.1/nbbuild/moduledefs-tmp.properties
   TableLayout/trunk/nb4.1/nbbuild/modules.xml
   TableLayout/trunk/nb4.1/nbbuild/user.build.properties
   TableLayout/trunk/nb4.1/nbbuild/user.cluster.properties
   TableLayout/trunk/nb4.1/nblayoutpack/
   TableLayout/trunk/nb4.1/nblayoutpack/build.xml
   TableLayout/trunk/nb4.1/nblayoutpack/manifest.mf
   TableLayout/trunk/nb4.1/nblayoutpack/nbproject/
   TableLayout/trunk/nb4.1/nblayoutpack/nbproject/private/
   TableLayout/trunk/nb4.1/nblayoutpack/nbproject/private/private.xml
   TableLayout/trunk/nb4.1/nblayoutpack/nbproject/project.properties
   TableLayout/trunk/nb4.1/nblayoutpack/nbproject/project.xml
   TableLayout/trunk/src/
   TableLayout/trunk/src/de/
   TableLayout/trunk/src/de/berlios/
   TableLayout/trunk/src/de/berlios/nblayoutpack/
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/Bundle.properties
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutCustomizer.form
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutCustomizer.java
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutIntrospector.java
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutModule.java
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutSupport.java
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/ConstraintsConverter.java
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/DefaultConstraintsConverter.java
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/layer.xml
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/tablelayout.xml
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/layer.xml
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/palette/
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/palette/TableLayout.palette_item
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/tablelayout.xml
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/resources/
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/resources/tablelayout16.png
   TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/resources/tablelayout32.png
   TableLayout/trunk/testsrc/
   TableLayout/trunk/testsrc/Main.form
   TableLayout/trunk/testsrc/Main.java
Log:
[NEW] Initial sources import.

Added: TableLayout/trunk/build.properties
===================================================================
--- TableLayout/trunk/build.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/build.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,5 @@
+package=de/berlios/nblayoutpack/tablelayout
+name=nblayoutpack-tablelayout
+src=src
+
+spec.version=2.0.0
\ No newline at end of file

Added: TableLayout/trunk/lib/TableLayout-3.2.jar
===================================================================
(Binary files differ)


Property changes on: TableLayout/trunk/lib/TableLayout-3.2.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: TableLayout/trunk/license.txt
===================================================================
--- TableLayout/trunk/license.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/license.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,56 @@
+NetBeans Layout Pack License
+---------------------------------------
+
+Version: SPL 1.0
+
+NetBeans Layout Pack, the Module, is subject to the Sun Public License
+Version 1.0 (the "License"); you may not use this Module except
+in compliance with the License. You may obtain a copy of the License
+at http://www.sun.com/
+
+Software distributed under the License is distributed on an "AS IS" basis,
+WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+for the specific language governing rights and limitations under the
+License.
+
+The Initial Developer of the Module is Illya Kysil.
+Portions created by the Initial Developer are
+Copyright (C) 2004-2005 the Initial Developer.
+All Rights Reserved.
+
+
+Third party code Licenses
+---------------------------------------
+
+TableLayout License
+
+====================================================================
+The Clearthought Software License, Version 1.0
+
+Copyright (c) 2001 Daniel Barbalace.  All rights reserved.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions
+are met:
+
+1. Redistributions of source code must retain the above copyright
+   notice, this list of conditions and the following disclaimer.
+
+2. The original software may not be altered.  However, the classes
+   provided may be subclasses as long as the subclasses are not
+   packaged in the info.clearthought package or any subpackage of
+   info.clearthought.
+
+THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
+WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR, AFFILATED BUSINESSES,
+OR ANYONE ELSE BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
+USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGE.
+====================================================================

Added: TableLayout/trunk/nb3.6/build.xml
===================================================================
--- TableLayout/trunk/nb3.6/build.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb3.6/build.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project name="nblayoutpack-tablelayout" basedir=".." default="all">
+
+    <!-- Sample Ant script to create a NetBeans module and test it. -->
+    <!-- Sample directory layout: -->
+    <!-- build.xml   - this file -->
+    <!-- src/        - sources (package root) -->
+    <!-- manifest.mf - module manifest -->
+    <!-- netbeans/   - build products (root matches NB installation root) -->
+    <!-- You will need to have src/ mounted in order for Java-related IDE functions to work properly. -->
+    <!-- You can do this most conveniently using the "View over a Filesystem" module. -->
+
+    <!-- Permit external customizations: -->
+    <property file="build.properties"/>
+
+    <property name="netbeans.home" location="t:/netbeans/3.6"/>
+    <!-- Set this according to your NB installation. -->
+    <property name="nb" location="${netbeans.home}"/>
+    <!-- This might instead be in ${netbeans.user}/ant/extra/nbantext.jar: -->
+    <property name="nbantext.jar" location="${nb}/ant/extra/nbantext.jar"/>
+    <!-- Adjust to be the name of your module for JARs etc.: -->
+    <property name="name" value="nblayoutpack"/>
+    <!-- Location of sources (classpath root): -->
+    <property name="src" location="${basedir}/src"/>
+    <property name="output" location="${basedir}/../output"/>
+    <!-- Package prefix of sources, e.g. "org/netbeans/modules/mymodule": -->
+    <property name="package" value="de/berlios/nblayoutpack/tablelayout"/>
+
+  <target name="init" unless="buildnumber">
+    <tstamp>
+      <format property="buildnumber" pattern="yyyyMMdd.HHmm"/>
+      <format property="buildtimestamp" pattern="yyyy'/'MM'/'dd' 'HH':'mm':'ss"/>
+    </tstamp>
+    <property name="impl.version" value="${spec.version}.${buildnumber}"/>
+    <mkdir dir="${output}"/>
+  </target>
+
+    <target name="compile" depends="init">
+        <javac srcdir="${src}" destdir="${src}">
+            <include name="${package}/"/>
+            <classpath>
+                <!-- Whatever you need, based on your dependencies. -->
+                <pathelement location="${nb}/lib/openide.jar"/>
+                <pathelement location="${nb}/lib/openide-loaders.jar"/>
+                <pathelement location="${nb}/modules/form.jar"/>
+                <pathelement location="lib/TableLayout-3.2.jar"/>
+            </classpath>
+        </javac>
+    </target>
+
+    <target name="jars" depends="compile">
+        <mkdir dir="${output}/netbeans/modules"/>
+        <jar jarfile="${output}/netbeans/modules/${name}.jar" manifest="nb3.6/manifest.mf" compress="true">
+            <manifest>
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${src}">
+                <include name="${package}/"/>
+                <exclude name="**/*.java"/>
+                <exclude name="**/*.form"/>
+                <exclude name="**/.nbattrs"/>
+            </fileset>
+        </jar>
+    </target>
+
+    <target name="all" depends="clean,jars" description="Build the module.">
+      <mkdir dir="${output}/netbeans/modules/ext/nblayoutpack"/>
+      <copy todir="${output}/netbeans/modules/ext/nblayoutpack">
+        <fileset dir="lib">
+          <include name="*.jar"/>
+        </fileset>
+      </copy>
+    </target>
+
+    <!-- This target will only work *inside* the IDE! -->
+    <target name="reload" depends="all" description="Test the module inside the running IDE.">
+<!--
+        <nbinstaller module="netbeans/modules/${name}.jar" action="reinstall"/>
+-->
+        <!-- If you have some Class-Path extensions, you might want to test changes to these as well. -->
+        <!-- To do so, try: -->
+      <mkdir dir="${output}/reload"/>
+      <zip zipfile="${output}/reload/${name}.jar" compress="true">
+        <zipfileset src="${output}/netbeans/modules/${name}.jar"/>
+        <zipfileset src="${output}/netbeans/modules/ext/nblayoutpack/TableLayout-3.2.jar">
+          <exclude name="META-INF/MANIFEST.MF"/>
+        </zipfileset>
+      </zip>
+      <nbinstaller module="${output}/reload/${name}.jar" action="reinstall"/>
+    </target>
+
+    <target name="nbm" depends="all" description="Prepare the module for distribution via Auto Update.">
+        <taskdef name="makenbm" classname="org.netbeans.nbbuild.MakeNBM" classpath="${nbantext.jar}"/>
+        <makenbm file="${output}/${name}-nb3.6-${impl.version}.nbm"
+                 topdir="${output}"
+                 module="${output}/netbeans/modules/${name}.jar"
+                 needsrestart="false"
+                 homepage="http://nblayoutpack.berlios.de/"
+                 distribution="http://nblayoutpack.berlios.de/">
+          <license file="license.txt"/>
+        </makenbm>
+    </target>
+
+    <target name="clean" description="Clean all build products.">
+        <delete>
+            <fileset dir="${src}">
+                <include name="${package}/*.class"/>
+            </fileset>
+        </delete>
+        <delete dir="${output}"/>
+    </target>
+
+</project>

Added: TableLayout/trunk/nb3.6/manifest.mf
===================================================================
--- TableLayout/trunk/nb3.6/manifest.mf	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb3.6/manifest.mf	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,7 @@
+Manifest-Version: 1.0
+OpenIDE-Module: de.berlios.nblayoutpack.tablelayout
+OpenIDE-Module-Localizing-Bundle: de/berlios/nblayoutpack/tablelayout/Bundle.properties
+OpenIDE-Module-Layer: de/berlios/nblayoutpack/tablelayout/nb3.6/layer.xml
+OpenIDE-Module-Install: de/berlios/nblayoutpack/tablelayout/TableLayoutModule.class
+OpenIDE-Module-Module-Dependencies: org.netbeans.modules.form/2
+Class-Path: ext/nblayoutpack/TableLayout-3.2.jar

Added: TableLayout/trunk/nb4.0/nbbuild/CHANGES.txt
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/CHANGES.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/CHANGES.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,25 @@
+version 3
+======================
+1. removed apisupport modules that were added in version 2.  The patches have since been merged into
+the official sources.
+
+2. updated netbeans module definitions
+
+3. merged changes to projectized.xml
+
+
+version 2
+======================
+1. added modules for working with harness from within netbeans:
+    utilities/group
+    apisupport
+    apisupport/lite
+    apisupport/project
+
+Note: the first 3 are basically just copies from the netbeans source tree, and are only included here because they don't appear on the Update Center.  apisupport/project is modified to work with this harness instead of the setup in the official netbeans source tree.  apisupport/ant should be obtained from the update center.
+
+2. removed dependency on NETBEANS_HOME environment variable.  It's now specified as the netbeans.dest.dir property in user.build.properties (or site.build.properties)
+
+3. removed bootstrap target.  I now just include the nbantext.jar generated by the current netbeans source tree.
+
+4. fixed a few minor bugs

Added: TableLayout/trunk/nb4.0/nbbuild/README.txt
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/README.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/README.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,69 @@
+Netbeans Cluster Build Harness
+Author: Rich Unger
+Version: 3
+
+
+Getting Started:
+
+1. Set netbeans.dest.dir in user.build.properties to the location of your binary netbeans installation
+2. Give your cluster a name in user.build.properties
+3. Define the contents of your cluster in user.cluster.properties
+4. Add entries for your modules in modules.xml
+
+Shouldn't need to edit anything in folders underneath nbbuild/
+
+Use the snipe module as a model for your own modules.
+
+===========================================
+What is a cluster?
+
+Starting with Netbeans 4.0, the file layout of a Netbeans installation has changed to:
+
+NETBEANS_HOME
+  bin
+  conf
+  etc
+  cluster_one
+    modules
+    config
+    update_tracking
+  cluster_two
+    modules
+    config
+    update_tracking
+  cluster_three
+    modules
+    config
+    update_tracking
+
+Using this layout, a cluster can be packaged by itself, as a (xpi | rpm | deb | pkg | zip | tar.gz) and be installed separately from the Netbeans platform.
+
+A cluster has NO runtime significance.  A module doesn't care if it happens to live in cluster_one, cluster_two, or cluster_three, even if modules it depends on are in another cluster.  A cluster is merely a packaging convenience.
+
+When netbeans is launched, it needs to be told which clusters to activate.  The bin/netbeans.exe launcher, by default, activates the 'platform4', 'ide4', 'nb4.0', and 'extra' clusters.  Others can be specified in conf/netbeans.conf.
+
+This only works if you have the full IDE, though.  If you're building an app on the platform, you would distribute (with your cluster) a separate launch script or compiled executable which would call platform4/lib/nbexec.exe and pass it a list of clusters.
+
+===========================================
+
+About the included module:
+
+snipe: This is a real bare-bones module that edits a fictional file type.  It's meant to show how to construct a module and perform several common integration tasks.  I attempted to include as many helpful comments in the code as possible, so it would be useful as a tutorial.
+
+===========================================
+
+Using the harness from within NetBeans:
+
+You need the "Netbeans Module Projects" module, from the Update Center.  Alternatively you can build this module from the netbeans source tree.  It is located there under apisupport/project.  It has a few other dependencies, so the best way to build it is to run "ant all-apisupport" from the nbbuild/ directory in the netbeans tree.
+
+===========================================
+
+Unfinished Business:
+
+1. I'd like to add a target for generating launchers (i.e. ${netbeans.dest.dir}/bin/mycluster.exe, and analogous unix/OSX shell script).  However, as of right now I can't figure out how to pass absolute paths to the platform launcher in platform4/lib/nbexec (the --clusters argument requires absolute paths to the clusters).  The tryme and sanity-test tasks get around this by using the ${netbeans.dest.dir} variable that these scripts require to be set.  However, that should only be a requirement for a development box.  It shouldn't need to be required of your users.
+
+2. The next phase is to create a real UI/functional spec to support both the Sun netbeans developers and the external platform users, and evolve this harness to support that spec.  Discussion is currently happening on the nbdev list.
+
+===========================================
+
+Suggestions are welcome.  Questions to dev at openide.netbeans.org please.

Added: TableLayout/trunk/nb4.0/nbbuild/build.xml
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/build.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/build.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="nbbuild" default="all" basedir=".">
+  <import file="cluster-scripts/cluster.xml"/>
+
+  <target name="all" depends="netbeans-all" description="Build all the nbms in the cluster."/>
+
+  <!-- inherited targets -->
+  <!--
+  compile-all: compiles all your modules
+  jar-all: creates module jars for all your modules
+  netbeans-all: installs all your modules to $NETBEANS_HOME
+  nbm-all: makes NBM files of all your modules, puts them in nbbuild/nbms/
+  javadoc-all: generates javadocs for all your modules
+  test-all: runs junit tests for all your modules:
+  clean-all: runs 'clean' in all your modules
+  clean: same as clean-all
+  real-clean: cleans up everything in nbbuild/, as well as clean-all
+  cluster-zip: Zips up the whole cluster (after building with netbeans-all) into nbbuild/build/
+  sanity-check: Builds all modules, then starts netbeans for a brief period, then shuts down
+                (Useful for automated builds)
+  tryme: Builds all modules, then starts netbeans, optionally in debug mode
+  tryme-debg: forced debug mode with the tryme target
+  -->
+
+  <!-- Add your own stuff here ... -->
+
+</project>

Added: TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster-description.properties
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster-description.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster-description.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,40 @@
+nb.cluster.platform.pkg.filename=platform4
+nb.cluster.platform.extra.pkg.filename=platform4
+nb.cluster.platform.pkg.name=NetBeans 4 platform cluster
+nb.cluster.platform.pkg.version=4.0
+nb.cluster.platform.pkg.desc=NetBeans platform technology
+nb.cluster.platform.pkg.vendor=Sun Microsystems, Inc.
+nb.cluster.platform.pkg.email=
+
+nb.cluster.platform.pkg.svr4.pkg=SUNWnb4pf
+nb.cluster.platform.pkg.svr4.maxinst=1000
+nb.cluster.platform.pkg.svr4.sunw_pkgvers=1.0
+nb.cluster.platform.pkg.svr4.hotline=Please contact your local service provider
+nb.cluster.platform.pkg.svr4.classes=none
+nb.cluster.platform.pkg.svr4.basedir=/opt/netbeans
+nb.cluster.platform.pkg.svr4.pkginst=platform4
+nb.cluster.platform.pkg.svr4.category=application
+
+nb.cluster.platform.pkg.rpm.name=nb-platform
+nb.cluster.platform.pkg.rpm.requires=javahelp > 1.4
+nb.cluster.platform.pkg.rpm.group=Applications
+nb.cluster.platform.pkg.rpm.url=http://www.sun.com/
+nb.cluster.platform.pkg.rpm.copyright=commercial
+nb.cluster.platform.pkg.rpm.map=/opt/sun/netbeans
+nb.cluster.platform.pkg.rpm.prefix=/opt
+
+nb.cluster.nb.pkg.filename=nb4.0
+nb.cluster.ide.extra.pkg.filename=ide4-extra
+nb.cluster.ide.pkg.filename=ide4
+nb.pkg.idesupport.pkg.filename=idesupport4
+nb.pkg.ideextensions.pkg.filename=ideextensions4
+nb.pkg.javarefactoring.pkg.filename=javarefactoring4
+nb.pkg.webapp.pkg.filename=webapp4
+nb.pkg.ide.pkg.filename=ide4
+nb.pkg.nb.pkg.filename=nb4
+nb.features.basic.pkg.filename=features-basic4
+nb.features.desktop.pkg.filename=features-desktop4
+nb.features.ideplugin.pkg.filename=features-ideplugin4
+nb.features.web.pkg.filename=features-web4
+nb.pkg.testtools.pkg.filename=testtools4
+nb.pkg.mdr.pkg.filename=mdr4

Added: TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.properties
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,223 @@
+clusters.prefix=libnb
+
+local.config.tasklist4barracuda=\
+        tasklist/api, \
+        tasklist/core, \
+        tasklist/suggestions, \
+        tasklist/docscan
+
+local.config.tasklist4barracuda_auc=\
+        tasklist/copyright, \
+        tasklist/suggestions/ui, \
+        tasklist/usertasks, \
+        tasklist/javaparser, \
+        tasklist/javadoc, \
+        tasklist/compiler, \
+        tasklist/pmd, \
+        tasklist/checkstyle, \
+        tasklist/editor, \
+        tasklist/bugs
+
+local.config.libs=libs/xerces, \
+        libs/j2eeeditor, \
+        libs/commons_logging
+
+local.config.xml=xml/api, \
+        xml/tax, \
+        xml/core, \
+        xml/catalog, \
+        xml/tools, \
+        xml/text-edit, \
+        xml/css, \
+        xml/xsl, \
+        xml/schema
+
+local.config.vcsprofiles=vcsgeneric/profiles/cvsprofiles, \
+        vcsgeneric/profiles/pvcs, \
+        vcsgeneric/profiles/vss
+
+clusters.extra.list=nb.pkg.testtools,\
+        nb.cluster.platform.extra, \
+	nb.cluster.ide.extra
+
+#List of clusters in standard build
+nb.clusters.list=nb.cluster.platform, \
+        nb.cluster.ide, \
+        nb.cluster.nb
+
+clusters.list= \
+        ${nb.clusters.list}, \
+        ${clusters.extra.list}, \
+        ${user.cluster}
+
+nb.cluster.platform.extra.dir=platform4
+nb.cluster.platform.extra.depends=nb.cluster.platform
+nb.cluster.platform.extra=openide/util, \
+        openide/actions, \
+        openide/awt, \
+        openide/dialogs, \
+        openide/nodes, \
+        openide/explorer, \
+        openide/fs, \
+        openide/text, \
+        openide/windows
+
+nb.cluster.platform.dir=platform4
+nb.cluster.platform.depends=
+nb.cluster.platform=core, \
+        openide, \
+        openide/loaders, \
+        openide/io, \
+        openide/execution, \
+        openide/masterfs, \
+        core/bootstrap, \
+        core/output2, \
+        core/settings, \
+        core/javahelp, \
+        core/execution, \
+        core/ui, \
+        core/swing/plaf, \
+        core/swing/tabcontrol, \
+        core/windows, \
+        core/multiview, \
+        autoupdate, \
+        projects/queries
+
+nb.pkg.idesupport=\
+        debuggercore/api, \
+        debuggercore/viewmodel, \
+        debuggercore, \
+        diff, \
+        editor, \
+        editor/lib, \
+        editor/fold, \
+        editor/util, \
+        vcscore, \
+        javacvs/libmodule, \
+        ${local.config.vcsprofiles}, \
+        ${local.config.libs}, \
+        projects/projectapi, \
+        projects/projectuiapi, \
+        projects/projectui, \
+        projects/libraries, \
+        core/ide, \
+        core/favorites, \
+        vcsgeneric
+
+nb.pkg.ideextensions=\
+        properties, \
+        utilities, \
+        utilities/project, \
+        i18n, \
+        i18n/form, \
+        image, \
+        html, \
+        usersguide, \
+	usersguide/j2seexamples, \
+        openidex, \
+        ${local.config.tasklist4barracuda}, \
+        ${local.config.xml}
+
+nb.pkg.javarefactoring=\
+        classfile, \
+        clazz, \
+        java/srcmodel, \
+        java/api, \
+        java/javacore, \
+        java/javamodel, \
+        java, \
+        java/j2seproject, \
+        java/j2seplatform, \
+        java/parser, \
+        java/platform, \
+        java/project, \
+        refactoring, \
+        junit, \
+        javadoc, \
+        beans, \
+        debuggerjpda/api, \
+        debuggerjpda, \
+        debuggerjpda/ui, \
+        debuggerjpda/ant, \
+        ant, \
+        ant/project, \
+        ant/freeform, \
+        ant/grammar, \
+        ant/browsetask, \
+        apisupport/ant, \
+        apisupport/project, \
+        form
+
+nb.pkg.webapp=\
+        j2eeserver, \
+        j2eeserver/j2eeapis, \
+        j2eeserver/ant, \
+        schema2beans/rt, \
+        tomcatint/tomcat5, \
+        monitor, \
+        httpserver, \
+        httpserver/servletapi, \
+        db, \
+        extbrowser, \
+        web/servletapi23, \
+        web/servletapi24, \
+        web/core, \
+        web/project, \
+        web/webapi, \
+        web/ddapi, \
+        web/jspdebug, \
+        web/jspparser, \
+        web/jspsyntax, \
+        web/jstl11
+
+
+nb.pkg.ide=
+
+# special cluster for NetBeans IDE only extensions
+nb.pkg.nb=\
+        ide/branding, \
+        ide/updatecenters, \
+        ide/welcome, \
+        ide/launcher/upgrade, \
+        ide/applemenu, \
+        tomcatint/tomcat5/bundled, \
+        web/examples
+
+nb.pkg.testtools.dir=testtools
+nb.pkg.testtools.depends=nb.cluster.platform
+nb.pkg.testtools=jellytools, \
+        jemmy/idemodule, \
+        jemmysupport, \
+        xtest, \
+        xtest/nbjunit
+
+nb.cluster.ide.dir=ide4
+nb.cluster.ide.depends=nb.cluster.platform,nb.cluster.ide.extra
+nb.cluster.ide= \
+        ${nb.pkg.idesupport},\
+        ${nb.pkg.ideextensions},\
+        ${nb.pkg.javarefactoring},\
+        ${nb.pkg.webapp},\
+        ${nb.pkg.mdr}
+
+nb.cluster.ide.extra.depends=nb.cluster.platform
+nb.cluster.ide.extra.dir=extra
+nb.cluster.ide.extra= \
+        schema2beans/dev
+
+
+nb.cluster.nb.dir=nb4.0
+nb.cluster.nb.depends=nb.cluster.ide
+nb.cluster.nb= \
+        ${nb.pkg.ide},\
+        ${nb.pkg.nb}
+
+nb.pkg.mdr=mdr,\
+               mdr/module,\
+               mdr/nbjmiutils,\
+               mdr/jmiutils,\
+               mdr/mdrapi,\
+               mdr/jmi,\
+               mdr/mof, \
+               mdr/lib
+nb.pkg.mdr.dir=ide4

Added: TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.xml
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/cluster-scripts/cluster.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,230 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="cluster" default="tryme" basedir="..">
+  <import file="../module-scripts/default.xml"/>
+
+  <target name="check-for-jdk-1.4">
+    <available property="have-jdk-1.4" classname="java.lang.CharSequence"/>
+  </target>
+  <target name="assure-jdk-1.4" depends="check-for-jdk-1.4" unless="have-jdk-1.4">
+    <fail>You need JDK 1.4 or higher to build NetBeans.</fail>
+  </target>
+
+  <target name="init-module-list" depends="assure-jdk-1.4">
+    <!-- Define modules. -->
+    <!-- The following is not permitted by Ant: -->
+    <!-- <property name="modules" value="${config.modules.${clustername}}"/> -->
+    <!-- So this is a little trick to do it anyway. -->
+    <echo file="moduledefs-tmp.properties">modules=$${cluster.${clustername}}</echo>
+    <property file="moduledefs-tmp.properties"/>
+    <property name="allmodules" value="${modules}"/>
+  </target>
+
+  <target name="set-buildnumber" unless="buildnumber">
+    <tstamp>
+    	<format property="buildnumber" pattern="yyMMdd"/>
+    </tstamp>
+  </target>
+
+  <target name="init" depends="default.init,init-module-list,set-buildnumber">
+    <taskdef name="for-each" classname="org.netbeans.nbbuild.ForEach" classpath="lib/nbantext.jar"/>
+
+    <!-- Overridable. Note: need not necessarily be a number at all): -->
+    <property name="buildnum" value="dev-${buildnumber}"/>
+    <property name="sanitystart.args" value="-J-Dnetbeans.close=true ${sanitystart.args.additional}"/>
+  </target>
+
+  <macrodef name="resolve">
+    <attribute name="name"/>
+    <attribute name="property"/>
+    <sequential>
+      <property name="@{name}" value="${@{property}}"/>
+    </sequential>
+  </macrodef>
+
+  <target name="cluster-zip" depends="netbeans-all">
+    <taskdef name="setclusterpatternset" classname="org.netbeans.nbbuild.SetClusterPatternSet" classpath="lib/nbantext.jar"/>
+    <taskdef name="setcluster" classname="org.netbeans.nbbuild.SetCluster" classpath="lib/nbantext.jar"/>
+    <loadproperties srcFile="user.cluster.properties" />
+    <loadproperties srcFile="cluster-scripts/cluster.properties" />
+    <loadproperties srcFile="cluster-scripts/cluster-description.properties" />
+    <loadproperties srcFile="module-scripts/directories.properties" />
+    <setcluster cluster="${user.cluster}" name="one.cluster.dir" />
+    
+    <setclusterpatternset cluster="${user.cluster}" name="${user.cluster}.files" trackingpath="${netbeans.dest.dir}" clusterdir="${one.cluster.dir}"/>
+    
+    <property name="zipcluster.file" value="${user.cluster}"/>
+    <mkdir dir="${netbeans.build.dir}/zips"/>
+    <zip destfile="${netbeans.build.dir}/zips/${zipcluster.file}-${buildnum}.zip" update="true" duplicate="preserve">
+      <zipfileset dir="${netbeans.dest.dir}" filemode="755">
+        <include name="${one.cluster.dir}/${nb.bin.dir}/nbexec"/>
+      </zipfileset>
+      <zipfileset dir="${netbeans.dest.dir}">
+        <patternset refID="${user.cluster}.files"/>
+      </zipfileset>
+    </zip>
+  </target>
+
+  <target name="sanity-check" depends="testuserdir-delete,sanity-start" description="Test whether the build can start up without problems."/>
+  <target name="testuserdir-delete" depends="init">
+    <delete dir="${test.user.dir}"/>
+  </target>
+  <target name="sanity-start" depends="netbeans-all">
+    <mkdir dir="${test.user.dir}"/>
+    <echo>Starting the IDE as a sanity check...</echo>
+    <!-- XXX better would be to scan start log for stacktraces and just show those; -->
+    <!-- possibly after filtering for duplicates or something like this. -->
+    <!-- Timeout is ten minutes; should be enough for valid start, while preventing -->
+    <!-- a deadlock from hanging an automated build: -->
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes" timeout="600000">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${sanitystart.args}"/>
+    </exec>
+    <exec os="Linux SunOS Solaris Mac OS X" dir="." executable="sh" failonerror="yes" timeout="600000">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${sanitystart.args}"/>
+    </exec>
+    <echo>Finished starting the IDE, pay attention to any reported errors.</echo>
+  </target>
+
+  <target name="check-for-build"  >
+    <available property="have-build" file="${netbeans.dest.dir}/bin/netbeans"/>
+  </target>
+
+  <target name="tryme" depends="netbeans-all,tryme-debug,tryme-run"
+          description="Try running the IDE interactively (build it first if needed).
+It is possible to use -Ddebug.port=3234 -Ddebug.pause=y to start the system in debug mode" 
+   />
+          
+          
+  <target name="tryme-run" depends="init" unless="debug.port" >
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+    <exec os="Linux SunOS Solaris" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+    <exec os="Mac OS X" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="/Library/Java/Home"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+  </target>
+  
+  <target name="tryme-debug" depends="init" if="debug.port" >
+    <property name="debug.pause" value="n" />
+  
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+      <arg line="-J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,suspend=${debug.pause},server=y,address=${debug.port}" />
+    </exec>
+    <exec os="Linux SunOS Solaris Mac OS X" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+      <arg line="-J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,suspend=${debug.pause},server=y,address=${debug.port}" />
+    </exec>
+  </target>
+
+  <target name="real-clean" depends="clean,testuserdir-delete"
+          description="Clean everything possible.">
+    <echo message="Cleaning old builds..."/>
+
+    <!-- This step must be last: -->
+    <echo message="Cleaning NetBeans-specific Ant extensions..."/>
+    <delete file="moduledefs-tmp.properties"/>
+    <delete dir="nbms" failonerror="false"/>
+  </target>
+  
+  <target name="clean" depends="clean-all"
+          description="Run 'clean' on all the modules in the cluster.">
+    <echo message="Run `ant real-clean' if desired."/>
+  </target>
+
+
+  <!-- Delegating targets -->
+
+  <target name="compile-all" depends="init">
+      <for-each startdir=".." target="compile" locations="${allmodules}"/>
+  </target>
+
+  <target name="jar-all" depends="init">
+      <for-each startdir=".." target="jar" locations="${allmodules}"/>
+  </target>
+
+  <target name="netbeans-all" depends="init">
+      <for-each startdir=".." target="netbeans" locations="${allmodules}"/>
+  </target>
+
+  <target name="javadoc-all" depends="init">
+      <for-each startdir=".." target="javadoc" locations="${allmodules}"/>
+  </target>
+
+  <target name="test-all" depends="init">
+      <for-each startdir=".." target="test" locations="${allmodules}"/>
+  </target>
+
+  <target name="clean-all" depends="init">
+      <for-each startdir=".." target="clean" locations="${allmodules}"/>
+  </target>
+
+  <!-- Puts all the nbm's in nbbuild/nbms/ -->
+  <target name="nbm-all" depends="init">
+      <mkdir dir="nbms"/>
+      <property name="nbm.target.dir" location="nbms"/>
+      <for-each startdir=".." target="nbm" locations="${allmodules}"/>
+  </target>
+
+</project>

Added: TableLayout/trunk/nb4.0/nbbuild/lib/nbantext.jar
===================================================================
(Binary files differ)


Property changes on: TableLayout/trunk/nb4.0/nbbuild/lib/nbantext.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: TableLayout/trunk/nb4.0/nbbuild/misc/addSerialVer
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/misc/addSerialVer	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/misc/addSerialVer	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,109 @@
+#
+#
+#
+if test "$#" -eq "0"; then
+  LIST=*
+else
+  LIST=$*
+fi
+
+# runs serialver and waits 3s for it to finish
+# then it kills it
+runSerialVer () {
+  # computes the serializable value and throws a signal
+  java -ms8m sun.tools.serialver.SerialVer $1 2>/dev/null&
+  SVPID=$!
+  
+  # sleep 3s and inform parent that time is up
+  sleep 3 && kill $SVPID 2>/dev/null &
+  SLPID=$!
+
+  # waits till the serial version number is computed
+  wait $SVPID
+
+  # kill timer
+  kill $SLPID 2>/dev/null
+}
+
+
+# compute serial version UID for a class,
+# if not serializable empty string is returned
+# otherwise string for initialization is given back
+computeUID () {
+  RES=`runSerialVer $1`
+  expr "$RES" : "$1: *\(.*;\)" 
+}
+
+AlphaNum="[A-Za-z\.0-9/]"
+
+
+find $LIST -name "*.class" | while read ClassFile; do
+  echo Working on $ClassFile
+
+  # 0 if not inner class 
+  InnerClass=`expr index $ClassFile \$`
+
+  Class=`tr "/" "." <<KONEC
+$ClassFile
+KONEC
+`
+  Class=`basename $Class ".class"`
+  # name of the class (if innner than name of the inner class)
+  ClassName=`tr "$." "//" <<KONEC
+$Class
+KONEC
+`
+  ClassName=`basename $ClassName`
+
+
+  # test if it is not anonymous innerclass
+  if test "$ClassName" -ge "0" 2>/dev/null; then
+    echo Anonymous inner class $Class
+  else
+    JavaFile=`expr $ClassFile : "\($AlphaNum*\).*\.class"`
+    JavaFile=$JavaFile".java"
+  
+    # compute UID for Class
+    uid=`computeUID $Class`
+    if test -n "$uid"; then
+      # there should be the UID
+      # try to see if it is there
+      if ! grep "$uid" $JavaFile >/dev/null; then
+        STOP=""
+        if ! test "0" -eq "$InnerClass"; then
+          # if inner class, test wheter it is static
+          if ! grep "static.*class *$ClassName" $JavaFile >/dev/null; then
+            echo Is not static inner class
+            STOP=true
+          fi
+        fi
+
+        if test -z "$STOP"; then
+          # we have to add it
+          echo Need to add the serialVersionUID
+          sed -e "/ class *$ClassName/a\\
+          /** generated Serialized Version UID */\\
+          $uid" <$JavaFile >/tmp/keke
+          # compare files
+          if diff -q /tmp/keke $JavaFile >/dev/null; then
+            # are same
+            echo Error files /tmp/keke and $JavaFile are same
+            grep  "$ClassName" $JavaFile
+            exit 1
+          fi
+          # overrides the original
+          mv /tmp/keke $JavaFile
+          # updated file to list of files
+          echo $JavaFile >>updated
+          echo Successfully Updated.
+        fi  
+      else
+        echo serialVersionUID already there
+      fi
+    else
+      echo Is not serializable
+    fi
+  fi
+  
+  rm $ClassFile
+done

Added: TableLayout/trunk/nb4.0/nbbuild/misc/bundlecheck.pl
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/misc/bundlecheck.pl	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/misc/bundlecheck.pl	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,114 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+require 5.005;
+use File::Find;
+
+my @files = ();
+my $quiet = 0;
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-q] file | directory ...\n";
+}
+
+if ($ARGV[0] eq "-q") {
+    $quiet = 1;
+    shift @ARGV;
+}
+
+foreach my $name (@ARGV) {
+    if (-f $name) {
+	push @files, $name;
+    } elsif (-d $name) {
+        find(sub {
+                 if (-f && m,\.java$, || -f && m,\bBundle.properties$,) {
+                     push @files, $File::Find::name;
+                 }
+             },
+             $name);
+    }
+}
+
+#
+# read Bundle.properties
+#
+
+ at props = ();
+
+foreach $f (@files) {
+    next if $f !~ m,\bBundle.properties$,i;
+
+    print STDERR "*** $f\n" unless $quiet;
+    
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    @lines = split /\r\n|\n|\r/, $all;
+    for ($lineno = 0; $lineno <= $#lines; $lineno++) {
+	$_ = $lines[$lineno];
+        
+        next if /^\s*#/;
+        next if /^\s*$/;
+
+        if (m,^([^=]+)=(.*)$,) {
+            $k = $1;
+            $k =~ s,\\ , ,g;
+            push @props, { key => $k,
+                           file => $f,
+                           lineno => $lineno + 1,
+                           line => $_,
+                           used => 0
+                         };
+        }
+
+        while (m,\\$, && $lineno <= $#lines) {
+            $lineno++;
+            $_ = $lines[$lineno];
+        }
+    }
+}
+
+#
+# go through *.java
+#
+  
+  
+foreach $f (@files) {
+    next if $f =~ m,\bBundle.properties$,i;
+
+    print STDERR "*** $f\n" unless $quiet;
+    
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    foreach $p (@props) {
+        next if $p->{used} > 0;
+        $pat = $p->{key};
+        $pat = quotemeta $pat;
+        $p->{used}++ if $all =~ m,\"$pat\",;
+    }
+}
+
+foreach $p (@props) {
+    next if $p->{line} =~ m!/!; # probably a filename localization, not in Java code
+    next if $p->{line} =~ m!^OpenIDE-Module-!; # manifest localization, not in Java code
+    print "$p->{file}:$p->{lineno}: $p->{line}\n" if $p->{used} == 0;
+}

Added: TableLayout/trunk/nb4.0/nbbuild/misc/bundlewc.pl
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/misc/bundlewc.pl	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/misc/bundlewc.pl	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,52 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+$totalwc = 0;
+$totallc = 0;
+
+printf "%7s %5s File\n", "Strings", "Words";
+printf "%7s %5s %s\n", "-------", "-----", "-" x 40;
+
+foreach $f (@ARGV) {
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    @lines = split /\r|\n/, $all;
+    
+    $wc = 0;
+    $lc = 0;
+    
+    foreach (@lines) {
+        next if /^\s*#/;
+        next if /^\s*$/;
+
+        if (/^[^=]+=(.*)$/) {
+            $_ = $1;
+            s/^\s*//;
+            s/\s*$//;
+            @words = split /\s+/;
+            $wc += @words ;
+            $lc++;
+        }
+    }
+    
+    printf "%7d %5d %s\n", $lc, $wc, $f;
+    $totalwc += $wc;
+    $totallc += $lc;
+}
+
+printf "\n%7d %5d Total\n", $totallc, $totalwc;

Added: TableLayout/trunk/nb4.0/nbbuild/misc/i18ncheck.pl
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/misc/i18ncheck.pl	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/misc/i18ncheck.pl	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,201 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+#
+# i18ncheck.pl - checks java source for internationalizable strings
+#                not 100% foolproof !!
+#
+#
+require 5.005;
+use File::Find;
+
+my $fixmode = 0;
+my @files = ();
+my @modifiedfiles = ();
+my @lines = ();
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-f] file | directory ...\n";
+}
+
+if ($ARGV[0] eq "-f") {
+    $fixmode = 1;
+    shift @ARGV;
+}
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-f] file | directory ...\n";
+}
+
+$SIG{'INT'} = sub {
+    print_summary() if $fixmode;
+    exit 255;
+};
+  
+foreach my $name (@ARGV) {
+    if (-f $name) {
+	push @files, $name;
+    } elsif (-d $name) {
+        find(sub {
+                 if (-f && m,\.java$,) {
+                     push @files, $File::Find::name;
+                 }
+             },
+             $name);
+    }
+}
+
+foreach my $name (@files) {
+    checkfile($name);
+}
+
+print_summary() if $fixmode;
+exit 0;
+
+#
+# subroutines
+#
+
+sub checkfile {
+    my $fname = shift;
+    @lines = ();
+
+    if (! open(FH, "< $fname")) {
+	warn "cannot open file '$fname': $!";
+	return;
+    }
+    @lines = <FH>;
+    close FH;
+    
+    my $lineno = 1;
+    my $modified = 0;
+    
+LOOP:
+    while ($lineno <= $#lines) {
+	$_ = $lines[$lineno - 1];
+        
+        if (m,/\*,,) {
+            while ($lineno <= $#lines) {
+                $_ = $lines[$lineno - 1];
+                if (! m,\*/,) {
+                    $lineno++;
+                    next;
+                } else {
+                    last;
+                }
+            }
+        }
+
+        # skip line comment
+        if (m,(^ *//.*$),) {
+            $_ = $`;
+        }
+        
+        if (checkline($_)) {
+            if ($fixmode) {
+                print "$fname:$lineno:\n";
+                if (fixline($fname, $lineno)) {
+                    $modified = 1;
+                }
+            } else {
+                print "$fname:$lineno: $_";
+            }
+        }
+
+        $lineno++;
+    }
+
+
+    if ($fixmode && $modified) {
+        savefile($fname);
+        push @modifiedfiles, $fname;
+    }
+}
+
+sub fixline {
+    my $fname = shift;
+    my $lineno = shift;
+    my $answer;
+    
+    print "\n";
+    print "   " . $lines[$lineno - 4] if $lineno >= 4;
+    print "   " . $lines[$lineno - 3] if $lineno >= 3;
+    print "   " . $lines[$lineno - 2] if $lineno >= 2;
+    print " =>" . $lines[$lineno - 1] if $lineno >= 1;
+    print "   " . $lines[$lineno] if $lineno <= $#lines;;
+    print "   " . $lines[$lineno + 1] if $lineno + 1 <= $#lines;;
+    print "   " . $lines[$lineno + 2] if $lineno + 2 <= $#lines;;
+    print "\n";
+    
+    do {
+        print "** [M]ark this line with NOI18N -- [S]kip [m]: ";
+        flush;
+        $answer = <STDIN>;
+        chomp $answer;
+    } while (uc($answer) ne "M" && uc($answer) ne "S" && $answer ne "");
+
+    if (uc($answer) eq "S") {
+        return 0;
+    } else {
+        $lines[$lineno - 1] =~ s,\s*$,,;
+        $lines[$lineno - 1] = $lines[$lineno - 1] . " // NOI18N\n";
+        return 1;
+    }
+    
+}
+
+sub savefile {
+    my $fname = shift;
+
+    if (!rename $fname, "$fname.bak") {
+        warn "** Cannot create backup for $fname, changes have not been saved\n";
+        return;
+    }
+
+    if (! open(FH, "> $fname")) {
+        warn "** Cannot save changes in $fname\n";
+    }
+
+    print FH @lines;
+    close FH;
+}
+
+sub checkline {
+    shift;
+
+    return (! m,NOI18N,
+            && ! m,getString\s*\(,
+            && ! m,System\. ?err\. ?print,
+            && ! m,getProperty,
+            && ! m,getBoolean,
+            && ! m,NbBundle\. ?get(Message|LocalizedFile),
+            && ! m,\. ?log\s*\(,
+            && ! m,new HelpCtx\s*\(,
+            && ! m,new PropertyDescriptor\s*\(,
+            && ! m,setIconBase\s*\(,
+            && ! m,loadImage\s*\(,
+            && ! m,getResource(AsStream)?\s*\(,
+            && m,".+", 
+           ); 
+}
+
+sub print_summary {
+    if ($#modifiedfiles < 0) {
+        print "\n\n** No file has been modified\n";
+    } else {
+        print "\n\n** The following files have been modified:\n\n";
+        foreach my $fname (@modifiedfiles) {
+            print "      $fname\n";
+        }
+    }
+}

Added: TableLayout/trunk/nb4.0/nbbuild/module-scripts/default-properties.xml
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/module-scripts/default-properties.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/module-scripts/default-properties.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?> 
+<project name="default-properties" default="netbeans" basedir=".">
+  <dirname property="nb_all" file="${ant.file.default-properties}/../.."/>
+
+  <!-- 
+  Read user's settings 
+  Note: user/site combination is so that you can check site.build.properties
+  into your source tree for everyone to use, and user.build.properties can contain
+  properties specific to your personal setup.
+  -->
+  <property file="${nb_all}/nbbuild/user.build.properties"/>
+  <property file="${nb_all}/nbbuild/site.build.properties"/>
+
+  <property name="homepage.base" value="netbeans.org"/>
+  <property name="dist.base" value="www.netbeans.org/download/nbms/40"/>
+  <property name="license.file" location="${nb_all}/nbbuild/module-scripts/standard-nbm-license.txt"/>
+  <property name="nbm_alias" value="nb_ide"/>
+  <property name="build.sysclasspath" value="ignore"/>
+
+  <property name="user.clusters.list.file" location="${nb_all}/nbbuild/user.cluster.properties"/>
+  <property name="clusters.list.file" location="${nb_all}/nbbuild/cluster-scripts/cluster.properties"/>
+  <property name="netbeans.build.dir" location="${nb_all}/nbbuild/build"/>
+  <property name="moduleCluster.file" location="${netbeans.dest.dir}/moduleCluster.properties"/>
+  <property name="directoryList.file" location="${nb_all}/nbbuild/module-scripts/directories.properties"/>
+  <property name="modulesxml.file" location="${nb_all}/nbbuild/modules.xml"/>
+
+  <property file="${user.clusters.list.file}"/>
+  <property file="${clusters.list.file}"/>
+  <property file="${moduleCluster.file}"/>
+  <property file="${directoryList.file}"/>
+
+</project>

Added: TableLayout/trunk/nb4.0/nbbuild/module-scripts/default.xml
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/module-scripts/default.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/module-scripts/default.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,75 @@
+<project name="default" default="init" basedir=".">
+  <import file="default-properties.xml"/>
+
+  <target name="init-tasks" unless="tasks-already-set">
+    <taskdef name="jhindexer"
+         classname="org.netbeans.nbbuild.JHIndexer"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="makenbm"
+         classname="org.netbeans.nbbuild.MakeNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="genlist"
+         classname="org.netbeans.nbbuild.MakeListOfNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="setcluster"
+         classname="org.netbeans.nbbuild.SetCluster"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="getmodulename"
+         classname="org.netbeans.nbbuild.GetModuleName"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="createmodulexml"
+         classname="org.netbeans.nbbuild.CreateModuleXML"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locjar"
+         classname="org.netbeans.nbbuild.LocalizedJar"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locjhindexer"
+         classname="org.netbeans.nbbuild.LocJHIndexer"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locmakenbm"
+         classname="org.netbeans.nbbuild.LocMakeNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <property name="tasks-already-set" value="true"/>
+  </target>
+  
+  <target name="init" depends="init-tasks,setup-jdkhome">
+    <!-- Gets the module name -->
+    <getmodulename name="module.name" root="${nb_all}"/>
+    
+    <property name="cluster.dir.fallback" value="extra" />
+    <setcluster name="cluster.dir" module="${module.name}" list="${clusters.list}" defaultLocation="${cluster.dir.fallback}"/>
+
+    <!-- Creating the output directory -->
+    <mkdir dir="${netbeans.dest.dir}/${cluster.dir}"/>
+
+    <!-- Writing the module's cluster to property file -->
+    <propertyfile file="${moduleCluster.file}">
+      <entry  key="${module.name}.dir" value="$${netbeans.dest.dir}/${cluster.dir}"/>
+    </propertyfile>
+  </target>
+
+  <target name="setup-jdkhome-1">
+    <!-- Note: user-configured -Djavahome=... will always override this: -->
+    <property name="javahome" location="${java.home}"/>
+    <available property="javahome-valid" file="${javahome}/lib/tools.jar"/>
+    <available classname="com.apple.eawt.Application" property="is-mac"/>
+  </target>
+
+  <target name="setup-jdkhome-2" depends="setup-jdkhome-1" if="javahome-valid">
+    <property name="jdkhome" value="${javahome}"/>
+    <property name="jdkhome-valid" value="true"/>
+  </target>
+
+  <target name="setup-jdkhome-3" depends="setup-jdkhome-1" unless="javahome-valid">
+    <property name="jdkhome" location="${javahome}/.."/>
+    <available property="jdkhome-valid" file="${jdkhome}/lib/tools.jar"/>
+  </target>
+
+  <target name="setup-jdkhome-4" depends="setup-jdkhome-1" if="is-mac">
+      <property name="jdkhome-valid" value="${java.home}/../Classes/classes.jar"/> 
+  </target>
+
+  <target name="setup-jdkhome" depends="setup-jdkhome-2,setup-jdkhome-3,setup-jdkhome-4" unless="jdkhome-valid">
+    <fail message="No tools.jar found in ${javahome}! Set -Djavahome=... as needed."/>
+  </target>
+</project>

Added: TableLayout/trunk/nb4.0/nbbuild/module-scripts/directories.properties
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/module-scripts/directories.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/module-scripts/directories.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,16 @@
+nb.beans.dir=beans
+nb.bin.dir=lib
+nb.docs.dir=docs
+nb.lib.dir=core
+nb.lib/ext.dir=lib
+nb.lib/patches.dir=${nb.lib.dir}/patches
+nb.modules.dir=modules
+nb.modules/autoload.dir=${nb.modules.dir}/autoload
+nb.modules/autoload/docs.dir=${nb.modules/autoload.dir}/docs
+nb.modules/bin.dir=${nb.modules.dir}/lib
+nb.modules/docs.dir=${nb.modules.dir}/docs
+nb.modules/eager.dir=${nb.modules.dir}/eager
+nb.modules/patches.dir=${nb.modules.dir}/patches
+nb.sources.dir=sources
+nb.system.dir=config
+nb.update_tracking.dir=update_tracking

Added: TableLayout/trunk/nb4.0/nbbuild/module-scripts/projectized.xml
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/module-scripts/projectized.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/module-scripts/projectized.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,476 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+<project name="projectized" default="init" basedir=".">
+
+    <!-- XXX supply descriptions for the appropriate targets -->
+    <!-- XXX prefix internal targets with '-' (and grep all module scripts which override or use these targets and update them to match) -->
+    <!-- XXX should use namespaces for NB in-VM tasks from ant/browsetask and debuggerjpda/ant and apisupport/ant -->
+
+    <import file="../module-scripts/default.xml"/>
+
+    <taskdef name="parseprojectxml" classname="org.netbeans.nbbuild.ParseProjectXml" classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+
+    <target name="init" depends="basic-init,files-init,build-init"/>
+
+    <target name="basic-init" depends="default.init">
+        <!-- Synch the following property loads with NbModuleProject.makeEvalDefs: -->
+        <property file="nbproject/private/private.properties"/>
+        <property file="nbproject/project.properties"/>
+        <!-- Do not try to set module.classpath here, in particular: -->
+        <!-- during a clean, the ${foo/bar.dir} properties may not be set. -->
+        <parseprojectxml project="." modulesxml="${modulesxml.file}" codenamebasedashesproperty="code.name.base.dashes" codenamebaseslashesproperty="code.name.base.slashes"/>
+        <property name="module.jar.dir" value="${nb.modules.dir}"/>
+        <property name="module.jar.basename" value="${code.name.base.dashes}.jar"/>
+        <property name="module.jar" value="${module.jar.dir}/${module.jar.basename}"/>
+        <condition property="has.javahelp">
+            <and>
+                <available file="javahelp"/>
+                <!-- Special hack for core: -->
+                <not><available file="javahelp/manifest.mf"/></not>
+            </and>
+        </condition>
+        <condition property="javahelp.jarred">
+            <and>
+                <available file="javahelp/${module.jar.basename}"/>
+            </and>
+        </condition>
+        <property name="javahelp.jar.dir" value="${nb.modules/docs.dir}"/>
+        <property name="javahelp.jar.basename" value="${code.name.base.dashes}.jar"/>
+        <property name="javahelp.jar" value="${javahelp.jar.dir}/${javahelp.jar.basename}"/>
+    </target>
+
+    <target name="files-init" depends="basic-init">
+        <patternset id="module.files">
+            <include name="${module.jar}"/>
+            <include name="${javahelp.jar}" if="has.javahelp"/>
+            <include name="${nb.system.dir}/Modules/${code.name.base.dashes}.xml"/>
+        </patternset>
+    </target>
+
+    <target name="build-init" depends="basic-init">
+        <parseprojectxml project="." modulesxml="${modulesxml.file}" publicpackagesproperty="public.packages" javadocpackagesproperty="module.javadoc.packages" idedependenciesproperty="ide.dependencies" moduledependenciesproperty="module.dependencies" moduleclasspathproperty="module.classpath" domainproperty="nbm.domain"/>
+        <condition property="is.regular">
+            <not>
+                <or>
+                    <isset property="is.autoload"/>
+                    <isset property="is.eager"/>
+                    <equals arg1="${module.jar.dir}" arg2="${nb.lib.dir}"/>
+                </or>
+            </not>
+        </condition>
+        <property name="nbm" value="${code.name.base.dashes}.nbm"/>
+        <property name="build.compiler.debug" value="true"/>
+        <property name="build.compiler.deprecation" value="true"/>
+        <property name="build.sysclasspath" value="ignore"/>
+        <property name="build.compiler.optimize" value="off"/>
+        <property name="build.package.compress" value="false"/>
+        <property name="build.package.index" value="false"/>
+        <property name="manifest.mf" location="manifest.mf"/>
+        <property name="src.dir" location="src"/>
+        <property name="build.classes.dir" location="build/classes"/>
+        <property name="nbm.homepage" value="http://${nbm.domain}.${homepage.base}/"/>
+        <property name="nbm.module.author" value=""/>
+        <property name="nbm.release.date" value=""/>
+        <property name="nbm.needs.restart" value="false"/>
+        <path id="cp">
+            <pathelement path="${module.classpath}"/>
+            <pathelement path="${cp.extra}"/>
+        </path>
+        <property name="build.javahelp.dir" location="build/javahelp"/>
+        <property name="javahelp.base" value="${code.name.base.slashes}/docs"/>
+        <property name="javahelp.search" value="JavaHelpSearch"/>
+        <property name="javahelp.excludes" value="credits.html"/>
+    </target>
+
+    <target name="test-preinit" depends="init"/>
+    <target name="test-init" depends="init,test-preinit">
+        <property name="test.unit.src.dir" location="test/unit/src"/>
+        <property name="build.test.unit.classes.dir" location="build/test/unit/classes"/>
+        <property name="build.test.unit.results.dir" location="build/test/unit/results"/>
+        <property name="test.filter.trace" value="true"/>
+        <path id="test.unit.cp">
+            <path refid="cp"/>
+            <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${module.jar}"/>
+            <!-- XXX check if these files exist, and if not, run xtest/build.xml -->
+            <pathelement location="${nb_all}/xtest/lib/junit.jar"/>
+            <pathelement location="${nb_all}/xtest/lib/nbjunit.jar"/>
+            <pathelement path="${test.unit.cp.extra}"/>
+        </path>
+        <path id="test.unit.run.cp">
+            <path refid="test.unit.cp"/>
+            <pathelement location="${build.test.unit.classes.dir}"/>
+            <pathelement path="${test.unit.run.cp.extra}"/>
+        </path>
+        <propertyset id="test.unit.properties">
+            <propertyref prefix="test-unit-sys-prop."/>
+            <mapper type="glob" from="test-unit-sys-prop.*" to="*"/>
+        </propertyset>
+    </target>
+
+    <target name="compile" depends="init">
+        <mkdir dir="${build.classes.dir}"/>
+        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="${build.compiler.debug}" deprecation="${build.compiler.deprecation}" optimize="${build.compiler.optimize}" source="1.4" includeantruntime="false">
+            <classpath refid="cp"/>
+        </javac>
+        <copy todir="${build.classes.dir}">
+            <fileset dir="${src.dir}" excludesfile="${nb_all}/nbbuild/module-scripts/standard-jar-excludes.txt"/>
+        </copy>
+    </target>
+
+    <target name="compile-single" depends="init">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <mkdir dir="${build.classes.dir}"/>
+        <!-- XXX consider forcing debug=true and deprecation=true -->
+        <!-- XXX consider deleting the .class file first to force a rebuild -->
+        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
+               debug="${build.compiler.debug}" deprecation="${build.compiler.deprecation}"
+               source="1.4" includes="${javac.includes}" optimize="${build.compiler.optimize}" includeantruntime="false">
+            <classpath refid="cp"/>
+        </javac>
+    </target>
+
+    <target name="jar-prep" depends="init">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${module.jar.dir}"/>
+        <tstamp>
+            <format property="buildnumber" pattern="yyMMdd" timezone="UTC"/>
+        </tstamp>
+    </target>
+
+    <target name="jar-no-module-deps" unless="module.dependencies">
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}">
+            <!-- XXX it seems that using <manifest> forces the JAR to be recreated each time -->
+            <!-- (presumably due to the variable OIDE-M-I-V) -->
+            <!-- so might have to use e.g. <manifest> task (created in build/ somewhere)? -->
+            <!-- Cf: http://issues.apache.org/bugzilla/show_bug.cgi?id=29085 -->
+            <manifest>
+                <attribute name="OpenIDE-Module-Public-Packages" value="${public.packages}"/>
+                <attribute name="OpenIDE-Module-IDE-Dependencies" value="${ide.dependencies}"/>
+                <!-- XXX make this conditional so can use OIDE-M-B-V instead -->
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${build.classes.dir}"/>
+        </jar>
+    </target>
+
+    <target name="jar-with-module-deps" if="module.dependencies">
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}">
+            <manifest>
+                <attribute name="OpenIDE-Module-Public-Packages" value="${public.packages}"/>
+                <attribute name="OpenIDE-Module-IDE-Dependencies" value="${ide.dependencies}"/>
+                <attribute name="OpenIDE-Module-Module-Dependencies" value="${module.dependencies}"/>
+                <!-- XXX make this conditional so can use OIDE-M-B-V instead -->
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${build.classes.dir}"/>
+        </jar>
+    </target>
+
+    <!-- XXX need to actually use 4 targets, I guess, depending on whether or not ${ide.dependencies} is defined: -->
+    <target name="jar" depends="init,compile,jar-prep,jar-no-module-deps,jar-with-module-deps"/>
+    
+    <target name="reload" depends="init,jar">
+        <fail unless="netbeans.user">Reloading modules works only inside the NetBeans IDE</fail>
+        <nbinstaller module="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" action="reinstall"/>
+    </target>
+
+    <!-- Can insert extra stuff in here, like release, etc.: -->
+    <target name="netbeans-extra"/>
+
+    <target name="module-xml-regular" if="is.regular">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <enabled dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </enabled>
+        </createmodulexml>
+    </target>
+
+    <target name="module-xml-autoload" if="is.autoload">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <autoload dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </autoload>
+        </createmodulexml>
+    </target>
+
+    <target name="module-xml-eager" if="is.eager">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <eager dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </eager>
+        </createmodulexml>
+    </target>
+
+    <target name="netbeans" depends="init,jar,netbeans-extra,module-xml-regular,module-xml-autoload,module-xml-eager,javahelp">
+        <genlist outputfiledir="${netbeans.dest.dir}/${cluster.dir}" module="${module.jar}">
+            <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
+                <patternset refid="module.files"/>
+            </fileset>
+        </genlist>
+    </target>
+    
+    <target name="nbm" depends="init,netbeans" description="Build NBM archive.">
+        <mkdir dir="${build.dir}"/>
+        <makenbm file="${build.dir}/${nbm}"
+                 productdir="${netbeans.dest.dir}/${cluster.dir}"
+                 module="${module.jar}"
+                 homepage="${nbm.homepage}"
+                 distribution="${nbm.distribution}"
+                 needsrestart="${nbm.needs.restart}"
+                 releasedate="${nbm.release.date}"
+                 moduleauthor="${nbm.module.author}">
+            <license file="${license.file}"/>
+            <signature keystore="${keystore}" storepass="${storepass}" alias="${nbm_alias}"/>
+        </makenbm>
+    </target>
+
+    <target name="javadoc" depends="init">
+        <fail unless="javadoc.name">Must set javadoc.name</fail>
+        <fail unless="javadoc.title">Must set javadoc.title</fail>
+        <!-- This should become an import at some point, perhaps: -->
+        <ant dir="${nb_all}/nbbuild/javadoctools" antfile="template.xml" target="javadoc">
+            <property name="javadoc.base" location="."/>
+            <property name="javadoc.packages" value="${module.javadoc.packages}"/>
+            <property name="javadoc.classpath" refid="cp"/>
+            <property name="javadoc.manifest" location="${manifest.mf}"/>
+        </ant>
+    </target>
+
+    <target name="javadoc-nb" depends="init,javadoc" if="netbeans.user">
+        <nbbrowse file="javadoc/${javadoc.name}/index.html"/>
+    </target>
+    
+    <target name="arch" depends="init" description="Process an arch.xml, creating it if it does not yet exist.">
+        <fail unless="javadoc.arch">You must define e.g. javadoc.arch=$${basedir}/arch.xml in project.properties</fail>
+        <property name="arch.output.html" location="${java.io.tmpdir}/arch.html"/>
+        <property name="arch.generate" value="true"/>
+        <taskdef name="arch" classname="org.netbeans.nbbuild.Arch" classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+        <arch answers="${javadoc.arch}" output="${arch.output.html}"/>
+    </target>
+    
+    <target name="arch-nb" depends="init,arch" if="netbeans.user" description="Process an arch.xml, creating it if it does not yet exist, and display the result.">
+        <nbbrowse file="${arch.output.html}"/>
+    </target>
+        
+    <target name="test-build" depends="init,test-init,jar">
+        <mkdir dir="${build.test.unit.classes.dir}"/>
+        <javac srcdir="${test.unit.src.dir}" destdir="${build.test.unit.classes.dir}"
+               debug="true" deprecation="${build.compiler.deprecation}"
+               source="1.4" optimize="${build.compiler.optimize}" includeantruntime="false">
+               <exclude name="**/jars/**"/><!-- XXX for core only; fix in core, not here -->
+            <classpath refid="test.unit.cp"/>
+        </javac>
+        <copy todir="${build.test.unit.classes.dir}">
+            <fileset dir="${test.unit.src.dir}">
+                <exclude name="**/*.java"/>
+            </fileset>
+        </copy>
+    </target>
+
+    <target name="compile-test-single" depends="init,test-init,jar">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <mkdir dir="${build.test.unit.classes.dir}"/>
+        <!-- XXX consider forcing deprecation=true -->
+        <!-- XXX consider deleting the .class file first to force a rebuild -->
+        <javac srcdir="${test.unit.src.dir}" destdir="${build.test.unit.classes.dir}"
+               debug="true" deprecation="${build.compiler.deprecation}"
+               source="1.4" includeantruntime="false" optimize="${build.compiler.optimize}" includes="${javac.includes}">
+            <classpath refid="test.unit.cp"/>
+        </javac>
+    </target>
+
+    <target name="test" depends="init,test-init,test-build">
+        <mkdir dir="${build.test.unit.results.dir}"/>
+        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed" filtertrace="${test.filter.trace}">
+            <batchtest todir="${build.test.unit.results.dir}">
+                <fileset dir="${test.unit.src.dir}">
+                    <!-- XXX could include only out-of-date tests... -->
+                    <include name="**/*Test.java"/>
+                </fileset>
+            </batchtest>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <!-- <assertions> does not seem to work in Ant 1.6.1? -->
+            <jvmarg value="-ea"/>
+            <formatter type="brief" usefile="false"/>
+        </junit>
+        <fail if="tests.failed">Some tests failed; see details above.</fail>
+    </target>
+
+    <target name="test-single" depends="init,test-init,test-build">
+        <fail unless="test.includes">Must set test.includes</fail>
+        <mkdir dir="${build.test.unit.results.dir}"/>
+        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed" filtertrace="${test.filter.trace}">
+            <batchtest todir="${build.test.unit.results.dir}">
+                <fileset dir="${test.unit.src.dir}" includes="${test.includes}"/>
+            </batchtest>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <!-- <assertions> does not seem to work in Ant 1.6.1? -->
+            <jvmarg value="-ea"/>
+            <formatter type="brief" usefile="false"/>
+        </junit>
+        <fail if="tests.failed">Some tests failed; see details above.</fail>
+    </target>
+
+    <target name="do-debug-test-single">
+        <fail unless="test.class">Must set test.class</fail>
+        <java fork="true" classname="junit.textui.TestRunner">
+            <jvmarg value="-Xdebug"/>
+            <jvmarg value="-Xnoagent"/>
+            <jvmarg value="-Djava.compiler=none"/>
+            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
+            <jvmarg value="-ea"/>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <arg line="${test.class}"/>
+        </java>
+    </target>
+
+    <!-- apisupport/project could calls this for the debug action. -->
+    <!-- You can also call it directly from the nbbuild/misc pseudoproject. -->
+    <target name="debug" depends="netbeans">
+        <ant dir="${nb_all}/nbbuild" target="tryme-debug"/>
+    </target>
+
+    <target name="debug-test-single" depends="init,test-init,test-build,do-debug-test-single"/>
+
+    <target name="debug-test-single-nb" depends="init,test-init,test-build" if="netbeans.user">
+        <fail unless="test.class">Must set test.class</fail>
+        <nbjpdastart transport="dt_socket" addressproperty="jpda.address" name="${test.class}">
+            <classpath>
+                <path refid="test.unit.run.cp"/>
+                <!-- Permit extra sources to be searched even if they are not in the actual CP. -->
+                <!-- Used e.g. from ant/test/unit since some tests use dynamic loading: -->
+                <pathelement path="${test.unit.debug.cp.extra}"/>
+            </classpath>
+        </nbjpdastart>
+        <antcall target="do-debug-test-single"/>
+    </target>
+
+    <target name="-pre-debug-fix" depends="init">
+        <fail unless="fix.class">Must set fix.class to e.g. org/netbeans/modules/foo/Bar</fail>
+        <property name="javac.includes" value="${fix.class}.java"/>
+    </target>
+    <target name="debug-fix-nb" if="netbeans.user" depends="init,-pre-debug-fix,compile-single">
+        <nbjpdareload>
+            <fileset includes="${fix.class}*.class" dir="${build.classes.dir}"/>
+        </nbjpdareload>
+    </target>
+
+    <!-- support either:
+         1. contents of help set in javahelp/ directory
+         2. contents of help set in a jar file in javahelp/module-name.jar
+    -->
+    <target name="javahelp-impl-jarred" if="javahelp.jarred">
+        <copy todir="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar.dir}">
+            <fileset dir="javahelp">
+                <include name="${module.jar.basename}"/>
+            </fileset>
+        </copy>
+    </target>
+
+    <target name="javahelp-impl-unjarred" unless="javahelp.jarred">
+        <mkdir dir="${build.javahelp.dir}/${javahelp.base}/${javahelp.search}"/>
+        <copy todir="${build.javahelp.dir}">
+            <fileset dir="javahelp" excludesfile="${nb_all}/nbbuild/module-scripts/standard-jar-excludes.txt"/>
+        </copy>
+        <jhindexer basedir="${build.javahelp.dir}/${javahelp.base}"
+                   db="${build.javahelp.dir}/${javahelp.base}/${javahelp.search}">
+            <classpath>
+                <fileset dir="${nb_all}/nbbuild/external">
+                    <include name="jhall*.jar"/>
+                </fileset>
+            </classpath>
+            <include name="**/*.html"/>
+            <include name="**/*.htm"/>
+            <exclude name="${javahelp.search}/"/>
+            <exclude name="${javahelp.excludes}"/>
+        </jhindexer>
+        <!-- Add ide.css for easy previewing only; usersguide provides it in distro: -->
+        <!-- (XXX maybe the viewer task can automagically do this...) -->
+        <mkdir dir="${build.javahelp.dir}/org/netbeans/modules/usersguide"/>
+        <copy tofile="${build.javahelp.dir}/org/netbeans/modules/usersguide/ide.css"
+              file="${nb_all}/usersguide/javahelp/org/netbeans/modules/usersguide/ide.css"
+              failonerror="false"/>
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar.dir}"/>
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar}" compress="true">
+            <fileset dir="${build.javahelp.dir}">
+                <!-- XXX this does not exclude the folder, unfortunately... -->
+                <exclude name="org/netbeans/modules/usersguide/ide.css"/>
+            </fileset>
+        </jar>
+    </target>
+
+    <target name="javahelp" depends="init" if="has.javahelp">
+        <antcall target="javahelp-impl-jarred"/>
+        <antcall target="javahelp-impl-unjarred"/>
+    </target>
+
+    <target name="check-javahelp" depends="javahelp" description="Validate helpset for various errors." if="has.javahelp">
+        <fail unless="javahelp.hs">Must set javahelp.hs property</fail>
+        <taskdef name="checkhelpsets" classname="org.netbeans.nbbuild.CheckHelpSets">
+            <classpath>
+                <pathelement location="${nb_all}/nbbuild/lib/nbantext.jar"/>
+                <fileset dir="${nb_all}/nbbuild/external">
+                    <include name="jhall*.jar"/>
+                </fileset>
+            </classpath>
+        </taskdef>
+        <checkhelpsets>
+            <!-- XXX need to check against real files (since there may be some processing) but should use a link mapper: -->
+            <fileset dir="${build.javahelp.dir}">
+                <include name="${javahelp.base}/${javahelp.hs}"/>
+            </fileset>
+        </checkhelpsets>
+    </target>
+
+    <!-- XXX need target to preview javahelp in a viewer like this: -->
+    <!--
+    HelpSet hs = new HelpSet(someClassLoader, f.toURI().toURL());
+    String title = hs.getTitle();
+    if (title == null) {
+        title = f.getAbsolutePath();
+    }
+    JDialog dlg = new JDialog(WindowManager.getDefault().getMainWindow(), title, false);
+    dlg.getContentPane().add(new JHelp(hs), BorderLayout.CENTER);
+    dlg.setSize(920, 660); // match min size of IDE's viewer
+    dlg.pack();
+    dlg.addWindowListener(this);
+    dlg.show();
+    synchronized (this) {
+        wait();
+    }
+    // ...
+    public synchronized void windowClosing(WindowEvent ev) {
+        notify();
+    }
+    -->
+
+    <target name="clean" depends="files-init">
+        <delete dir="${build.dir}"/>
+        <delete dir="javadoc"/>
+        <delete>
+            <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
+                <patternset refid="module.files"/>
+            </fileset>
+        </delete>
+        <delete file="${netbeans.dest.dir}/${cluster.dir}/update_tracking/${code.name.base.dashes}.xml"/>
+    </target>
+
+</project>

Added: TableLayout/trunk/nb4.0/nbbuild/module-scripts/standard-jar-excludes.txt
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/module-scripts/standard-jar-excludes.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/module-scripts/standard-jar-excludes.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,13 @@
+**/*.java
+**/*.jj
+**/*.jjt
+**/*.orig
+**/*.bak
+**/*.rej
+**/*.form
+**/*.jar.MAKEME
+**/filesystem.attributes
+**/.nbattrs
+**/.#*
+**/package.html
+**/doc-files/

Added: TableLayout/trunk/nb4.0/nbbuild/module-scripts/standard-nbm-license.txt
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/module-scripts/standard-nbm-license.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/module-scripts/standard-nbm-license.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,15 @@
+This module is part of NetBeans and is open-source.
+You can see http://www.netbeans.org/license.html for details.
+
+You may use the binary however you like. The source file license is:
+
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.

Added: TableLayout/trunk/nb4.0/nbbuild/moduledefs-tmp.properties
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/moduledefs-tmp.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/moduledefs-tmp.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1 @@
+modules=${cluster.nblayoutpack}
\ No newline at end of file

Added: TableLayout/trunk/nb4.0/nbbuild/modules.xml
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/modules.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/modules.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,769 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+This file maps directory names to the module names.
+It must contain all the modules (netbeans modules and
+your cluster modules).
+-->
+
+<modules>
+    <module>
+        <path>nblayoutpack/tablelayout</path>
+        <cnb>de.berlios.nblayoutpack.tablelayout</cnb>
+    </module>
+
+<!-- =================================== -->
+<!-- =====   Netbeans Modules   ======== -->
+<!-- =================================== -->
+    <module>
+        <path>ant</path>
+        <cnb>org.apache.tools.ant.module</cnb>
+    </module>
+    <module>
+        <path>ant/browsetask</path>
+        <cnb>org.netbeans.modules.ant.browsetask</cnb>
+    </module>
+    <module>
+        <path>ant/docs</path>
+        <cnb>org.apache.tools.ant.module.docs</cnb>
+    </module>
+    <module>
+        <path>ant/freeform</path>
+        <cnb>org.netbeans.modules.ant.freeform</cnb>
+    </module>
+    <module>
+        <path>ant/grammar</path>
+        <cnb>org.netbeans.modules.ant.grammar</cnb>
+    </module>
+    <module>
+        <path>ant/project</path>
+        <cnb>org.netbeans.modules.project.ant</cnb>
+    </module>
+    <module>
+        <path>apisupport</path>
+        <cnb>org.netbeans.modules.apisupport</cnb>
+    </module>
+    <module>
+        <path>apisupport/ant</path>
+        <cnb>org.netbeans.modules.apisupport.ant</cnb>
+    </module>
+    <module>
+        <path>apisupport/lite</path>
+        <cnb>org.netbeans.modules.apisupport.lite</cnb>
+    </module>
+    <module>
+        <path>apisupport/project</path>
+        <cnb>org.netbeans.modules.apisupport.project</cnb>
+    </module>
+    <module>
+        <path>autoupdate</path>
+        <cnb>org.netbeans.modules.autoupdate</cnb>
+    </module>
+    <module>
+        <path>beans</path>
+        <cnb>org.netbeans.modules.beans</cnb>
+    </module>
+    <module>
+        <path>classfile</path>
+        <cnb>org.netbeans.modules.classfile</cnb>
+    </module>
+    <module>
+        <path>clazz</path>
+        <cnb>org.netbeans.modules.clazz</cnb>
+    </module>
+    <module>
+        <path>contrib/docbook</path>
+        <cnb>org.netbeans.modules.docbook</cnb>
+    </module>
+    <module>
+        <path>contrib/mount</path>
+        <cnb>org.netbeans.modules.mount</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator</path>
+        <cnb>org.netbeans.modules.navigator</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator/javagator</path>
+        <cnb>org.netbeans.modules.javagator</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator/propagator</path>
+        <cnb>org.netbeans.modules.propagator</cnb>
+    </module>
+    <module>
+        <path>contrib/options</path>
+        <cnb>org.netbeans.modules.options</cnb>
+    </module>
+    <module>
+        <path>contrib/options/baseoptions</path>
+        <cnb>org.netbeans.modules.baseoptions</cnb>
+    </module>
+    <module>
+        <path>contrib/options/optionscore</path>
+        <cnb>org.netbeans.modules.optionscore</cnb>
+    </module>
+    <module>
+        <path>core</path>
+        <cnb>org.netbeans.core</cnb>
+        <jar>lib/core.jar</jar>
+    </module>
+    <module>
+        <path>core/compiler</path>
+        <cnb>org.netbeans.core.compiler</cnb>
+        <jar>modules/autoload/core-compiler.jar</jar>
+    </module>
+    <module>
+        <path>core/deprecated</path>
+        <cnb>org.netbeans.core.deprecated</cnb>
+        <jar>modules/autoload/core-deprecated.jar</jar>
+    </module>
+    <module>
+        <path>core/execution</path>
+        <cnb>org.netbeans.core.execution</cnb>
+    </module>
+    <module>
+        <path>core/ide</path>
+        <cnb>org.netbeans.core.ide</cnb>
+    </module>
+    <module>
+        <path>core/javahelp</path>
+        <cnb>org.netbeans.modules.javahelp</cnb>
+    </module>
+    <module>
+        <path>core/output</path>
+        <cnb>org.netbeans.core.output</cnb>
+    </module>
+    <module>
+        <path>core/output2</path>
+        <cnb>org.netbeans.core.output2</cnb>
+    </module>
+    <module>
+        <path>core/registry</path>
+        <cnb>org.netbeans.core.registry</cnb>
+    </module>
+    <module>
+        <path>core/settings</path>
+        <cnb>org.netbeans.modules.settings</cnb>
+    </module>
+    <module>
+        <path>core/swing/plaf</path>
+        <cnb>org.netbeans.swing.plaf</cnb>
+        <jar>lib/org-netbeans-swing-plaf.jar</jar>
+    </module>
+    <module>
+        <path>core/swing/tabcontrol</path>
+        <cnb>org.netbeans.swing.tabcontrol</cnb>
+    </module>
+    <module>
+        <path>core/term</path>
+        <cnb>org.netbeans.lib.terminalemulator</cnb>
+    </module>
+    <module>
+        <path>core/ui</path>
+        <cnb>org.netbeans.core.ui</cnb>
+    </module>
+    <module>
+        <path>core/windows</path>
+        <cnb>org.netbeans.core.windows</cnb>
+    </module>
+    <module>
+        <path>core/multiview</path>
+        <cnb>org.netbeans.core.multiview</cnb>
+    </module>
+    <module>
+        <path>core/favorites</path>
+        <cnb>org.netbeans.modules.favorites</cnb>
+    </module>
+    <module>
+        <path>db</path>
+        <cnb>org.netbeans.modules.db</cnb>
+    </module>
+    <module>
+        <path>debuggercore/oldapi</path>
+        <cnb>org.openide.debugger</cnb>
+    </module>
+    <module>
+        <path>debuggercore</path>
+        <cnb>org.netbeans.spi.debugger.ui</cnb>
+    </module>
+    <module>
+        <path>debuggercore/api</path>
+        <cnb>org.netbeans.api.debugger</cnb>
+    </module>
+    <module>
+        <path>debuggercore/viewmodel</path>
+        <cnb>org.netbeans.spi.viewmodel</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/api</path>
+        <cnb>org.netbeans.api.debugger.jpda</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/ant</path>
+        <cnb>org.netbeans.modules.debugger.jpda.ant</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda</path>
+        <cnb>org.netbeans.modules.debugger.jpda</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/ui</path>
+        <cnb>org.netbeans.modules.debugger.jpda.ui</cnb>
+    </module>
+    <module>
+        <path>diff</path>
+        <cnb>org.netbeans.modules.diff</cnb>
+    </module>
+    <module>
+        <path>editor</path>
+        <cnb>org.netbeans.modules.editor</cnb>
+    </module>
+    <module>
+        <path>editor/lib</path>
+        <cnb>org.netbeans.modules.editor.lib</cnb>
+    </module>
+    <module>
+        <path>editor/fold</path>
+        <cnb>org.netbeans.modules.editor.fold</cnb>
+    </module>
+    <module>
+        <path>editor/util</path>
+        <cnb>org.netbeans.modules.editor.util</cnb>
+    </module>
+    <module>
+        <path>extbrowser</path>
+        <cnb>org.netbeans.modules.extbrowser</cnb>
+    </module>
+    <module>
+        <path>form</path>
+        <cnb>org.netbeans.modules.form</cnb>
+    </module>
+    <module>
+        <path>html</path>
+        <cnb>org.netbeans.modules.html</cnb>
+    </module>
+    <module>
+        <path>httpserver</path>
+        <cnb>org.netbeans.modules.httpserver</cnb>
+    </module>
+    <module>
+        <path>httpserver/servletapi</path>
+        <cnb>org.netbeans.modules.servletapi</cnb>
+        <jar>modules/autoload/servletapi.jar</jar>
+    </module>
+    <module>
+        <path>i18n</path>
+        <cnb>org.netbeans.modules.i18n</cnb>
+    </module>
+    <module>
+        <path>i18n/form</path>
+        <cnb>org.netbeans.modules.i18n.form</cnb>
+    </module>
+    <module>
+        <path>ide/applemenu</path>
+        <cnb>org.netbeans.modules.applemenu</cnb>
+    </module>
+    <module>
+        <path>ide/updatecenters</path>
+        <cnb>org.netbeans.modules.updatecenters</cnb>
+    </module>
+    <module>
+        <path>ide/welcome</path>
+        <cnb>org.netbeans.modules.welcome</cnb>
+    </module>
+    <module>
+        <path>image</path>
+        <cnb>org.netbeans.modules.image</cnb>
+    </module>
+    <module>
+        <path>j2eeserver</path>
+        <cnb>org.netbeans.modules.j2eeserver</cnb>
+    </module>
+    <module>
+        <path>j2eeserver/j2eeapis</path>
+        <cnb>org.netbeans.modules.j2eeapis</cnb>
+        <jar>modules/autoload/j2eeapis.jar</jar>
+    </module>
+    <module>
+        <path>j2eeserver/ant</path>
+        <cnb>org.netbeans.modules.j2ee.ant</cnb>
+    </module>
+    <module>
+        <path>java</path>
+        <cnb>org.netbeans.modules.java</cnb>
+    </module>
+    <module>
+        <path>java/api</path>
+        <cnb>org.netbeans.api.java</cnb>
+    </module>
+    <module>
+        <path>java/j2seplatform</path>
+        <cnb>org.netbeans.modules.java.j2seplatform</cnb>
+    </module>
+    <module>
+        <path>java/j2seproject</path>
+        <cnb>org.netbeans.modules.java.j2seproject</cnb>
+    </module>
+    <module>
+        <path>java/javacore</path>
+        <cnb>org.netbeans.modules.javacore</cnb>
+    </module>
+    <module>
+        <path>java/javamodel</path>
+        <cnb>org.netbeans.jmi.javamodel</cnb>
+    </module>
+    <module>
+        <path>java/platform</path>
+        <cnb>org.netbeans.modules.java.platform</cnb>
+    </module>
+    <module>
+        <path>java/project</path>
+        <cnb>org.netbeans.modules.java.project</cnb>
+    </module>
+    <module>
+        <path>java/srcmodel</path>
+        <cnb>org.openide.src</cnb>
+    </module>
+    <module>
+        <path>javacvs/compat</path>
+        <cnb>org.netbeans.modules.cvsclient</cnb>
+        <jar>modules/javacvscompat.jar</jar>
+    </module>
+    <module>
+        <path>javacvs/libmodule</path>
+        <cnb>org.netbeans.lib.cvsclient</cnb>
+    </module>
+    <module>
+        <path>javadoc</path>
+        <cnb>org.netbeans.modules.javadoc</cnb>
+    </module>
+    <module>
+        <path>jellytools</path>
+        <cnb>org.netbeans.modules.jellytools</cnb>
+    </module>
+    <module>
+        <path>jemmy/idemodule</path>
+        <cnb>org.netbeans.modules.jemmy.idemodule</cnb>
+    </module>
+    <module>
+        <path>jemmysupport</path>
+        <cnb>org.netbeans.modules.jemmysupport</cnb>
+    </module>
+    <module>
+        <path>junit</path>
+        <cnb>org.netbeans.modules.junit</cnb>
+    </module>
+    <module>    
+        <path>latex/ant/antint</path>
+        <cnb>org.netbeans.modules.latex.antint</cnb>
+    </module>
+    <module>
+        <path>latex/auted</path>
+        <cnb>org.netbeans.modules.latex.auted</cnb>
+    </module>
+    <module>
+        <path>latex/bibtex</path>
+        <cnb>org.netbeans.modules.latex.bibtex</cnb>
+    </module>
+    <module>
+        <path>latex/branding</path>
+        <cnb>org.netbeans.modules.latex.branding</cnb>
+    </module>
+    <module>
+        <path>latex/core</path>
+        <cnb>org.netbeans.modules.latex</cnb>
+    </module>
+    <module>
+        <path>latex/editor</path>
+        <cnb>org.netbeans.modules.latex.editor</cnb>
+    </module>
+    <module>
+        <path>latex/guiproject</path>
+        <cnb>org.netbeans.modules.latex.guiproject</cnb>
+    </module>
+    <module>
+        <path>latex/loaders</path>
+        <cnb>org.netbeans.modules.latex.loaders</cnb>
+    </module>
+    <module>
+        <path>latex/manual</path>
+        <cnb>org.netbeans.modules.latex.help</cnb>
+    </module>
+    <module>
+        <path>latex/model</path>
+        <cnb>org.netbeans.modules.latex.model</cnb>
+    </module>
+    <module>
+        <path>latex/nexplorer</path>
+        <cnb>org.netbeans.modules.nexplorer</cnb>
+    </module>
+    <module>
+        <path>latex/project</path>
+        <cnb>org.netbeans.modules.latex.project</cnb>
+    </module>
+    <module>
+        <path>latex/ui</path>
+        <cnb>org.netbeans.modules.latex.ui</cnb>
+    </module>
+    <module>
+        <path>lexer</path>
+        <cnb>org.netbeans.modules.lexer</cnb>
+    </module>
+    <module>
+        <path>lexer/editorbridge</path>
+        <cnb>org.netbeans.modules.lexer.editorbridge</cnb>
+    </module>
+    <module>
+        <path>libs/commons_logging</path>
+        <cnb>org.netbeans.libs.commons_logging</cnb>
+    </module>
+    <module>
+        <path>libs/j2eeeditor</path>
+        <cnb>org.netbeans.libs.j2eeeditor</cnb>
+        <jar>modules/autoload/j2eeeditor.jar</jar>
+    </module>
+    <module>
+        <path>libs/jaxp</path>
+        <cnb>org.netbeans.libs.jaxp</cnb>
+        <jar>modules/autoload/jaxp.jar</jar>
+    </module>
+    <module>
+        <path>libs/regexp</path>
+        <cnb>org.netbeans.libs.regexp</cnb>
+        <jar>modules/autoload/nb-regexp-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>libs/xalan</path>
+        <cnb>org.netbeans.libs.xalan</cnb>
+        <jar>modules/autoload/nb-xalan-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>libs/xerces</path>
+        <cnb>org.netbeans.libs.xerces</cnb>
+        <jar>modules/autoload/nb-xerces-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>mdr/jmi</path>
+        <cnb>javax.jmi.reflect</cnb>
+    </module>
+    <module>
+        <path>mdr/nbjmiutils</path>
+        <cnb>org.netbeans.modules.jmiutils</cnb>
+    </module>
+    <module>
+        <path>mdr/mdrapi</path>
+        <cnb>org.netbeans.api.mdr</cnb>
+    </module>
+    <module>
+        <path>mdr/module</path>
+        <cnb>org.netbeans.modules.mdr</cnb>
+    </module>
+    <module>
+        <path>mdr/mof</path>
+        <cnb>javax.jmi.model</cnb>
+    </module>
+    <module>
+        <path>monitor</path>
+        <cnb>org.netbeans.modules.web.monitor</cnb>
+    </module>
+    <module>
+        <path>openide</path>
+        <cnb>org.openide</cnb>
+        <jar>lib/openide.jar</jar>
+    </module>
+    <module>
+        <path>openide/compiler</path>
+        <cnb>org.openide.compiler</cnb>
+    </module>
+    <module>
+        <path>openide/convertor</path>
+        <cnb>org.netbeans.modules.convertor</cnb>
+    </module>
+    <module>
+        <path>openide/deprecated</path>
+        <cnb>org.openide.deprecated</cnb>
+    </module>
+    <module>
+        <path>openide/execution</path>
+        <cnb>org.openide.execution</cnb>
+    </module>
+    <module>
+        <path>openide/execution/deprecated</path>
+        <cnb>org.openide.execution.deprecated</cnb>
+    </module>
+    <module>
+        <path>openide/io</path>
+        <cnb>org.openide.io</cnb>
+    </module>
+    <module>
+        <path>openide/loaders</path>
+        <cnb>org.openide.loaders</cnb>
+        <jar>lib/openide-loaders.jar</jar>
+    </module>
+    <module>
+        <path>openide/masterfs</path>
+        <cnb>org.netbeans.modules.masterfs</cnb>
+    </module>
+    <module>
+        <path>openide/registry</path>
+        <cnb>org.netbeans.modules.registry</cnb>
+    </module>
+     <module>
+        <path>openide/looks</path>
+        <cnb>org.netbeans.modules.looks</cnb>
+    </module>
+    <module>
+        <path>openidex</path>
+        <cnb>org.openidex.util</cnb>
+    </module>
+    <module>
+        <path>performance/insane</path>
+        <cnb>org.netbeans.modules.performance.insane</cnb>
+    </module>
+    <module>
+        <path>projects/libraries</path>
+        <cnb>org.netbeans.modules.project.libraries</cnb>
+    </module>
+    <module>
+        <path>projects/projectapi</path>
+        <cnb>org.netbeans.modules.projectapi</cnb>
+    </module>
+    <module>
+        <path>projects/projectui</path>
+        <cnb>org.netbeans.modules.projectui</cnb>
+    </module>
+        <module>
+        <path>projects/projectuiapi</path>
+        <cnb>org.netbeans.modules.projectuiapi</cnb>
+    </module>
+    <module>
+        <path>projects/queries</path>
+        <cnb>org.netbeans.modules.queries</cnb>
+    </module>
+    <module>
+        <path>properties</path>
+        <cnb>org.netbeans.modules.properties</cnb>
+        <jar>modules/properties.jar</jar>
+    </module>
+    <module>
+        <path>refactoring</path>
+        <cnb>org.netbeans.modules.refactoring</cnb>
+    </module>
+    <module>
+        <path>scripting</path>
+        <cnb>org.netbeans.modules.scripting</cnb>
+    </module>
+    <module>
+        <path>scripting/bsf</path>
+        <cnb>org.netbeans.modules.scripting.bsf</cnb>
+    </module>
+    <module>
+        <path>schema2beans/rt</path>
+        <cnb>org.netbeans.modules.schema2beans</cnb>
+    </module>
+    <module>
+        <path>sysprops</path>
+        <cnb>org.netbeans.modules.sysprops</cnb>
+    </module>
+    <module>
+        <path>tasklist/api</path>
+        <cnb>org.netbeans.tasklistapi</cnb>
+        <jar>modules/autoload/tasklist-api.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/core</path>
+        <cnb>org.netbeans.modules.tasklist.core</cnb>
+        <jar>modules/autoload/tasklist-core.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/docscan</path>
+        <cnb>org.netbeans.modules.tasklist.docscan</cnb>
+        <jar>modules/tasklist-docscan.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/pmd</path>
+        <cnb>org.netbeans.modules.tasklist.pmd</cnb>
+        <jar>modules/eager/tasklist-pmd.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/suggestions</path>
+        <cnb>org.netbeans.modules.suggestions_framework</cnb>
+        <jar>modules/autoload/suggestions-framework.jar</jar>
+    </module>
+    <module>
+        <path>text</path>
+        <cnb>org.netbeans.modules.text</cnb>
+    </module>
+    <module>
+        <path>tomcatint/bundledtomcat</path>
+        <cnb>org.netbeans.modules.web.tomcat.bundled</cnb>
+        <jar>modules/tomcat40-bundled.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat40</path>
+        <cnb>org.netbeans.modules.web.tomcat.tomcat40</cnb>
+        <jar>modules/tomcat40.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat40autocompile</path>
+        <cnb>org.netbeans.modules.web.tomcat.tomcat40.autocompile</cnb>
+        <jar>modules/eager/tomcat40-autocompile.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat5</path>
+        <cnb>org.netbeans.modules.tomcat5</cnb>
+    </module>
+    <module>
+        <path>tomcatint/tomcat5/bundled</path>
+        <cnb>org.netbeans.modules.tomcat5.bundled</cnb>
+        <jar>modules/eager/tomcat5-bundled.jar</jar>
+    </module>
+    <module>
+        <path>ide/welcome</path>
+        <cnb>org.netbeans.modules.welcome</cnb>
+        <jar>modules/welcome.jar</jar>
+    </module>
+    <module>
+        <path>usersguide</path>
+        <cnb>org.netbeans.modules.usersguide</cnb>
+    </module>
+    <module>
+        <path>usersguide/j2seexamples</path>
+        <cnb>org.netbeans.modules.java.examples</cnb>
+    </module>
+    <module>
+        <path>utilities</path>
+        <cnb>org.netbeans.modules.utilities</cnb>
+    </module>
+    <module>
+        <path>utilities/project</path>
+        <cnb>org.netbeans.modules.utilities.project</cnb>
+    </module>
+    <module>
+        <path>utilities/group</path>
+        <cnb>org.netbeans.modules.group</cnb>
+    </module>
+    <module>
+        <path>vcscore</path>
+        <cnb>org.netbeans.modules.vcscore</cnb>
+    </module>
+    <module>
+        <path>vcscvs/compat</path>
+        <cnb>org.netbeans.modules.vcs.cmdline.compat</cnb>
+        <jar>modules/cvscompat.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric</path>
+        <cnb>org.netbeans.modules.vcs.advanced</cnb>
+        <jar>modules/vcsgen.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/cvsprofiles</path>
+        <cnb>org.netbeans.modules.vcs.profiles.cvsprofiles</cnb>
+        <jar>modules/cvs-profile.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/pvcs</path>
+        <cnb>org.netbeans.modules.vcs.profiles.pvcs</cnb>
+        <jar>modules/pvcs-profile.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/vss</path>
+        <cnb>org.netbeans.modules.vcs.profiles.vss</cnb>
+        <jar>modules/vss-profile.jar</jar>
+    </module>
+    <module>
+        <path>web/core</path>
+        <cnb>org.netbeans.modules.web.core</cnb>
+    </module>
+    <module>
+        <path>web/ddapi</path>
+        <cnb>org.netbeans.api.web.dd</cnb>
+    </module>
+    <module>
+        <path>web/examples</path>
+        <cnb>org.netbeans.modules.web.examples</cnb>
+    </module>
+    <module>
+        <path>web/jspdebug</path>
+        <cnb>org.netbeans.modules.web.debug</cnb>
+    </module>
+    <module>
+        <path>web/jspparser</path>
+        <cnb>org.netbeans.modules.web.jspparser</cnb>
+    </module>
+    <module>
+        <path>web/jspsyntax</path>
+        <cnb>org.netbeans.modules.web.core.syntax</cnb>
+    </module>
+    <module>
+        <path>web/project</path>
+        <cnb>org.netbeans.modules.web.project</cnb>
+    </module>
+    <module>
+        <path>web/webapi</path>
+        <cnb>org.netbeans.api.web.webmodule</cnb>
+    </module>
+    <module>
+        <path>web/servletapi23</path>
+        <cnb>org.netbeans.modules.servletapi23</cnb>
+        <jar>modules/autoload/servletapi23.jar</jar>
+    </module>
+    <module>
+        <path>web/servletapi24</path>
+        <cnb>org.netbeans.modules.servletapi24</cnb>
+        <jar>modules/autoload/servletapi24.jar</jar>
+    </module>
+    <module>
+        <path>web/taglibed</path>
+        <cnb>org.netbeans.modules.web.taglibed</cnb>
+        <jar>modules/taglibed.jar</jar>
+    </module>
+    <module>
+        <path>xml/api</path>
+        <cnb>org.netbeans.api.xml</cnb>
+    </module>
+    <module>
+        <path>xml/catalog</path>
+        <cnb>org.netbeans.modules.xml.catalog</cnb>
+        <jar>modules/xml-catalog.jar</jar>
+    </module>
+    <module>
+        <path>xml/core</path>
+        <cnb>org.netbeans.modules.xml.core</cnb>
+    </module>
+    <module>
+        <path>xml/css</path>
+        <cnb>org.netbeans.modules.css</cnb>
+        <jar>modules/css.jar</jar>
+    </module>
+    <module>
+        <path>xml/schema</path>
+        <cnb>org.netbeans.modules.xml.schema</cnb>
+        <jar>modules/xml-schema.jar</jar>
+    </module>
+    <module>
+        <path>xml/tax</path>
+        <cnb>org.netbeans.modules.xml.tax</cnb>
+        <jar>modules/autoload/xml-tax.jar</jar>
+    </module>
+    <module>
+        <path>xml/text-edit</path>
+        <cnb>org.netbeans.modules.xml.text</cnb>
+        <jar>modules/xml-text-edit.jar</jar>
+    </module>
+    <module>
+        <path>xml/tools</path>
+        <cnb>org.netbeans.modules.xml.tools</cnb>
+        <jar>modules/xml-tools.jar</jar>
+    </module>
+    <module>
+        <path>xml/xsl</path>
+        <cnb>org.netbeans.modules.xsl</cnb>
+        <jar>modules/xsl.jar</jar>
+    </module>
+    <module>
+        <path>xtest/nbjunit</path>
+        <cnb>org.netbeans.modules.nbjunit</cnb>
+    </module>
+</modules>

Added: TableLayout/trunk/nb4.0/nbbuild/user.build.properties
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/user.build.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/user.build.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,53 @@
+#                 Sun Public License Notice
+#
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+#
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+# the name of your cluster
+clustername=nblayoutpack
+
+# The location of your binary netbeans installation.  Modules will be installed
+# into this location.
+netbeans.dest.dir=T:/netbeans/4.0/
+
+# netbeans.user directory to use when launching netbeans
+# with "ant tryme"
+test.user.dir=testuserdir
+
+# the list of clusters that your cluster depends on
+# (used for the sanity-test and tryme targets)
+
+# ...for just the platform
+#test.cluster.list=${netbeans.dest.dir}/${clustername}
+
+# ...for the whole IDE
+test.cluster.list=${netbeans.dest.dir}/${clustername}${path.separator}${netbeans.dest.dir}/extra${path.separator}${netbeans.dest.dir}/ide4${path.separator}${netbeans.dest.dir}/nb4.0
+
+# Options to pass to NetBeans when starting it with "ant tryme":
+tryme.args=
+
+# Additional parameters to pass to NetBeans as it is started in sanity-check mode.
+# Normally you ought not change this.
+# However those running automated builds may wish to use:
+# -J-DErrorManager.minimum=17
+# (please don't ask why it is 17)
+# which will suppress a variety of mostly harmless deprecation warnings.
+sanitystart.args.additional=
+
+# Path to JDK to be used for tryme and sanity-check targets
+#jdkhome=
+
+# Additional parameters to pass to NetBeans as it is started in tryme mode.
+tryme.args=
+
+# If a port is specified, the tryme target will start netbeans in debug mode.
+#debug.port=8765
+
+# Uncomment to pause netbeans at the start of a debugging session
+#debug.pause=y

Added: TableLayout/trunk/nb4.0/nbbuild/user.cluster.properties
===================================================================
--- TableLayout/trunk/nb4.0/nbbuild/user.cluster.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nbbuild/user.cluster.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,10 @@
+# declare a name for your cluster
+# (should match the name in user.build.properties)
+user.cluster=cluster.nblayoutpack
+
+# the directory under ${netbeans.home} containing your cluster
+cluster.nblayoutpack.dir=nblayoutpack
+
+# the list of modules (the names of the directories containing 
+# the modules, rooted at nbbuild/..)
+cluster.nblayoutpack=nblayoutpack

Added: TableLayout/trunk/nb4.0/nblayoutpack/build.xml
===================================================================
--- TableLayout/trunk/nb4.0/nblayoutpack/build.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nblayoutpack/build.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="nblayoutpack-tablelayout" default="netbeans" basedir=".">
+
+    <property file="../../build.properties"/>
+    <tstamp>
+      <format property="buildnumbertimestamp" pattern="yyyyMMdd.HHmm"/>
+    </tstamp>
+    <property name="impl.version" value="${spec.version}.${buildnumbertimestamp}"/>
+
+    <property name="license.file" location="../../license.txt"/>
+
+    <import file="../nbbuild/module-scripts/projectized.xml"/>
+
+    <!-- inherited targets -->
+    <!--
+    compile: compiles source code
+    jar: creates module jar
+    netbeans: installs module to $NETBEANS_HOME
+    nbm: makes NBM file in build/
+    javadoc: generates javadocs
+    test: runs junit tests
+    clean: does the obvious
+    -->
+
+    <!-- 
+    If you're adding compile dependencies on 3rd party jars 
+    (jgraph, jdom, etc.), uncomment this section ...
+
+    Identifies all the files to be considered part of this module when deployed 
+    -->
+    <target name="files-init" depends="basic-init">
+        <echo>${module.jar}</echo>
+        <echo>${nb.system.dir}/Modules/${code.name.base.dashes}.xml</echo>
+        <echo>${nb.modules.dir}/ext/nblayoutpack/TableLayout-3.2.jar</echo>
+        <patternset id="module.files">
+            <include name="${module.jar}"/>
+            <include name="${nb.system.dir}/Modules/${code.name.base.dashes}.xml"/>
+            <include name="${nb.modules.dir}/ext/nblayoutpack/TableLayout-3.2.jar"/>
+        </patternset>
+    </target>
+
+    <!-- 
+    netbeans-extra is a hook provided to plug in file copying. 
+    If you're adding compile dependencies on 3rd party jars 
+    (jgraph, jdom, etc.), uncomment this section ...
+    This example assumes that jgraph.jar and jdom.jar are in snipe/lib/
+    -->
+         
+    <target name="netbeans-extra" depends="init">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.modules.dir}/ext/nblayoutpack"/>
+        <copy todir="${netbeans.dest.dir}/${cluster.dir}/${nb.modules.dir}/ext/nblayoutpack">
+          <fileset dir="../../lib">
+            <include name="TableLayout-3.2.jar"/>
+          </fileset>
+        </copy>
+    </target>
+
+
+</project>

Added: TableLayout/trunk/nb4.0/nblayoutpack/manifest.mf
===================================================================
--- TableLayout/trunk/nb4.0/nblayoutpack/manifest.mf	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nblayoutpack/manifest.mf	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,7 @@
+Manifest-Version: 1.0
+OpenIDE-Module: de.berlios.nblayoutpack.tablelayout
+OpenIDE-Module-Localizing-Bundle: de/berlios/nblayoutpack/tablelayout/Bundle.properties
+OpenIDE-Module-Layer: de/berlios/nblayoutpack/tablelayout/nb4.0/layer.xml
+OpenIDE-Module-Install: de/berlios/nblayoutpack/tablelayout/TableLayoutModule.class
+OpenIDE-Module-Module-Dependencies: org.netbeans.modules.form/2 = 200412081800
+Class-Path: ext/nblayoutpack/TableLayout-3.2.jar

Added: TableLayout/trunk/nb4.0/nblayoutpack/nbproject/project.properties
===================================================================
--- TableLayout/trunk/nb4.0/nblayoutpack/nbproject/project.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nblayoutpack/nbproject/project.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,27 @@
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+
+cp.extra=../../lib/TableLayout-3.2.jar
+
+src.dir=../../src
+
+build.package.compress=true
+build.package.index=true
+build.compiler.debug=false
+
+nbm.homepage=http://nblayoutpack.berlios.de
+nbm.distribution=http://nblayoutpack.berlios.de
+
+nbm=${name}-nb4.0-${impl.version}.nbm
+
+build.classes.dir=../../../output/classes
+build.dir=../../../output/nb4.0

Added: TableLayout/trunk/nb4.0/nblayoutpack/nbproject/project.xml
===================================================================
--- TableLayout/trunk/nb4.0/nblayoutpack/nbproject/project.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.0/nblayoutpack/nbproject/project.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://www.netbeans.org/ns/project/1">
+    <type>org.netbeans.modules.apisupport.project</type>
+    <configuration>
+        <data xmlns="http://www.netbeans.org/ns/nb-module-project/1">
+            <code-name-base>de.berlios.nblayoutpack.tablelayout</code-name-base>
+            <path>TableLayout/trunk/nb4.0</path>
+            <module-dependencies>
+                <dependency>
+                    <code-name-base>org.openide</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>1</release-version>
+                        <specification-version>4.39</specification-version>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.openide.loaders</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency/>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.netbeans.modules.form</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>2</release-version>
+                    </run-dependency>
+                </dependency>
+            </module-dependencies>
+            <public-packages/>
+        </data>
+    </configuration>
+</project>

Added: TableLayout/trunk/nb4.1/nbbuild/CHANGES.txt
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/CHANGES.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/CHANGES.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,25 @@
+version 3
+======================
+1. removed apisupport modules that were added in version 2.  The patches have since been merged into
+the official sources.
+
+2. updated netbeans module definitions
+
+3. merged changes to projectized.xml
+
+
+version 2
+======================
+1. added modules for working with harness from within netbeans:
+    utilities/group
+    apisupport
+    apisupport/lite
+    apisupport/project
+
+Note: the first 3 are basically just copies from the netbeans source tree, and are only included here because they don't appear on the Update Center.  apisupport/project is modified to work with this harness instead of the setup in the official netbeans source tree.  apisupport/ant should be obtained from the update center.
+
+2. removed dependency on NETBEANS_HOME environment variable.  It's now specified as the netbeans.dest.dir property in user.build.properties (or site.build.properties)
+
+3. removed bootstrap target.  I now just include the nbantext.jar generated by the current netbeans source tree.
+
+4. fixed a few minor bugs

Added: TableLayout/trunk/nb4.1/nbbuild/README.txt
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/README.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/README.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,69 @@
+Netbeans Cluster Build Harness
+Author: Rich Unger
+Version: 3
+
+
+Getting Started:
+
+1. Set netbeans.dest.dir in user.build.properties to the location of your binary netbeans installation
+2. Give your cluster a name in user.build.properties
+3. Define the contents of your cluster in user.cluster.properties
+4. Add entries for your modules in modules.xml
+
+Shouldn't need to edit anything in folders underneath nbbuild/
+
+Use the snipe module as a model for your own modules.
+
+===========================================
+What is a cluster?
+
+Starting with Netbeans 4.0, the file layout of a Netbeans installation has changed to:
+
+NETBEANS_HOME
+  bin
+  conf
+  etc
+  cluster_one
+    modules
+    config
+    update_tracking
+  cluster_two
+    modules
+    config
+    update_tracking
+  cluster_three
+    modules
+    config
+    update_tracking
+
+Using this layout, a cluster can be packaged by itself, as a (xpi | rpm | deb | pkg | zip | tar.gz) and be installed separately from the Netbeans platform.
+
+A cluster has NO runtime significance.  A module doesn't care if it happens to live in cluster_one, cluster_two, or cluster_three, even if modules it depends on are in another cluster.  A cluster is merely a packaging convenience.
+
+When netbeans is launched, it needs to be told which clusters to activate.  The bin/netbeans.exe launcher, by default, activates the 'platform4', 'ide4', 'nb4.0', and 'extra' clusters.  Others can be specified in conf/netbeans.conf.
+
+This only works if you have the full IDE, though.  If you're building an app on the platform, you would distribute (with your cluster) a separate launch script or compiled executable which would call platform4/lib/nbexec.exe and pass it a list of clusters.
+
+===========================================
+
+About the included module:
+
+snipe: This is a real bare-bones module that edits a fictional file type.  It's meant to show how to construct a module and perform several common integration tasks.  I attempted to include as many helpful comments in the code as possible, so it would be useful as a tutorial.
+
+===========================================
+
+Using the harness from within NetBeans:
+
+You need the "Netbeans Module Projects" module, from the Update Center.  Alternatively you can build this module from the netbeans source tree.  It is located there under apisupport/project.  It has a few other dependencies, so the best way to build it is to run "ant all-apisupport" from the nbbuild/ directory in the netbeans tree.
+
+===========================================
+
+Unfinished Business:
+
+1. I'd like to add a target for generating launchers (i.e. ${netbeans.dest.dir}/bin/mycluster.exe, and analogous unix/OSX shell script).  However, as of right now I can't figure out how to pass absolute paths to the platform launcher in platform4/lib/nbexec (the --clusters argument requires absolute paths to the clusters).  The tryme and sanity-test tasks get around this by using the ${netbeans.dest.dir} variable that these scripts require to be set.  However, that should only be a requirement for a development box.  It shouldn't need to be required of your users.
+
+2. The next phase is to create a real UI/functional spec to support both the Sun netbeans developers and the external platform users, and evolve this harness to support that spec.  Discussion is currently happening on the nbdev list.
+
+===========================================
+
+Suggestions are welcome.  Questions to dev at openide.netbeans.org please.

Added: TableLayout/trunk/nb4.1/nbbuild/build.xml
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/build.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/build.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="nbbuild" default="all" basedir=".">
+  <import file="cluster-scripts/cluster.xml"/>
+
+  <target name="all" depends="netbeans-all" description="Build all the nbms in the cluster."/>
+
+  <!-- inherited targets -->
+  <!--
+  compile-all: compiles all your modules
+  jar-all: creates module jars for all your modules
+  netbeans-all: installs all your modules to $NETBEANS_HOME
+  nbm-all: makes NBM files of all your modules, puts them in nbbuild/nbms/
+  javadoc-all: generates javadocs for all your modules
+  test-all: runs junit tests for all your modules:
+  clean-all: runs 'clean' in all your modules
+  clean: same as clean-all
+  real-clean: cleans up everything in nbbuild/, as well as clean-all
+  cluster-zip: Zips up the whole cluster (after building with netbeans-all) into nbbuild/build/
+  sanity-check: Builds all modules, then starts netbeans for a brief period, then shuts down
+                (Useful for automated builds)
+  tryme: Builds all modules, then starts netbeans, optionally in debug mode
+  tryme-debg: forced debug mode with the tryme target
+  -->
+
+  <!-- Add your own stuff here ... -->
+
+</project>

Added: TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster-description.properties
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster-description.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster-description.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,40 @@
+nb.cluster.platform.pkg.filename=platform4
+nb.cluster.platform.extra.pkg.filename=platform4
+nb.cluster.platform.pkg.name=NetBeans 4 platform cluster
+nb.cluster.platform.pkg.version=4.0
+nb.cluster.platform.pkg.desc=NetBeans platform technology
+nb.cluster.platform.pkg.vendor=Sun Microsystems, Inc.
+nb.cluster.platform.pkg.email=
+
+nb.cluster.platform.pkg.svr4.pkg=SUNWnb4pf
+nb.cluster.platform.pkg.svr4.maxinst=1000
+nb.cluster.platform.pkg.svr4.sunw_pkgvers=1.0
+nb.cluster.platform.pkg.svr4.hotline=Please contact your local service provider
+nb.cluster.platform.pkg.svr4.classes=none
+nb.cluster.platform.pkg.svr4.basedir=/opt/netbeans
+nb.cluster.platform.pkg.svr4.pkginst=platform4
+nb.cluster.platform.pkg.svr4.category=application
+
+nb.cluster.platform.pkg.rpm.name=nb-platform
+nb.cluster.platform.pkg.rpm.requires=javahelp > 1.4
+nb.cluster.platform.pkg.rpm.group=Applications
+nb.cluster.platform.pkg.rpm.url=http://www.sun.com/
+nb.cluster.platform.pkg.rpm.copyright=commercial
+nb.cluster.platform.pkg.rpm.map=/opt/sun/netbeans
+nb.cluster.platform.pkg.rpm.prefix=/opt
+
+nb.cluster.nb.pkg.filename=nb4.0
+nb.cluster.ide.extra.pkg.filename=ide4-extra
+nb.cluster.ide.pkg.filename=ide4
+nb.pkg.idesupport.pkg.filename=idesupport4
+nb.pkg.ideextensions.pkg.filename=ideextensions4
+nb.pkg.javarefactoring.pkg.filename=javarefactoring4
+nb.pkg.webapp.pkg.filename=webapp4
+nb.pkg.ide.pkg.filename=ide4
+nb.pkg.nb.pkg.filename=nb4
+nb.features.basic.pkg.filename=features-basic4
+nb.features.desktop.pkg.filename=features-desktop4
+nb.features.ideplugin.pkg.filename=features-ideplugin4
+nb.features.web.pkg.filename=features-web4
+nb.pkg.testtools.pkg.filename=testtools4
+nb.pkg.mdr.pkg.filename=mdr4

Added: TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.properties
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,223 @@
+clusters.prefix=libnb
+
+local.config.tasklist4barracuda=\
+        tasklist/api, \
+        tasklist/core, \
+        tasklist/suggestions, \
+        tasklist/docscan
+
+local.config.tasklist4barracuda_auc=\
+        tasklist/copyright, \
+        tasklist/suggestions/ui, \
+        tasklist/usertasks, \
+        tasklist/javaparser, \
+        tasklist/javadoc, \
+        tasklist/compiler, \
+        tasklist/pmd, \
+        tasklist/checkstyle, \
+        tasklist/editor, \
+        tasklist/bugs
+
+local.config.libs=libs/xerces, \
+        libs/j2eeeditor, \
+        libs/commons_logging
+
+local.config.xml=xml/api, \
+        xml/tax, \
+        xml/core, \
+        xml/catalog, \
+        xml/tools, \
+        xml/text-edit, \
+        xml/css, \
+        xml/xsl, \
+        xml/schema
+
+local.config.vcsprofiles=vcsgeneric/profiles/cvsprofiles, \
+        vcsgeneric/profiles/pvcs, \
+        vcsgeneric/profiles/vss
+
+clusters.extra.list=nb.pkg.testtools,\
+        nb.cluster.platform.extra, \
+	nb.cluster.ide.extra
+
+#List of clusters in standard build
+nb.clusters.list=nb.cluster.platform, \
+        nb.cluster.ide, \
+        nb.cluster.nb
+
+clusters.list= \
+        ${nb.clusters.list}, \
+        ${clusters.extra.list}, \
+        ${user.cluster}
+
+nb.cluster.platform.extra.dir=platform4
+nb.cluster.platform.extra.depends=nb.cluster.platform
+nb.cluster.platform.extra=openide/util, \
+        openide/actions, \
+        openide/awt, \
+        openide/dialogs, \
+        openide/nodes, \
+        openide/explorer, \
+        openide/fs, \
+        openide/text, \
+        openide/windows
+
+nb.cluster.platform.dir=platform4
+nb.cluster.platform.depends=
+nb.cluster.platform=core, \
+        openide, \
+        openide/loaders, \
+        openide/io, \
+        openide/execution, \
+        openide/masterfs, \
+        core/bootstrap, \
+        core/output2, \
+        core/settings, \
+        core/javahelp, \
+        core/execution, \
+        core/ui, \
+        core/swing/plaf, \
+        core/swing/tabcontrol, \
+        core/windows, \
+        core/multiview, \
+        autoupdate, \
+        projects/queries
+
+nb.pkg.idesupport=\
+        debuggercore/api, \
+        debuggercore/viewmodel, \
+        debuggercore, \
+        diff, \
+        editor, \
+        editor/lib, \
+        editor/fold, \
+        editor/util, \
+        vcscore, \
+        javacvs/libmodule, \
+        ${local.config.vcsprofiles}, \
+        ${local.config.libs}, \
+        projects/projectapi, \
+        projects/projectuiapi, \
+        projects/projectui, \
+        projects/libraries, \
+        core/ide, \
+        core/favorites, \
+        vcsgeneric
+
+nb.pkg.ideextensions=\
+        properties, \
+        utilities, \
+        utilities/project, \
+        i18n, \
+        i18n/form, \
+        image, \
+        html, \
+        usersguide, \
+	usersguide/j2seexamples, \
+        openidex, \
+        ${local.config.tasklist4barracuda}, \
+        ${local.config.xml}
+
+nb.pkg.javarefactoring=\
+        classfile, \
+        clazz, \
+        java/srcmodel, \
+        java/api, \
+        java/javacore, \
+        java/javamodel, \
+        java, \
+        java/j2seproject, \
+        java/j2seplatform, \
+        java/parser, \
+        java/platform, \
+        java/project, \
+        refactoring, \
+        junit, \
+        javadoc, \
+        beans, \
+        debuggerjpda/api, \
+        debuggerjpda, \
+        debuggerjpda/ui, \
+        debuggerjpda/ant, \
+        ant, \
+        ant/project, \
+        ant/freeform, \
+        ant/grammar, \
+        ant/browsetask, \
+        apisupport/ant, \
+        apisupport/project, \
+        form
+
+nb.pkg.webapp=\
+        j2eeserver, \
+        j2eeserver/j2eeapis, \
+        j2eeserver/ant, \
+        schema2beans/rt, \
+        tomcatint/tomcat5, \
+        monitor, \
+        httpserver, \
+        httpserver/servletapi, \
+        db, \
+        extbrowser, \
+        web/servletapi23, \
+        web/servletapi24, \
+        web/core, \
+        web/project, \
+        web/webapi, \
+        web/ddapi, \
+        web/jspdebug, \
+        web/jspparser, \
+        web/jspsyntax, \
+        web/jstl11
+
+
+nb.pkg.ide=
+
+# special cluster for NetBeans IDE only extensions
+nb.pkg.nb=\
+        ide/branding, \
+        ide/updatecenters, \
+        ide/welcome, \
+        ide/launcher/upgrade, \
+        ide/applemenu, \
+        tomcatint/tomcat5/bundled, \
+        web/examples
+
+nb.pkg.testtools.dir=testtools
+nb.pkg.testtools.depends=nb.cluster.platform
+nb.pkg.testtools=jellytools, \
+        jemmy/idemodule, \
+        jemmysupport, \
+        xtest, \
+        xtest/nbjunit
+
+nb.cluster.ide.dir=ide4
+nb.cluster.ide.depends=nb.cluster.platform,nb.cluster.ide.extra
+nb.cluster.ide= \
+        ${nb.pkg.idesupport},\
+        ${nb.pkg.ideextensions},\
+        ${nb.pkg.javarefactoring},\
+        ${nb.pkg.webapp},\
+        ${nb.pkg.mdr}
+
+nb.cluster.ide.extra.depends=nb.cluster.platform
+nb.cluster.ide.extra.dir=extra
+nb.cluster.ide.extra= \
+        schema2beans/dev
+
+
+nb.cluster.nb.dir=nb4.0
+nb.cluster.nb.depends=nb.cluster.ide
+nb.cluster.nb= \
+        ${nb.pkg.ide},\
+        ${nb.pkg.nb}
+
+nb.pkg.mdr=mdr,\
+               mdr/module,\
+               mdr/nbjmiutils,\
+               mdr/jmiutils,\
+               mdr/mdrapi,\
+               mdr/jmi,\
+               mdr/mof, \
+               mdr/lib
+nb.pkg.mdr.dir=ide4

Added: TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.xml
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/cluster-scripts/cluster.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,230 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="cluster" default="tryme" basedir="..">
+  <import file="../module-scripts/default.xml"/>
+
+  <target name="check-for-jdk-1.4">
+    <available property="have-jdk-1.4" classname="java.lang.CharSequence"/>
+  </target>
+  <target name="assure-jdk-1.4" depends="check-for-jdk-1.4" unless="have-jdk-1.4">
+    <fail>You need JDK 1.4 or higher to build NetBeans.</fail>
+  </target>
+
+  <target name="init-module-list" depends="assure-jdk-1.4">
+    <!-- Define modules. -->
+    <!-- The following is not permitted by Ant: -->
+    <!-- <property name="modules" value="${config.modules.${clustername}}"/> -->
+    <!-- So this is a little trick to do it anyway. -->
+    <echo file="moduledefs-tmp.properties">modules=$${cluster.${clustername}}</echo>
+    <property file="moduledefs-tmp.properties"/>
+    <property name="allmodules" value="${modules}"/>
+  </target>
+
+  <target name="set-buildnumber" unless="buildnumber">
+    <tstamp>
+    	<format property="buildnumber" pattern="yyMMdd"/>
+    </tstamp>
+  </target>
+
+  <target name="init" depends="default.init,init-module-list,set-buildnumber">
+    <taskdef name="for-each" classname="org.netbeans.nbbuild.ForEach" classpath="lib/nbantext.jar"/>
+
+    <!-- Overridable. Note: need not necessarily be a number at all): -->
+    <property name="buildnum" value="dev-${buildnumber}"/>
+    <property name="sanitystart.args" value="-J-Dnetbeans.close=true ${sanitystart.args.additional}"/>
+  </target>
+
+  <macrodef name="resolve">
+    <attribute name="name"/>
+    <attribute name="property"/>
+    <sequential>
+      <property name="@{name}" value="${@{property}}"/>
+    </sequential>
+  </macrodef>
+
+  <target name="cluster-zip" depends="netbeans-all">
+    <taskdef name="setclusterpatternset" classname="org.netbeans.nbbuild.SetClusterPatternSet" classpath="lib/nbantext.jar"/>
+    <taskdef name="setcluster" classname="org.netbeans.nbbuild.SetCluster" classpath="lib/nbantext.jar"/>
+    <loadproperties srcFile="user.cluster.properties" />
+    <loadproperties srcFile="cluster-scripts/cluster.properties" />
+    <loadproperties srcFile="cluster-scripts/cluster-description.properties" />
+    <loadproperties srcFile="module-scripts/directories.properties" />
+    <setcluster cluster="${user.cluster}" name="one.cluster.dir" />
+    
+    <setclusterpatternset cluster="${user.cluster}" name="${user.cluster}.files" trackingpath="${netbeans.dest.dir}" clusterdir="${one.cluster.dir}"/>
+    
+    <property name="zipcluster.file" value="${user.cluster}"/>
+    <mkdir dir="${netbeans.build.dir}/zips"/>
+    <zip destfile="${netbeans.build.dir}/zips/${zipcluster.file}-${buildnum}.zip" update="true" duplicate="preserve">
+      <zipfileset dir="${netbeans.dest.dir}" filemode="755">
+        <include name="${one.cluster.dir}/${nb.bin.dir}/nbexec"/>
+      </zipfileset>
+      <zipfileset dir="${netbeans.dest.dir}">
+        <patternset refID="${user.cluster}.files"/>
+      </zipfileset>
+    </zip>
+  </target>
+
+  <target name="sanity-check" depends="testuserdir-delete,sanity-start" description="Test whether the build can start up without problems."/>
+  <target name="testuserdir-delete" depends="init">
+    <delete dir="${test.user.dir}"/>
+  </target>
+  <target name="sanity-start" depends="netbeans-all">
+    <mkdir dir="${test.user.dir}"/>
+    <echo>Starting the IDE as a sanity check...</echo>
+    <!-- XXX better would be to scan start log for stacktraces and just show those; -->
+    <!-- possibly after filtering for duplicates or something like this. -->
+    <!-- Timeout is ten minutes; should be enough for valid start, while preventing -->
+    <!-- a deadlock from hanging an automated build: -->
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes" timeout="600000">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${sanitystart.args}"/>
+    </exec>
+    <exec os="Linux SunOS Solaris Mac OS X" dir="." executable="sh" failonerror="yes" timeout="600000">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${sanitystart.args}"/>
+    </exec>
+    <echo>Finished starting the IDE, pay attention to any reported errors.</echo>
+  </target>
+
+  <target name="check-for-build"  >
+    <available property="have-build" file="${netbeans.dest.dir}/bin/netbeans"/>
+  </target>
+
+  <target name="tryme" depends="netbeans-all,tryme-debug,tryme-run"
+          description="Try running the IDE interactively (build it first if needed).
+It is possible to use -Ddebug.port=3234 -Ddebug.pause=y to start the system in debug mode" 
+   />
+          
+          
+  <target name="tryme-run" depends="init" unless="debug.port" >
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+    <exec os="Linux SunOS Solaris" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+    <exec os="Mac OS X" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="/Library/Java/Home"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+    </exec>
+  </target>
+  
+  <target name="tryme-debug" depends="init" if="debug.port" >
+    <property name="debug.pause" value="n" />
+  
+    <exec os="Windows NT Windows 95 Windows 98 Windows 2000 Windows XP" executable="${netbeans.dest.dir}/platform4/lib/nbexec.exe" failonerror="yes">
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+      <arg line="-J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,suspend=${debug.pause},server=y,address=${debug.port}" />
+    </exec>
+    <exec os="Linux SunOS Solaris Mac OS X" dir="." executable="sh" failonerror="yes">
+      <arg value="${netbeans.dest.dir}/platform4/lib/nbexec"/>
+      <arg value="--jdkhome"/>
+      <arg file="${jdkhome}"/>
+      <arg value="--userdir"/>
+      <arg file="${test.user.dir}"/>
+      <arg value="--clusters"/>
+      <arg file="${test.cluster.list}"/>
+      <arg line="${tryme.args}"/>
+      <arg line="-J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,suspend=${debug.pause},server=y,address=${debug.port}" />
+    </exec>
+  </target>
+
+  <target name="real-clean" depends="clean,testuserdir-delete"
+          description="Clean everything possible.">
+    <echo message="Cleaning old builds..."/>
+
+    <!-- This step must be last: -->
+    <echo message="Cleaning NetBeans-specific Ant extensions..."/>
+    <delete file="moduledefs-tmp.properties"/>
+    <delete dir="nbms" failonerror="false"/>
+  </target>
+  
+  <target name="clean" depends="clean-all"
+          description="Run 'clean' on all the modules in the cluster.">
+    <echo message="Run `ant real-clean' if desired."/>
+  </target>
+
+
+  <!-- Delegating targets -->
+
+  <target name="compile-all" depends="init">
+      <for-each startdir=".." target="compile" locations="${allmodules}"/>
+  </target>
+
+  <target name="jar-all" depends="init">
+      <for-each startdir=".." target="jar" locations="${allmodules}"/>
+  </target>
+
+  <target name="netbeans-all" depends="init">
+      <for-each startdir=".." target="netbeans" locations="${allmodules}"/>
+  </target>
+
+  <target name="javadoc-all" depends="init">
+      <for-each startdir=".." target="javadoc" locations="${allmodules}"/>
+  </target>
+
+  <target name="test-all" depends="init">
+      <for-each startdir=".." target="test" locations="${allmodules}"/>
+  </target>
+
+  <target name="clean-all" depends="init">
+      <for-each startdir=".." target="clean" locations="${allmodules}"/>
+  </target>
+
+  <!-- Puts all the nbm's in nbbuild/nbms/ -->
+  <target name="nbm-all" depends="init">
+      <mkdir dir="nbms"/>
+      <property name="nbm.target.dir" location="nbms"/>
+      <for-each startdir=".." target="nbm" locations="${allmodules}"/>
+  </target>
+
+</project>

Added: TableLayout/trunk/nb4.1/nbbuild/lib/nbantext.jar
===================================================================
(Binary files differ)


Property changes on: TableLayout/trunk/nb4.1/nbbuild/lib/nbantext.jar
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: TableLayout/trunk/nb4.1/nbbuild/misc/addSerialVer
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/misc/addSerialVer	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/misc/addSerialVer	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,109 @@
+#
+#
+#
+if test "$#" -eq "0"; then
+  LIST=*
+else
+  LIST=$*
+fi
+
+# runs serialver and waits 3s for it to finish
+# then it kills it
+runSerialVer () {
+  # computes the serializable value and throws a signal
+  java -ms8m sun.tools.serialver.SerialVer $1 2>/dev/null&
+  SVPID=$!
+  
+  # sleep 3s and inform parent that time is up
+  sleep 3 && kill $SVPID 2>/dev/null &
+  SLPID=$!
+
+  # waits till the serial version number is computed
+  wait $SVPID
+
+  # kill timer
+  kill $SLPID 2>/dev/null
+}
+
+
+# compute serial version UID for a class,
+# if not serializable empty string is returned
+# otherwise string for initialization is given back
+computeUID () {
+  RES=`runSerialVer $1`
+  expr "$RES" : "$1: *\(.*;\)" 
+}
+
+AlphaNum="[A-Za-z\.0-9/]"
+
+
+find $LIST -name "*.class" | while read ClassFile; do
+  echo Working on $ClassFile
+
+  # 0 if not inner class 
+  InnerClass=`expr index $ClassFile \$`
+
+  Class=`tr "/" "." <<KONEC
+$ClassFile
+KONEC
+`
+  Class=`basename $Class ".class"`
+  # name of the class (if innner than name of the inner class)
+  ClassName=`tr "$." "//" <<KONEC
+$Class
+KONEC
+`
+  ClassName=`basename $ClassName`
+
+
+  # test if it is not anonymous innerclass
+  if test "$ClassName" -ge "0" 2>/dev/null; then
+    echo Anonymous inner class $Class
+  else
+    JavaFile=`expr $ClassFile : "\($AlphaNum*\).*\.class"`
+    JavaFile=$JavaFile".java"
+  
+    # compute UID for Class
+    uid=`computeUID $Class`
+    if test -n "$uid"; then
+      # there should be the UID
+      # try to see if it is there
+      if ! grep "$uid" $JavaFile >/dev/null; then
+        STOP=""
+        if ! test "0" -eq "$InnerClass"; then
+          # if inner class, test wheter it is static
+          if ! grep "static.*class *$ClassName" $JavaFile >/dev/null; then
+            echo Is not static inner class
+            STOP=true
+          fi
+        fi
+
+        if test -z "$STOP"; then
+          # we have to add it
+          echo Need to add the serialVersionUID
+          sed -e "/ class *$ClassName/a\\
+          /** generated Serialized Version UID */\\
+          $uid" <$JavaFile >/tmp/keke
+          # compare files
+          if diff -q /tmp/keke $JavaFile >/dev/null; then
+            # are same
+            echo Error files /tmp/keke and $JavaFile are same
+            grep  "$ClassName" $JavaFile
+            exit 1
+          fi
+          # overrides the original
+          mv /tmp/keke $JavaFile
+          # updated file to list of files
+          echo $JavaFile >>updated
+          echo Successfully Updated.
+        fi  
+      else
+        echo serialVersionUID already there
+      fi
+    else
+      echo Is not serializable
+    fi
+  fi
+  
+  rm $ClassFile
+done

Added: TableLayout/trunk/nb4.1/nbbuild/misc/bundlecheck.pl
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/misc/bundlecheck.pl	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/misc/bundlecheck.pl	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,114 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+require 5.005;
+use File::Find;
+
+my @files = ();
+my $quiet = 0;
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-q] file | directory ...\n";
+}
+
+if ($ARGV[0] eq "-q") {
+    $quiet = 1;
+    shift @ARGV;
+}
+
+foreach my $name (@ARGV) {
+    if (-f $name) {
+	push @files, $name;
+    } elsif (-d $name) {
+        find(sub {
+                 if (-f && m,\.java$, || -f && m,\bBundle.properties$,) {
+                     push @files, $File::Find::name;
+                 }
+             },
+             $name);
+    }
+}
+
+#
+# read Bundle.properties
+#
+
+ at props = ();
+
+foreach $f (@files) {
+    next if $f !~ m,\bBundle.properties$,i;
+
+    print STDERR "*** $f\n" unless $quiet;
+    
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    @lines = split /\r\n|\n|\r/, $all;
+    for ($lineno = 0; $lineno <= $#lines; $lineno++) {
+	$_ = $lines[$lineno];
+        
+        next if /^\s*#/;
+        next if /^\s*$/;
+
+        if (m,^([^=]+)=(.*)$,) {
+            $k = $1;
+            $k =~ s,\\ , ,g;
+            push @props, { key => $k,
+                           file => $f,
+                           lineno => $lineno + 1,
+                           line => $_,
+                           used => 0
+                         };
+        }
+
+        while (m,\\$, && $lineno <= $#lines) {
+            $lineno++;
+            $_ = $lines[$lineno];
+        }
+    }
+}
+
+#
+# go through *.java
+#
+  
+  
+foreach $f (@files) {
+    next if $f =~ m,\bBundle.properties$,i;
+
+    print STDERR "*** $f\n" unless $quiet;
+    
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    foreach $p (@props) {
+        next if $p->{used} > 0;
+        $pat = $p->{key};
+        $pat = quotemeta $pat;
+        $p->{used}++ if $all =~ m,\"$pat\",;
+    }
+}
+
+foreach $p (@props) {
+    next if $p->{line} =~ m!/!; # probably a filename localization, not in Java code
+    next if $p->{line} =~ m!^OpenIDE-Module-!; # manifest localization, not in Java code
+    print "$p->{file}:$p->{lineno}: $p->{line}\n" if $p->{used} == 0;
+}

Added: TableLayout/trunk/nb4.1/nbbuild/misc/bundlewc.pl
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/misc/bundlewc.pl	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/misc/bundlewc.pl	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,52 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+$totalwc = 0;
+$totallc = 0;
+
+printf "%7s %5s File\n", "Strings", "Words";
+printf "%7s %5s %s\n", "-------", "-----", "-" x 40;
+
+foreach $f (@ARGV) {
+    open FH, "< $f" or die;
+    {
+        local $/ = undef;
+        $all = <FH>;
+    }
+    close FH;
+
+    @lines = split /\r|\n/, $all;
+    
+    $wc = 0;
+    $lc = 0;
+    
+    foreach (@lines) {
+        next if /^\s*#/;
+        next if /^\s*$/;
+
+        if (/^[^=]+=(.*)$/) {
+            $_ = $1;
+            s/^\s*//;
+            s/\s*$//;
+            @words = split /\s+/;
+            $wc += @words ;
+            $lc++;
+        }
+    }
+    
+    printf "%7d %5d %s\n", $lc, $wc, $f;
+    $totalwc += $wc;
+    $totallc += $lc;
+}
+
+printf "\n%7d %5d Total\n", $totallc, $totalwc;

Added: TableLayout/trunk/nb4.1/nbbuild/misc/i18ncheck.pl
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/misc/i18ncheck.pl	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/misc/i18ncheck.pl	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,201 @@
+#!/usr/bin/env perl
+# -*- perl -*-
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2000 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+#
+# i18ncheck.pl - checks java source for internationalizable strings
+#                not 100% foolproof !!
+#
+#
+require 5.005;
+use File::Find;
+
+my $fixmode = 0;
+my @files = ();
+my @modifiedfiles = ();
+my @lines = ();
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-f] file | directory ...\n";
+}
+
+if ($ARGV[0] eq "-f") {
+    $fixmode = 1;
+    shift @ARGV;
+}
+
+if ($#ARGV < 0) {
+    die "usage: $0 [-f] file | directory ...\n";
+}
+
+$SIG{'INT'} = sub {
+    print_summary() if $fixmode;
+    exit 255;
+};
+  
+foreach my $name (@ARGV) {
+    if (-f $name) {
+	push @files, $name;
+    } elsif (-d $name) {
+        find(sub {
+                 if (-f && m,\.java$,) {
+                     push @files, $File::Find::name;
+                 }
+             },
+             $name);
+    }
+}
+
+foreach my $name (@files) {
+    checkfile($name);
+}
+
+print_summary() if $fixmode;
+exit 0;
+
+#
+# subroutines
+#
+
+sub checkfile {
+    my $fname = shift;
+    @lines = ();
+
+    if (! open(FH, "< $fname")) {
+	warn "cannot open file '$fname': $!";
+	return;
+    }
+    @lines = <FH>;
+    close FH;
+    
+    my $lineno = 1;
+    my $modified = 0;
+    
+LOOP:
+    while ($lineno <= $#lines) {
+	$_ = $lines[$lineno - 1];
+        
+        if (m,/\*,,) {
+            while ($lineno <= $#lines) {
+                $_ = $lines[$lineno - 1];
+                if (! m,\*/,) {
+                    $lineno++;
+                    next;
+                } else {
+                    last;
+                }
+            }
+        }
+
+        # skip line comment
+        if (m,(^ *//.*$),) {
+            $_ = $`;
+        }
+        
+        if (checkline($_)) {
+            if ($fixmode) {
+                print "$fname:$lineno:\n";
+                if (fixline($fname, $lineno)) {
+                    $modified = 1;
+                }
+            } else {
+                print "$fname:$lineno: $_";
+            }
+        }
+
+        $lineno++;
+    }
+
+
+    if ($fixmode && $modified) {
+        savefile($fname);
+        push @modifiedfiles, $fname;
+    }
+}
+
+sub fixline {
+    my $fname = shift;
+    my $lineno = shift;
+    my $answer;
+    
+    print "\n";
+    print "   " . $lines[$lineno - 4] if $lineno >= 4;
+    print "   " . $lines[$lineno - 3] if $lineno >= 3;
+    print "   " . $lines[$lineno - 2] if $lineno >= 2;
+    print " =>" . $lines[$lineno - 1] if $lineno >= 1;
+    print "   " . $lines[$lineno] if $lineno <= $#lines;;
+    print "   " . $lines[$lineno + 1] if $lineno + 1 <= $#lines;;
+    print "   " . $lines[$lineno + 2] if $lineno + 2 <= $#lines;;
+    print "\n";
+    
+    do {
+        print "** [M]ark this line with NOI18N -- [S]kip [m]: ";
+        flush;
+        $answer = <STDIN>;
+        chomp $answer;
+    } while (uc($answer) ne "M" && uc($answer) ne "S" && $answer ne "");
+
+    if (uc($answer) eq "S") {
+        return 0;
+    } else {
+        $lines[$lineno - 1] =~ s,\s*$,,;
+        $lines[$lineno - 1] = $lines[$lineno - 1] . " // NOI18N\n";
+        return 1;
+    }
+    
+}
+
+sub savefile {
+    my $fname = shift;
+
+    if (!rename $fname, "$fname.bak") {
+        warn "** Cannot create backup for $fname, changes have not been saved\n";
+        return;
+    }
+
+    if (! open(FH, "> $fname")) {
+        warn "** Cannot save changes in $fname\n";
+    }
+
+    print FH @lines;
+    close FH;
+}
+
+sub checkline {
+    shift;
+
+    return (! m,NOI18N,
+            && ! m,getString\s*\(,
+            && ! m,System\. ?err\. ?print,
+            && ! m,getProperty,
+            && ! m,getBoolean,
+            && ! m,NbBundle\. ?get(Message|LocalizedFile),
+            && ! m,\. ?log\s*\(,
+            && ! m,new HelpCtx\s*\(,
+            && ! m,new PropertyDescriptor\s*\(,
+            && ! m,setIconBase\s*\(,
+            && ! m,loadImage\s*\(,
+            && ! m,getResource(AsStream)?\s*\(,
+            && m,".+", 
+           ); 
+}
+
+sub print_summary {
+    if ($#modifiedfiles < 0) {
+        print "\n\n** No file has been modified\n";
+    } else {
+        print "\n\n** The following files have been modified:\n\n";
+        foreach my $fname (@modifiedfiles) {
+            print "      $fname\n";
+        }
+    }
+}

Added: TableLayout/trunk/nb4.1/nbbuild/module-scripts/default-properties.xml
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/module-scripts/default-properties.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/module-scripts/default-properties.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?> 
+<project name="default-properties" default="netbeans" basedir=".">
+  <dirname property="nb_all" file="${ant.file.default-properties}/../.."/>
+
+  <!-- 
+  Read user's settings 
+  Note: user/site combination is so that you can check site.build.properties
+  into your source tree for everyone to use, and user.build.properties can contain
+  properties specific to your personal setup.
+  -->
+  <property file="${nb_all}/nbbuild/user.build.properties"/>
+  <property file="${nb_all}/nbbuild/site.build.properties"/>
+
+  <property name="homepage.base" value="netbeans.org"/>
+  <property name="dist.base" value="www.netbeans.org/download/nbms/41"/>
+  <property name="license.file" location="${nb_all}/nbbuild/module-scripts/standard-nbm-license.txt"/>
+  <property name="nbm_alias" value="nb_ide"/>
+  <property name="build.sysclasspath" value="ignore"/>
+
+  <property name="user.clusters.list.file" location="${nb_all}/nbbuild/user.cluster.properties"/>
+  <property name="clusters.list.file" location="${nb_all}/nbbuild/cluster-scripts/cluster.properties"/>
+  <property name="netbeans.build.dir" location="${nb_all}/nbbuild/build"/>
+  <property name="moduleCluster.file" location="${netbeans.dest.dir}/moduleCluster.properties"/>
+  <property name="directoryList.file" location="${nb_all}/nbbuild/module-scripts/directories.properties"/>
+  <property name="modulesxml.file" location="${nb_all}/nbbuild/modules.xml"/>
+
+  <property file="${user.clusters.list.file}"/>
+  <property file="${clusters.list.file}"/>
+  <property file="${moduleCluster.file}"/>
+  <property file="${directoryList.file}"/>
+
+</project>

Added: TableLayout/trunk/nb4.1/nbbuild/module-scripts/default.xml
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/module-scripts/default.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/module-scripts/default.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,75 @@
+<project name="default" default="init" basedir=".">
+  <import file="default-properties.xml"/>
+
+  <target name="init-tasks" unless="tasks-already-set">
+    <taskdef name="jhindexer"
+         classname="org.netbeans.nbbuild.JHIndexer"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="makenbm"
+         classname="org.netbeans.nbbuild.MakeNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="genlist"
+         classname="org.netbeans.nbbuild.MakeListOfNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="setcluster"
+         classname="org.netbeans.nbbuild.SetCluster"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="getmodulename"
+         classname="org.netbeans.nbbuild.GetModuleName"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="createmodulexml"
+         classname="org.netbeans.nbbuild.CreateModuleXML"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locjar"
+         classname="org.netbeans.nbbuild.LocalizedJar"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locjhindexer"
+         classname="org.netbeans.nbbuild.LocJHIndexer"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <taskdef name="locmakenbm"
+         classname="org.netbeans.nbbuild.LocMakeNBM"
+         classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+    <property name="tasks-already-set" value="true"/>
+  </target>
+  
+  <target name="init" depends="init-tasks,setup-jdkhome">
+    <!-- Gets the module name -->
+    <getmodulename name="module.name" root="${nb_all}"/>
+    
+    <property name="cluster.dir.fallback" value="extra" />
+    <setcluster name="cluster.dir" module="${module.name}" list="${clusters.list}" defaultLocation="${cluster.dir.fallback}"/>
+
+    <!-- Creating the output directory -->
+    <mkdir dir="${netbeans.dest.dir}/${cluster.dir}"/>
+
+    <!-- Writing the module's cluster to property file -->
+    <propertyfile file="${moduleCluster.file}">
+      <entry  key="${module.name}.dir" value="$${netbeans.dest.dir}/${cluster.dir}"/>
+    </propertyfile>
+  </target>
+
+  <target name="setup-jdkhome-1">
+    <!-- Note: user-configured -Djavahome=... will always override this: -->
+    <property name="javahome" location="${java.home}"/>
+    <available property="javahome-valid" file="${javahome}/lib/tools.jar"/>
+    <available classname="com.apple.eawt.Application" property="is-mac"/>
+  </target>
+
+  <target name="setup-jdkhome-2" depends="setup-jdkhome-1" if="javahome-valid">
+    <property name="jdkhome" value="${javahome}"/>
+    <property name="jdkhome-valid" value="true"/>
+  </target>
+
+  <target name="setup-jdkhome-3" depends="setup-jdkhome-1" unless="javahome-valid">
+    <property name="jdkhome" location="${javahome}/.."/>
+    <available property="jdkhome-valid" file="${jdkhome}/lib/tools.jar"/>
+  </target>
+
+  <target name="setup-jdkhome-4" depends="setup-jdkhome-1" if="is-mac">
+      <property name="jdkhome-valid" value="${java.home}/../Classes/classes.jar"/> 
+  </target>
+
+  <target name="setup-jdkhome" depends="setup-jdkhome-2,setup-jdkhome-3,setup-jdkhome-4" unless="jdkhome-valid">
+    <fail message="No tools.jar found in ${javahome}! Set -Djavahome=... as needed."/>
+  </target>
+</project>

Added: TableLayout/trunk/nb4.1/nbbuild/module-scripts/directories.properties
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/module-scripts/directories.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/module-scripts/directories.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,16 @@
+nb.beans.dir=beans
+nb.bin.dir=lib
+nb.docs.dir=docs
+nb.lib.dir=core
+nb.lib/ext.dir=lib
+nb.lib/patches.dir=${nb.lib.dir}/patches
+nb.modules.dir=modules
+nb.modules/autoload.dir=${nb.modules.dir}/autoload
+nb.modules/autoload/docs.dir=${nb.modules/autoload.dir}/docs
+nb.modules/bin.dir=${nb.modules.dir}/lib
+nb.modules/docs.dir=${nb.modules.dir}/docs
+nb.modules/eager.dir=${nb.modules.dir}/eager
+nb.modules/patches.dir=${nb.modules.dir}/patches
+nb.sources.dir=sources
+nb.system.dir=config
+nb.update_tracking.dir=update_tracking

Added: TableLayout/trunk/nb4.1/nbbuild/module-scripts/projectized.xml
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/module-scripts/projectized.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/module-scripts/projectized.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,476 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+<project name="projectized" default="init" basedir=".">
+
+    <!-- XXX supply descriptions for the appropriate targets -->
+    <!-- XXX prefix internal targets with '-' (and grep all module scripts which override or use these targets and update them to match) -->
+    <!-- XXX should use namespaces for NB in-VM tasks from ant/browsetask and debuggerjpda/ant and apisupport/ant -->
+
+    <import file="../module-scripts/default.xml"/>
+
+    <taskdef name="parseprojectxml" classname="org.netbeans.nbbuild.ParseProjectXml" classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+
+    <target name="init" depends="basic-init,files-init,build-init"/>
+
+    <target name="basic-init" depends="default.init">
+        <!-- Synch the following property loads with NbModuleProject.makeEvalDefs: -->
+        <property file="nbproject/private/private.properties"/>
+        <property file="nbproject/project.properties"/>
+        <!-- Do not try to set module.classpath here, in particular: -->
+        <!-- during a clean, the ${foo/bar.dir} properties may not be set. -->
+        <parseprojectxml project="." modulesxml="${modulesxml.file}" codenamebasedashesproperty="code.name.base.dashes" codenamebaseslashesproperty="code.name.base.slashes"/>
+        <property name="module.jar.dir" value="${nb.modules.dir}"/>
+        <property name="module.jar.basename" value="${code.name.base.dashes}.jar"/>
+        <property name="module.jar" value="${module.jar.dir}/${module.jar.basename}"/>
+        <condition property="has.javahelp">
+            <and>
+                <available file="javahelp"/>
+                <!-- Special hack for core: -->
+                <not><available file="javahelp/manifest.mf"/></not>
+            </and>
+        </condition>
+        <condition property="javahelp.jarred">
+            <and>
+                <available file="javahelp/${module.jar.basename}"/>
+            </and>
+        </condition>
+        <property name="javahelp.jar.dir" value="${nb.modules/docs.dir}"/>
+        <property name="javahelp.jar.basename" value="${code.name.base.dashes}.jar"/>
+        <property name="javahelp.jar" value="${javahelp.jar.dir}/${javahelp.jar.basename}"/>
+    </target>
+
+    <target name="files-init" depends="basic-init">
+        <patternset id="module.files">
+            <include name="${module.jar}"/>
+            <include name="${javahelp.jar}" if="has.javahelp"/>
+            <include name="${nb.system.dir}/Modules/${code.name.base.dashes}.xml"/>
+        </patternset>
+    </target>
+
+    <target name="build-init" depends="basic-init">
+        <parseprojectxml project="." modulesxml="${modulesxml.file}" publicpackagesproperty="public.packages" javadocpackagesproperty="module.javadoc.packages" idedependenciesproperty="ide.dependencies" moduledependenciesproperty="module.dependencies" moduleclasspathproperty="module.classpath" domainproperty="nbm.domain"/>
+        <condition property="is.regular">
+            <not>
+                <or>
+                    <isset property="is.autoload"/>
+                    <isset property="is.eager"/>
+                    <equals arg1="${module.jar.dir}" arg2="${nb.lib.dir}"/>
+                </or>
+            </not>
+        </condition>
+        <property name="nbm" value="${code.name.base.dashes}.nbm"/>
+        <property name="build.compiler.debug" value="true"/>
+        <property name="build.compiler.deprecation" value="true"/>
+        <property name="build.sysclasspath" value="ignore"/>
+        <property name="build.compiler.optimize" value="off"/>
+        <property name="build.package.compress" value="false"/>
+        <property name="build.package.index" value="false"/>
+        <property name="manifest.mf" location="manifest.mf"/>
+        <property name="src.dir" location="src"/>
+        <property name="build.classes.dir" location="build/classes"/>
+        <property name="nbm.homepage" value="http://${nbm.domain}.${homepage.base}/"/>
+        <property name="nbm.module.author" value=""/>
+        <property name="nbm.release.date" value=""/>
+        <property name="nbm.needs.restart" value="false"/>
+        <path id="cp">
+            <pathelement path="${module.classpath}"/>
+            <pathelement path="${cp.extra}"/>
+        </path>
+        <property name="build.javahelp.dir" location="build/javahelp"/>
+        <property name="javahelp.base" value="${code.name.base.slashes}/docs"/>
+        <property name="javahelp.search" value="JavaHelpSearch"/>
+        <property name="javahelp.excludes" value="credits.html"/>
+    </target>
+
+    <target name="test-preinit" depends="init"/>
+    <target name="test-init" depends="init,test-preinit">
+        <property name="test.unit.src.dir" location="test/unit/src"/>
+        <property name="build.test.unit.classes.dir" location="build/test/unit/classes"/>
+        <property name="build.test.unit.results.dir" location="build/test/unit/results"/>
+        <property name="test.filter.trace" value="true"/>
+        <path id="test.unit.cp">
+            <path refid="cp"/>
+            <pathelement location="${netbeans.dest.dir}/${cluster.dir}/${module.jar}"/>
+            <!-- XXX check if these files exist, and if not, run xtest/build.xml -->
+            <pathelement location="${nb_all}/xtest/lib/junit.jar"/>
+            <pathelement location="${nb_all}/xtest/lib/nbjunit.jar"/>
+            <pathelement path="${test.unit.cp.extra}"/>
+        </path>
+        <path id="test.unit.run.cp">
+            <path refid="test.unit.cp"/>
+            <pathelement location="${build.test.unit.classes.dir}"/>
+            <pathelement path="${test.unit.run.cp.extra}"/>
+        </path>
+        <propertyset id="test.unit.properties">
+            <propertyref prefix="test-unit-sys-prop."/>
+            <mapper type="glob" from="test-unit-sys-prop.*" to="*"/>
+        </propertyset>
+    </target>
+
+    <target name="compile" depends="init">
+        <mkdir dir="${build.classes.dir}"/>
+        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="${build.compiler.debug}" deprecation="${build.compiler.deprecation}" optimize="${build.compiler.optimize}" source="1.4" includeantruntime="false">
+            <classpath refid="cp"/>
+        </javac>
+        <copy todir="${build.classes.dir}">
+            <fileset dir="${src.dir}" excludesfile="${nb_all}/nbbuild/module-scripts/standard-jar-excludes.txt"/>
+        </copy>
+    </target>
+
+    <target name="compile-single" depends="init">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <mkdir dir="${build.classes.dir}"/>
+        <!-- XXX consider forcing debug=true and deprecation=true -->
+        <!-- XXX consider deleting the .class file first to force a rebuild -->
+        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
+               debug="${build.compiler.debug}" deprecation="${build.compiler.deprecation}"
+               source="1.4" includes="${javac.includes}" optimize="${build.compiler.optimize}" includeantruntime="false">
+            <classpath refid="cp"/>
+        </javac>
+    </target>
+
+    <target name="jar-prep" depends="init">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${module.jar.dir}"/>
+        <tstamp>
+            <format property="buildnumber" pattern="yyMMdd" timezone="UTC"/>
+        </tstamp>
+    </target>
+
+    <target name="jar-no-module-deps" unless="module.dependencies">
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}">
+            <!-- XXX it seems that using <manifest> forces the JAR to be recreated each time -->
+            <!-- (presumably due to the variable OIDE-M-I-V) -->
+            <!-- so might have to use e.g. <manifest> task (created in build/ somewhere)? -->
+            <!-- Cf: http://issues.apache.org/bugzilla/show_bug.cgi?id=29085 -->
+            <manifest>
+                <attribute name="OpenIDE-Module-Public-Packages" value="${public.packages}"/>
+                <attribute name="OpenIDE-Module-IDE-Dependencies" value="${ide.dependencies}"/>
+                <!-- XXX make this conditional so can use OIDE-M-B-V instead -->
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${build.classes.dir}"/>
+        </jar>
+    </target>
+
+    <target name="jar-with-module-deps" if="module.dependencies">
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}">
+            <manifest>
+                <attribute name="OpenIDE-Module-Public-Packages" value="${public.packages}"/>
+                <attribute name="OpenIDE-Module-IDE-Dependencies" value="${ide.dependencies}"/>
+                <attribute name="OpenIDE-Module-Module-Dependencies" value="${module.dependencies}"/>
+                <!-- XXX make this conditional so can use OIDE-M-B-V instead -->
+                <attribute name="OpenIDE-Module-Specification-Version" value="${spec.version}"/>
+                <attribute name="OpenIDE-Module-Implementation-Version" value="${impl.version}"/>
+            </manifest>
+            <fileset dir="${build.classes.dir}"/>
+        </jar>
+    </target>
+
+    <!-- XXX need to actually use 4 targets, I guess, depending on whether or not ${ide.dependencies} is defined: -->
+    <target name="jar" depends="init,compile,jar-prep,jar-no-module-deps,jar-with-module-deps"/>
+    
+    <target name="reload" depends="init,jar">
+        <fail unless="netbeans.user">Reloading modules works only inside the NetBeans IDE</fail>
+        <nbinstaller module="${netbeans.dest.dir}/${cluster.dir}/${module.jar}" action="reinstall"/>
+    </target>
+
+    <!-- Can insert extra stuff in here, like release, etc.: -->
+    <target name="netbeans-extra"/>
+
+    <target name="module-xml-regular" if="is.regular">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <enabled dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </enabled>
+        </createmodulexml>
+    </target>
+
+    <target name="module-xml-autoload" if="is.autoload">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <autoload dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </autoload>
+        </createmodulexml>
+    </target>
+
+    <target name="module-xml-eager" if="is.eager">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules"/>
+        <createmodulexml xmldir="${netbeans.dest.dir}/${cluster.dir}/${nb.system.dir}/Modules">
+            <eager dir="${netbeans.dest.dir}/${cluster.dir}">
+                <include name="${module.jar}"/>
+            </eager>
+        </createmodulexml>
+    </target>
+
+    <target name="netbeans" depends="init,jar,netbeans-extra,module-xml-regular,module-xml-autoload,module-xml-eager,javahelp">
+        <genlist outputfiledir="${netbeans.dest.dir}/${cluster.dir}" module="${module.jar}">
+            <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
+                <patternset refid="module.files"/>
+            </fileset>
+        </genlist>
+    </target>
+    
+    <target name="nbm" depends="init,netbeans" description="Build NBM archive.">
+        <mkdir dir="${build.dir}"/>
+        <makenbm file="${build.dir}/${nbm}"
+                 productdir="${netbeans.dest.dir}/${cluster.dir}"
+                 module="${module.jar}"
+                 homepage="${nbm.homepage}"
+                 distribution="${nbm.distribution}"
+                 needsrestart="${nbm.needs.restart}"
+                 releasedate="${nbm.release.date}"
+                 moduleauthor="${nbm.module.author}">
+            <license file="${license.file}"/>
+            <signature keystore="${keystore}" storepass="${storepass}" alias="${nbm_alias}"/>
+        </makenbm>
+    </target>
+
+    <target name="javadoc" depends="init">
+        <fail unless="javadoc.name">Must set javadoc.name</fail>
+        <fail unless="javadoc.title">Must set javadoc.title</fail>
+        <!-- This should become an import at some point, perhaps: -->
+        <ant dir="${nb_all}/nbbuild/javadoctools" antfile="template.xml" target="javadoc">
+            <property name="javadoc.base" location="."/>
+            <property name="javadoc.packages" value="${module.javadoc.packages}"/>
+            <property name="javadoc.classpath" refid="cp"/>
+            <property name="javadoc.manifest" location="${manifest.mf}"/>
+        </ant>
+    </target>
+
+    <target name="javadoc-nb" depends="init,javadoc" if="netbeans.user">
+        <nbbrowse file="javadoc/${javadoc.name}/index.html"/>
+    </target>
+    
+    <target name="arch" depends="init" description="Process an arch.xml, creating it if it does not yet exist.">
+        <fail unless="javadoc.arch">You must define e.g. javadoc.arch=$${basedir}/arch.xml in project.properties</fail>
+        <property name="arch.output.html" location="${java.io.tmpdir}/arch.html"/>
+        <property name="arch.generate" value="true"/>
+        <taskdef name="arch" classname="org.netbeans.nbbuild.Arch" classpath="${nb_all}/nbbuild/lib/nbantext.jar"/>
+        <arch answers="${javadoc.arch}" output="${arch.output.html}"/>
+    </target>
+    
+    <target name="arch-nb" depends="init,arch" if="netbeans.user" description="Process an arch.xml, creating it if it does not yet exist, and display the result.">
+        <nbbrowse file="${arch.output.html}"/>
+    </target>
+        
+    <target name="test-build" depends="init,test-init,jar">
+        <mkdir dir="${build.test.unit.classes.dir}"/>
+        <javac srcdir="${test.unit.src.dir}" destdir="${build.test.unit.classes.dir}"
+               debug="true" deprecation="${build.compiler.deprecation}"
+               source="1.4" optimize="${build.compiler.optimize}" includeantruntime="false">
+               <exclude name="**/jars/**"/><!-- XXX for core only; fix in core, not here -->
+            <classpath refid="test.unit.cp"/>
+        </javac>
+        <copy todir="${build.test.unit.classes.dir}">
+            <fileset dir="${test.unit.src.dir}">
+                <exclude name="**/*.java"/>
+            </fileset>
+        </copy>
+    </target>
+
+    <target name="compile-test-single" depends="init,test-init,jar">
+        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
+        <mkdir dir="${build.test.unit.classes.dir}"/>
+        <!-- XXX consider forcing deprecation=true -->
+        <!-- XXX consider deleting the .class file first to force a rebuild -->
+        <javac srcdir="${test.unit.src.dir}" destdir="${build.test.unit.classes.dir}"
+               debug="true" deprecation="${build.compiler.deprecation}"
+               source="1.4" includeantruntime="false" optimize="${build.compiler.optimize}" includes="${javac.includes}">
+            <classpath refid="test.unit.cp"/>
+        </javac>
+    </target>
+
+    <target name="test" depends="init,test-init,test-build">
+        <mkdir dir="${build.test.unit.results.dir}"/>
+        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed" filtertrace="${test.filter.trace}">
+            <batchtest todir="${build.test.unit.results.dir}">
+                <fileset dir="${test.unit.src.dir}">
+                    <!-- XXX could include only out-of-date tests... -->
+                    <include name="**/*Test.java"/>
+                </fileset>
+            </batchtest>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <!-- <assertions> does not seem to work in Ant 1.6.1? -->
+            <jvmarg value="-ea"/>
+            <formatter type="brief" usefile="false"/>
+        </junit>
+        <fail if="tests.failed">Some tests failed; see details above.</fail>
+    </target>
+
+    <target name="test-single" depends="init,test-init,test-build">
+        <fail unless="test.includes">Must set test.includes</fail>
+        <mkdir dir="${build.test.unit.results.dir}"/>
+        <junit showoutput="true" fork="true" failureproperty="tests.failed" errorproperty="tests.failed" filtertrace="${test.filter.trace}">
+            <batchtest todir="${build.test.unit.results.dir}">
+                <fileset dir="${test.unit.src.dir}" includes="${test.includes}"/>
+            </batchtest>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <!-- <assertions> does not seem to work in Ant 1.6.1? -->
+            <jvmarg value="-ea"/>
+            <formatter type="brief" usefile="false"/>
+        </junit>
+        <fail if="tests.failed">Some tests failed; see details above.</fail>
+    </target>
+
+    <target name="do-debug-test-single">
+        <fail unless="test.class">Must set test.class</fail>
+        <java fork="true" classname="junit.textui.TestRunner">
+            <jvmarg value="-Xdebug"/>
+            <jvmarg value="-Xnoagent"/>
+            <jvmarg value="-Djava.compiler=none"/>
+            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
+            <jvmarg value="-ea"/>
+            <classpath refid="test.unit.run.cp"/>
+            <syspropertyset refid="test.unit.properties"/>
+            <arg line="${test.class}"/>
+        </java>
+    </target>
+
+    <!-- apisupport/project could calls this for the debug action. -->
+    <!-- You can also call it directly from the nbbuild/misc pseudoproject. -->
+    <target name="debug" depends="netbeans">
+        <ant dir="${nb_all}/nbbuild" target="tryme-debug"/>
+    </target>
+
+    <target name="debug-test-single" depends="init,test-init,test-build,do-debug-test-single"/>
+
+    <target name="debug-test-single-nb" depends="init,test-init,test-build" if="netbeans.user">
+        <fail unless="test.class">Must set test.class</fail>
+        <nbjpdastart transport="dt_socket" addressproperty="jpda.address" name="${test.class}">
+            <classpath>
+                <path refid="test.unit.run.cp"/>
+                <!-- Permit extra sources to be searched even if they are not in the actual CP. -->
+                <!-- Used e.g. from ant/test/unit since some tests use dynamic loading: -->
+                <pathelement path="${test.unit.debug.cp.extra}"/>
+            </classpath>
+        </nbjpdastart>
+        <antcall target="do-debug-test-single"/>
+    </target>
+
+    <target name="-pre-debug-fix" depends="init">
+        <fail unless="fix.class">Must set fix.class to e.g. org/netbeans/modules/foo/Bar</fail>
+        <property name="javac.includes" value="${fix.class}.java"/>
+    </target>
+    <target name="debug-fix-nb" if="netbeans.user" depends="init,-pre-debug-fix,compile-single">
+        <nbjpdareload>
+            <fileset includes="${fix.class}*.class" dir="${build.classes.dir}"/>
+        </nbjpdareload>
+    </target>
+
+    <!-- support either:
+         1. contents of help set in javahelp/ directory
+         2. contents of help set in a jar file in javahelp/module-name.jar
+    -->
+    <target name="javahelp-impl-jarred" if="javahelp.jarred">
+        <copy todir="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar.dir}">
+            <fileset dir="javahelp">
+                <include name="${module.jar.basename}"/>
+            </fileset>
+        </copy>
+    </target>
+
+    <target name="javahelp-impl-unjarred" unless="javahelp.jarred">
+        <mkdir dir="${build.javahelp.dir}/${javahelp.base}/${javahelp.search}"/>
+        <copy todir="${build.javahelp.dir}">
+            <fileset dir="javahelp" excludesfile="${nb_all}/nbbuild/module-scripts/standard-jar-excludes.txt"/>
+        </copy>
+        <jhindexer basedir="${build.javahelp.dir}/${javahelp.base}"
+                   db="${build.javahelp.dir}/${javahelp.base}/${javahelp.search}">
+            <classpath>
+                <fileset dir="${nb_all}/nbbuild/external">
+                    <include name="jhall*.jar"/>
+                </fileset>
+            </classpath>
+            <include name="**/*.html"/>
+            <include name="**/*.htm"/>
+            <exclude name="${javahelp.search}/"/>
+            <exclude name="${javahelp.excludes}"/>
+        </jhindexer>
+        <!-- Add ide.css for easy previewing only; usersguide provides it in distro: -->
+        <!-- (XXX maybe the viewer task can automagically do this...) -->
+        <mkdir dir="${build.javahelp.dir}/org/netbeans/modules/usersguide"/>
+        <copy tofile="${build.javahelp.dir}/org/netbeans/modules/usersguide/ide.css"
+              file="${nb_all}/usersguide/javahelp/org/netbeans/modules/usersguide/ide.css"
+              failonerror="false"/>
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar.dir}"/>
+        <jar jarfile="${netbeans.dest.dir}/${cluster.dir}/${javahelp.jar}" compress="true">
+            <fileset dir="${build.javahelp.dir}">
+                <!-- XXX this does not exclude the folder, unfortunately... -->
+                <exclude name="org/netbeans/modules/usersguide/ide.css"/>
+            </fileset>
+        </jar>
+    </target>
+
+    <target name="javahelp" depends="init" if="has.javahelp">
+        <antcall target="javahelp-impl-jarred"/>
+        <antcall target="javahelp-impl-unjarred"/>
+    </target>
+
+    <target name="check-javahelp" depends="javahelp" description="Validate helpset for various errors." if="has.javahelp">
+        <fail unless="javahelp.hs">Must set javahelp.hs property</fail>
+        <taskdef name="checkhelpsets" classname="org.netbeans.nbbuild.CheckHelpSets">
+            <classpath>
+                <pathelement location="${nb_all}/nbbuild/lib/nbantext.jar"/>
+                <fileset dir="${nb_all}/nbbuild/external">
+                    <include name="jhall*.jar"/>
+                </fileset>
+            </classpath>
+        </taskdef>
+        <checkhelpsets>
+            <!-- XXX need to check against real files (since there may be some processing) but should use a link mapper: -->
+            <fileset dir="${build.javahelp.dir}">
+                <include name="${javahelp.base}/${javahelp.hs}"/>
+            </fileset>
+        </checkhelpsets>
+    </target>
+
+    <!-- XXX need target to preview javahelp in a viewer like this: -->
+    <!--
+    HelpSet hs = new HelpSet(someClassLoader, f.toURI().toURL());
+    String title = hs.getTitle();
+    if (title == null) {
+        title = f.getAbsolutePath();
+    }
+    JDialog dlg = new JDialog(WindowManager.getDefault().getMainWindow(), title, false);
+    dlg.getContentPane().add(new JHelp(hs), BorderLayout.CENTER);
+    dlg.setSize(920, 660); // match min size of IDE's viewer
+    dlg.pack();
+    dlg.addWindowListener(this);
+    dlg.show();
+    synchronized (this) {
+        wait();
+    }
+    // ...
+    public synchronized void windowClosing(WindowEvent ev) {
+        notify();
+    }
+    -->
+
+    <target name="clean" depends="files-init">
+        <delete dir="${build.dir}"/>
+        <delete dir="javadoc"/>
+        <delete>
+            <fileset dir="${netbeans.dest.dir}/${cluster.dir}">
+                <patternset refid="module.files"/>
+            </fileset>
+        </delete>
+        <delete file="${netbeans.dest.dir}/${cluster.dir}/update_tracking/${code.name.base.dashes}.xml"/>
+    </target>
+
+</project>

Added: TableLayout/trunk/nb4.1/nbbuild/module-scripts/standard-jar-excludes.txt
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/module-scripts/standard-jar-excludes.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/module-scripts/standard-jar-excludes.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,13 @@
+**/*.java
+**/*.jj
+**/*.jjt
+**/*.orig
+**/*.bak
+**/*.rej
+**/*.form
+**/*.jar.MAKEME
+**/filesystem.attributes
+**/.nbattrs
+**/.#*
+**/package.html
+**/doc-files/

Added: TableLayout/trunk/nb4.1/nbbuild/module-scripts/standard-nbm-license.txt
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/module-scripts/standard-nbm-license.txt	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/module-scripts/standard-nbm-license.txt	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,15 @@
+This module is part of NetBeans and is open-source.
+You can see http://www.netbeans.org/license.html for details.
+
+You may use the binary however you like. The source file license is:
+
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.

Added: TableLayout/trunk/nb4.1/nbbuild/moduledefs-tmp.properties
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/moduledefs-tmp.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/moduledefs-tmp.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1 @@
+modules=${cluster.nblayoutpack}
\ No newline at end of file

Added: TableLayout/trunk/nb4.1/nbbuild/modules.xml
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/modules.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/modules.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,769 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+This file maps directory names to the module names.
+It must contain all the modules (netbeans modules and
+your cluster modules).
+-->
+
+<modules>
+    <module>
+        <path>nblayoutpack/tablelayout</path>
+        <cnb>de.berlios.nblayoutpack.tablelayout</cnb>
+    </module>
+
+<!-- =================================== -->
+<!-- =====   Netbeans Modules   ======== -->
+<!-- =================================== -->
+    <module>
+        <path>ant</path>
+        <cnb>org.apache.tools.ant.module</cnb>
+    </module>
+    <module>
+        <path>ant/browsetask</path>
+        <cnb>org.netbeans.modules.ant.browsetask</cnb>
+    </module>
+    <module>
+        <path>ant/docs</path>
+        <cnb>org.apache.tools.ant.module.docs</cnb>
+    </module>
+    <module>
+        <path>ant/freeform</path>
+        <cnb>org.netbeans.modules.ant.freeform</cnb>
+    </module>
+    <module>
+        <path>ant/grammar</path>
+        <cnb>org.netbeans.modules.ant.grammar</cnb>
+    </module>
+    <module>
+        <path>ant/project</path>
+        <cnb>org.netbeans.modules.project.ant</cnb>
+    </module>
+    <module>
+        <path>apisupport</path>
+        <cnb>org.netbeans.modules.apisupport</cnb>
+    </module>
+    <module>
+        <path>apisupport/ant</path>
+        <cnb>org.netbeans.modules.apisupport.ant</cnb>
+    </module>
+    <module>
+        <path>apisupport/lite</path>
+        <cnb>org.netbeans.modules.apisupport.lite</cnb>
+    </module>
+    <module>
+        <path>apisupport/project</path>
+        <cnb>org.netbeans.modules.apisupport.project</cnb>
+    </module>
+    <module>
+        <path>autoupdate</path>
+        <cnb>org.netbeans.modules.autoupdate</cnb>
+    </module>
+    <module>
+        <path>beans</path>
+        <cnb>org.netbeans.modules.beans</cnb>
+    </module>
+    <module>
+        <path>classfile</path>
+        <cnb>org.netbeans.modules.classfile</cnb>
+    </module>
+    <module>
+        <path>clazz</path>
+        <cnb>org.netbeans.modules.clazz</cnb>
+    </module>
+    <module>
+        <path>contrib/docbook</path>
+        <cnb>org.netbeans.modules.docbook</cnb>
+    </module>
+    <module>
+        <path>contrib/mount</path>
+        <cnb>org.netbeans.modules.mount</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator</path>
+        <cnb>org.netbeans.modules.navigator</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator/javagator</path>
+        <cnb>org.netbeans.modules.javagator</cnb>
+    </module>
+    <module>
+        <path>contrib/navigator/propagator</path>
+        <cnb>org.netbeans.modules.propagator</cnb>
+    </module>
+    <module>
+        <path>contrib/options</path>
+        <cnb>org.netbeans.modules.options</cnb>
+    </module>
+    <module>
+        <path>contrib/options/baseoptions</path>
+        <cnb>org.netbeans.modules.baseoptions</cnb>
+    </module>
+    <module>
+        <path>contrib/options/optionscore</path>
+        <cnb>org.netbeans.modules.optionscore</cnb>
+    </module>
+    <module>
+        <path>core</path>
+        <cnb>org.netbeans.core</cnb>
+        <jar>lib/core.jar</jar>
+    </module>
+    <module>
+        <path>core/compiler</path>
+        <cnb>org.netbeans.core.compiler</cnb>
+        <jar>modules/autoload/core-compiler.jar</jar>
+    </module>
+    <module>
+        <path>core/deprecated</path>
+        <cnb>org.netbeans.core.deprecated</cnb>
+        <jar>modules/autoload/core-deprecated.jar</jar>
+    </module>
+    <module>
+        <path>core/execution</path>
+        <cnb>org.netbeans.core.execution</cnb>
+    </module>
+    <module>
+        <path>core/ide</path>
+        <cnb>org.netbeans.core.ide</cnb>
+    </module>
+    <module>
+        <path>core/javahelp</path>
+        <cnb>org.netbeans.modules.javahelp</cnb>
+    </module>
+    <module>
+        <path>core/output</path>
+        <cnb>org.netbeans.core.output</cnb>
+    </module>
+    <module>
+        <path>core/output2</path>
+        <cnb>org.netbeans.core.output2</cnb>
+    </module>
+    <module>
+        <path>core/registry</path>
+        <cnb>org.netbeans.core.registry</cnb>
+    </module>
+    <module>
+        <path>core/settings</path>
+        <cnb>org.netbeans.modules.settings</cnb>
+    </module>
+    <module>
+        <path>core/swing/plaf</path>
+        <cnb>org.netbeans.swing.plaf</cnb>
+        <jar>lib/org-netbeans-swing-plaf.jar</jar>
+    </module>
+    <module>
+        <path>core/swing/tabcontrol</path>
+        <cnb>org.netbeans.swing.tabcontrol</cnb>
+    </module>
+    <module>
+        <path>core/term</path>
+        <cnb>org.netbeans.lib.terminalemulator</cnb>
+    </module>
+    <module>
+        <path>core/ui</path>
+        <cnb>org.netbeans.core.ui</cnb>
+    </module>
+    <module>
+        <path>core/windows</path>
+        <cnb>org.netbeans.core.windows</cnb>
+    </module>
+    <module>
+        <path>core/multiview</path>
+        <cnb>org.netbeans.core.multiview</cnb>
+    </module>
+    <module>
+        <path>core/favorites</path>
+        <cnb>org.netbeans.modules.favorites</cnb>
+    </module>
+    <module>
+        <path>db</path>
+        <cnb>org.netbeans.modules.db</cnb>
+    </module>
+    <module>
+        <path>debuggercore/oldapi</path>
+        <cnb>org.openide.debugger</cnb>
+    </module>
+    <module>
+        <path>debuggercore</path>
+        <cnb>org.netbeans.spi.debugger.ui</cnb>
+    </module>
+    <module>
+        <path>debuggercore/api</path>
+        <cnb>org.netbeans.api.debugger</cnb>
+    </module>
+    <module>
+        <path>debuggercore/viewmodel</path>
+        <cnb>org.netbeans.spi.viewmodel</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/api</path>
+        <cnb>org.netbeans.api.debugger.jpda</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/ant</path>
+        <cnb>org.netbeans.modules.debugger.jpda.ant</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda</path>
+        <cnb>org.netbeans.modules.debugger.jpda</cnb>
+    </module>
+    <module>
+        <path>debuggerjpda/ui</path>
+        <cnb>org.netbeans.modules.debugger.jpda.ui</cnb>
+    </module>
+    <module>
+        <path>diff</path>
+        <cnb>org.netbeans.modules.diff</cnb>
+    </module>
+    <module>
+        <path>editor</path>
+        <cnb>org.netbeans.modules.editor</cnb>
+    </module>
+    <module>
+        <path>editor/lib</path>
+        <cnb>org.netbeans.modules.editor.lib</cnb>
+    </module>
+    <module>
+        <path>editor/fold</path>
+        <cnb>org.netbeans.modules.editor.fold</cnb>
+    </module>
+    <module>
+        <path>editor/util</path>
+        <cnb>org.netbeans.modules.editor.util</cnb>
+    </module>
+    <module>
+        <path>extbrowser</path>
+        <cnb>org.netbeans.modules.extbrowser</cnb>
+    </module>
+    <module>
+        <path>form</path>
+        <cnb>org.netbeans.modules.form</cnb>
+    </module>
+    <module>
+        <path>html</path>
+        <cnb>org.netbeans.modules.html</cnb>
+    </module>
+    <module>
+        <path>httpserver</path>
+        <cnb>org.netbeans.modules.httpserver</cnb>
+    </module>
+    <module>
+        <path>httpserver/servletapi</path>
+        <cnb>org.netbeans.modules.servletapi</cnb>
+        <jar>modules/autoload/servletapi.jar</jar>
+    </module>
+    <module>
+        <path>i18n</path>
+        <cnb>org.netbeans.modules.i18n</cnb>
+    </module>
+    <module>
+        <path>i18n/form</path>
+        <cnb>org.netbeans.modules.i18n.form</cnb>
+    </module>
+    <module>
+        <path>ide/applemenu</path>
+        <cnb>org.netbeans.modules.applemenu</cnb>
+    </module>
+    <module>
+        <path>ide/updatecenters</path>
+        <cnb>org.netbeans.modules.updatecenters</cnb>
+    </module>
+    <module>
+        <path>ide/welcome</path>
+        <cnb>org.netbeans.modules.welcome</cnb>
+    </module>
+    <module>
+        <path>image</path>
+        <cnb>org.netbeans.modules.image</cnb>
+    </module>
+    <module>
+        <path>j2eeserver</path>
+        <cnb>org.netbeans.modules.j2eeserver</cnb>
+    </module>
+    <module>
+        <path>j2eeserver/j2eeapis</path>
+        <cnb>org.netbeans.modules.j2eeapis</cnb>
+        <jar>modules/autoload/j2eeapis.jar</jar>
+    </module>
+    <module>
+        <path>j2eeserver/ant</path>
+        <cnb>org.netbeans.modules.j2ee.ant</cnb>
+    </module>
+    <module>
+        <path>java</path>
+        <cnb>org.netbeans.modules.java</cnb>
+    </module>
+    <module>
+        <path>java/api</path>
+        <cnb>org.netbeans.api.java</cnb>
+    </module>
+    <module>
+        <path>java/j2seplatform</path>
+        <cnb>org.netbeans.modules.java.j2seplatform</cnb>
+    </module>
+    <module>
+        <path>java/j2seproject</path>
+        <cnb>org.netbeans.modules.java.j2seproject</cnb>
+    </module>
+    <module>
+        <path>java/javacore</path>
+        <cnb>org.netbeans.modules.javacore</cnb>
+    </module>
+    <module>
+        <path>java/javamodel</path>
+        <cnb>org.netbeans.jmi.javamodel</cnb>
+    </module>
+    <module>
+        <path>java/platform</path>
+        <cnb>org.netbeans.modules.java.platform</cnb>
+    </module>
+    <module>
+        <path>java/project</path>
+        <cnb>org.netbeans.modules.java.project</cnb>
+    </module>
+    <module>
+        <path>java/srcmodel</path>
+        <cnb>org.openide.src</cnb>
+    </module>
+    <module>
+        <path>javacvs/compat</path>
+        <cnb>org.netbeans.modules.cvsclient</cnb>
+        <jar>modules/javacvscompat.jar</jar>
+    </module>
+    <module>
+        <path>javacvs/libmodule</path>
+        <cnb>org.netbeans.lib.cvsclient</cnb>
+    </module>
+    <module>
+        <path>javadoc</path>
+        <cnb>org.netbeans.modules.javadoc</cnb>
+    </module>
+    <module>
+        <path>jellytools</path>
+        <cnb>org.netbeans.modules.jellytools</cnb>
+    </module>
+    <module>
+        <path>jemmy/idemodule</path>
+        <cnb>org.netbeans.modules.jemmy.idemodule</cnb>
+    </module>
+    <module>
+        <path>jemmysupport</path>
+        <cnb>org.netbeans.modules.jemmysupport</cnb>
+    </module>
+    <module>
+        <path>junit</path>
+        <cnb>org.netbeans.modules.junit</cnb>
+    </module>
+    <module>    
+        <path>latex/ant/antint</path>
+        <cnb>org.netbeans.modules.latex.antint</cnb>
+    </module>
+    <module>
+        <path>latex/auted</path>
+        <cnb>org.netbeans.modules.latex.auted</cnb>
+    </module>
+    <module>
+        <path>latex/bibtex</path>
+        <cnb>org.netbeans.modules.latex.bibtex</cnb>
+    </module>
+    <module>
+        <path>latex/branding</path>
+        <cnb>org.netbeans.modules.latex.branding</cnb>
+    </module>
+    <module>
+        <path>latex/core</path>
+        <cnb>org.netbeans.modules.latex</cnb>
+    </module>
+    <module>
+        <path>latex/editor</path>
+        <cnb>org.netbeans.modules.latex.editor</cnb>
+    </module>
+    <module>
+        <path>latex/guiproject</path>
+        <cnb>org.netbeans.modules.latex.guiproject</cnb>
+    </module>
+    <module>
+        <path>latex/loaders</path>
+        <cnb>org.netbeans.modules.latex.loaders</cnb>
+    </module>
+    <module>
+        <path>latex/manual</path>
+        <cnb>org.netbeans.modules.latex.help</cnb>
+    </module>
+    <module>
+        <path>latex/model</path>
+        <cnb>org.netbeans.modules.latex.model</cnb>
+    </module>
+    <module>
+        <path>latex/nexplorer</path>
+        <cnb>org.netbeans.modules.nexplorer</cnb>
+    </module>
+    <module>
+        <path>latex/project</path>
+        <cnb>org.netbeans.modules.latex.project</cnb>
+    </module>
+    <module>
+        <path>latex/ui</path>
+        <cnb>org.netbeans.modules.latex.ui</cnb>
+    </module>
+    <module>
+        <path>lexer</path>
+        <cnb>org.netbeans.modules.lexer</cnb>
+    </module>
+    <module>
+        <path>lexer/editorbridge</path>
+        <cnb>org.netbeans.modules.lexer.editorbridge</cnb>
+    </module>
+    <module>
+        <path>libs/commons_logging</path>
+        <cnb>org.netbeans.libs.commons_logging</cnb>
+    </module>
+    <module>
+        <path>libs/j2eeeditor</path>
+        <cnb>org.netbeans.libs.j2eeeditor</cnb>
+        <jar>modules/autoload/j2eeeditor.jar</jar>
+    </module>
+    <module>
+        <path>libs/jaxp</path>
+        <cnb>org.netbeans.libs.jaxp</cnb>
+        <jar>modules/autoload/jaxp.jar</jar>
+    </module>
+    <module>
+        <path>libs/regexp</path>
+        <cnb>org.netbeans.libs.regexp</cnb>
+        <jar>modules/autoload/nb-regexp-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>libs/xalan</path>
+        <cnb>org.netbeans.libs.xalan</cnb>
+        <jar>modules/autoload/nb-xalan-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>libs/xerces</path>
+        <cnb>org.netbeans.libs.xerces</cnb>
+        <jar>modules/autoload/nb-xerces-wrapper.jar</jar>
+    </module>
+    <module>
+        <path>mdr/jmi</path>
+        <cnb>javax.jmi.reflect</cnb>
+    </module>
+    <module>
+        <path>mdr/nbjmiutils</path>
+        <cnb>org.netbeans.modules.jmiutils</cnb>
+    </module>
+    <module>
+        <path>mdr/mdrapi</path>
+        <cnb>org.netbeans.api.mdr</cnb>
+    </module>
+    <module>
+        <path>mdr/module</path>
+        <cnb>org.netbeans.modules.mdr</cnb>
+    </module>
+    <module>
+        <path>mdr/mof</path>
+        <cnb>javax.jmi.model</cnb>
+    </module>
+    <module>
+        <path>monitor</path>
+        <cnb>org.netbeans.modules.web.monitor</cnb>
+    </module>
+    <module>
+        <path>openide</path>
+        <cnb>org.openide</cnb>
+        <jar>lib/openide.jar</jar>
+    </module>
+    <module>
+        <path>openide/compiler</path>
+        <cnb>org.openide.compiler</cnb>
+    </module>
+    <module>
+        <path>openide/convertor</path>
+        <cnb>org.netbeans.modules.convertor</cnb>
+    </module>
+    <module>
+        <path>openide/deprecated</path>
+        <cnb>org.openide.deprecated</cnb>
+    </module>
+    <module>
+        <path>openide/execution</path>
+        <cnb>org.openide.execution</cnb>
+    </module>
+    <module>
+        <path>openide/execution/deprecated</path>
+        <cnb>org.openide.execution.deprecated</cnb>
+    </module>
+    <module>
+        <path>openide/io</path>
+        <cnb>org.openide.io</cnb>
+    </module>
+    <module>
+        <path>openide/loaders</path>
+        <cnb>org.openide.loaders</cnb>
+        <jar>lib/openide-loaders.jar</jar>
+    </module>
+    <module>
+        <path>openide/masterfs</path>
+        <cnb>org.netbeans.modules.masterfs</cnb>
+    </module>
+    <module>
+        <path>openide/registry</path>
+        <cnb>org.netbeans.modules.registry</cnb>
+    </module>
+     <module>
+        <path>openide/looks</path>
+        <cnb>org.netbeans.modules.looks</cnb>
+    </module>
+    <module>
+        <path>openidex</path>
+        <cnb>org.openidex.util</cnb>
+    </module>
+    <module>
+        <path>performance/insane</path>
+        <cnb>org.netbeans.modules.performance.insane</cnb>
+    </module>
+    <module>
+        <path>projects/libraries</path>
+        <cnb>org.netbeans.modules.project.libraries</cnb>
+    </module>
+    <module>
+        <path>projects/projectapi</path>
+        <cnb>org.netbeans.modules.projectapi</cnb>
+    </module>
+    <module>
+        <path>projects/projectui</path>
+        <cnb>org.netbeans.modules.projectui</cnb>
+    </module>
+        <module>
+        <path>projects/projectuiapi</path>
+        <cnb>org.netbeans.modules.projectuiapi</cnb>
+    </module>
+    <module>
+        <path>projects/queries</path>
+        <cnb>org.netbeans.modules.queries</cnb>
+    </module>
+    <module>
+        <path>properties</path>
+        <cnb>org.netbeans.modules.properties</cnb>
+        <jar>modules/properties.jar</jar>
+    </module>
+    <module>
+        <path>refactoring</path>
+        <cnb>org.netbeans.modules.refactoring</cnb>
+    </module>
+    <module>
+        <path>scripting</path>
+        <cnb>org.netbeans.modules.scripting</cnb>
+    </module>
+    <module>
+        <path>scripting/bsf</path>
+        <cnb>org.netbeans.modules.scripting.bsf</cnb>
+    </module>
+    <module>
+        <path>schema2beans/rt</path>
+        <cnb>org.netbeans.modules.schema2beans</cnb>
+    </module>
+    <module>
+        <path>sysprops</path>
+        <cnb>org.netbeans.modules.sysprops</cnb>
+    </module>
+    <module>
+        <path>tasklist/api</path>
+        <cnb>org.netbeans.tasklistapi</cnb>
+        <jar>modules/autoload/tasklist-api.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/core</path>
+        <cnb>org.netbeans.modules.tasklist.core</cnb>
+        <jar>modules/autoload/tasklist-core.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/docscan</path>
+        <cnb>org.netbeans.modules.tasklist.docscan</cnb>
+        <jar>modules/tasklist-docscan.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/pmd</path>
+        <cnb>org.netbeans.modules.tasklist.pmd</cnb>
+        <jar>modules/eager/tasklist-pmd.jar</jar>
+    </module>
+    <module>
+        <path>tasklist/suggestions</path>
+        <cnb>org.netbeans.modules.suggestions_framework</cnb>
+        <jar>modules/autoload/suggestions-framework.jar</jar>
+    </module>
+    <module>
+        <path>text</path>
+        <cnb>org.netbeans.modules.text</cnb>
+    </module>
+    <module>
+        <path>tomcatint/bundledtomcat</path>
+        <cnb>org.netbeans.modules.web.tomcat.bundled</cnb>
+        <jar>modules/tomcat40-bundled.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat40</path>
+        <cnb>org.netbeans.modules.web.tomcat.tomcat40</cnb>
+        <jar>modules/tomcat40.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat40autocompile</path>
+        <cnb>org.netbeans.modules.web.tomcat.tomcat40.autocompile</cnb>
+        <jar>modules/eager/tomcat40-autocompile.jar</jar>
+    </module>
+    <module>
+        <path>tomcatint/tomcat5</path>
+        <cnb>org.netbeans.modules.tomcat5</cnb>
+    </module>
+    <module>
+        <path>tomcatint/tomcat5/bundled</path>
+        <cnb>org.netbeans.modules.tomcat5.bundled</cnb>
+        <jar>modules/eager/tomcat5-bundled.jar</jar>
+    </module>
+    <module>
+        <path>ide/welcome</path>
+        <cnb>org.netbeans.modules.welcome</cnb>
+        <jar>modules/welcome.jar</jar>
+    </module>
+    <module>
+        <path>usersguide</path>
+        <cnb>org.netbeans.modules.usersguide</cnb>
+    </module>
+    <module>
+        <path>usersguide/j2seexamples</path>
+        <cnb>org.netbeans.modules.java.examples</cnb>
+    </module>
+    <module>
+        <path>utilities</path>
+        <cnb>org.netbeans.modules.utilities</cnb>
+    </module>
+    <module>
+        <path>utilities/project</path>
+        <cnb>org.netbeans.modules.utilities.project</cnb>
+    </module>
+    <module>
+        <path>utilities/group</path>
+        <cnb>org.netbeans.modules.group</cnb>
+    </module>
+    <module>
+        <path>vcscore</path>
+        <cnb>org.netbeans.modules.vcscore</cnb>
+    </module>
+    <module>
+        <path>vcscvs/compat</path>
+        <cnb>org.netbeans.modules.vcs.cmdline.compat</cnb>
+        <jar>modules/cvscompat.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric</path>
+        <cnb>org.netbeans.modules.vcs.advanced</cnb>
+        <jar>modules/vcsgen.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/cvsprofiles</path>
+        <cnb>org.netbeans.modules.vcs.profiles.cvsprofiles</cnb>
+        <jar>modules/cvs-profile.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/pvcs</path>
+        <cnb>org.netbeans.modules.vcs.profiles.pvcs</cnb>
+        <jar>modules/pvcs-profile.jar</jar>
+    </module>
+    <module>
+        <path>vcsgeneric/profiles/vss</path>
+        <cnb>org.netbeans.modules.vcs.profiles.vss</cnb>
+        <jar>modules/vss-profile.jar</jar>
+    </module>
+    <module>
+        <path>web/core</path>
+        <cnb>org.netbeans.modules.web.core</cnb>
+    </module>
+    <module>
+        <path>web/ddapi</path>
+        <cnb>org.netbeans.api.web.dd</cnb>
+    </module>
+    <module>
+        <path>web/examples</path>
+        <cnb>org.netbeans.modules.web.examples</cnb>
+    </module>
+    <module>
+        <path>web/jspdebug</path>
+        <cnb>org.netbeans.modules.web.debug</cnb>
+    </module>
+    <module>
+        <path>web/jspparser</path>
+        <cnb>org.netbeans.modules.web.jspparser</cnb>
+    </module>
+    <module>
+        <path>web/jspsyntax</path>
+        <cnb>org.netbeans.modules.web.core.syntax</cnb>
+    </module>
+    <module>
+        <path>web/project</path>
+        <cnb>org.netbeans.modules.web.project</cnb>
+    </module>
+    <module>
+        <path>web/webapi</path>
+        <cnb>org.netbeans.api.web.webmodule</cnb>
+    </module>
+    <module>
+        <path>web/servletapi23</path>
+        <cnb>org.netbeans.modules.servletapi23</cnb>
+        <jar>modules/autoload/servletapi23.jar</jar>
+    </module>
+    <module>
+        <path>web/servletapi24</path>
+        <cnb>org.netbeans.modules.servletapi24</cnb>
+        <jar>modules/autoload/servletapi24.jar</jar>
+    </module>
+    <module>
+        <path>web/taglibed</path>
+        <cnb>org.netbeans.modules.web.taglibed</cnb>
+        <jar>modules/taglibed.jar</jar>
+    </module>
+    <module>
+        <path>xml/api</path>
+        <cnb>org.netbeans.api.xml</cnb>
+    </module>
+    <module>
+        <path>xml/catalog</path>
+        <cnb>org.netbeans.modules.xml.catalog</cnb>
+        <jar>modules/xml-catalog.jar</jar>
+    </module>
+    <module>
+        <path>xml/core</path>
+        <cnb>org.netbeans.modules.xml.core</cnb>
+    </module>
+    <module>
+        <path>xml/css</path>
+        <cnb>org.netbeans.modules.css</cnb>
+        <jar>modules/css.jar</jar>
+    </module>
+    <module>
+        <path>xml/schema</path>
+        <cnb>org.netbeans.modules.xml.schema</cnb>
+        <jar>modules/xml-schema.jar</jar>
+    </module>
+    <module>
+        <path>xml/tax</path>
+        <cnb>org.netbeans.modules.xml.tax</cnb>
+        <jar>modules/autoload/xml-tax.jar</jar>
+    </module>
+    <module>
+        <path>xml/text-edit</path>
+        <cnb>org.netbeans.modules.xml.text</cnb>
+        <jar>modules/xml-text-edit.jar</jar>
+    </module>
+    <module>
+        <path>xml/tools</path>
+        <cnb>org.netbeans.modules.xml.tools</cnb>
+        <jar>modules/xml-tools.jar</jar>
+    </module>
+    <module>
+        <path>xml/xsl</path>
+        <cnb>org.netbeans.modules.xsl</cnb>
+        <jar>modules/xsl.jar</jar>
+    </module>
+    <module>
+        <path>xtest/nbjunit</path>
+        <cnb>org.netbeans.modules.nbjunit</cnb>
+    </module>
+</modules>

Added: TableLayout/trunk/nb4.1/nbbuild/user.build.properties
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/user.build.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/user.build.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,53 @@
+#                 Sun Public License Notice
+#
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+#
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+# the name of your cluster
+clustername=nblayoutpack
+
+# The location of your binary netbeans installation.  Modules will be installed
+# into this location.
+netbeans.dest.dir=T:/netbeans/4.1/
+
+# netbeans.user directory to use when launching netbeans
+# with "ant tryme"
+test.user.dir=testuserdir
+
+# the list of clusters that your cluster depends on
+# (used for the sanity-test and tryme targets)
+
+# ...for just the platform
+#test.cluster.list=${netbeans.dest.dir}/${clustername}
+
+# ...for the whole IDE
+test.cluster.list=${netbeans.dest.dir}/${clustername}${path.separator}${netbeans.dest.dir}/extra${path.separator}${netbeans.dest.dir}/ide4${path.separator}${netbeans.dest.dir}/nb4.0
+
+# Options to pass to NetBeans when starting it with "ant tryme":
+tryme.args=
+
+# Additional parameters to pass to NetBeans as it is started in sanity-check mode.
+# Normally you ought not change this.
+# However those running automated builds may wish to use:
+# -J-DErrorManager.minimum=17
+# (please don't ask why it is 17)
+# which will suppress a variety of mostly harmless deprecation warnings.
+sanitystart.args.additional=
+
+# Path to JDK to be used for tryme and sanity-check targets
+#jdkhome=
+
+# Additional parameters to pass to NetBeans as it is started in tryme mode.
+tryme.args=
+
+# If a port is specified, the tryme target will start netbeans in debug mode.
+#debug.port=8765
+
+# Uncomment to pause netbeans at the start of a debugging session
+#debug.pause=y

Added: TableLayout/trunk/nb4.1/nbbuild/user.cluster.properties
===================================================================
--- TableLayout/trunk/nb4.1/nbbuild/user.cluster.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nbbuild/user.cluster.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,10 @@
+# declare a name for your cluster
+# (should match the name in user.build.properties)
+user.cluster=cluster.nblayoutpack
+
+# the directory under ${netbeans.home} containing your cluster
+cluster.nblayoutpack.dir=nblayoutpack
+
+# the list of modules (the names of the directories containing 
+# the modules, rooted at nbbuild/..)
+cluster.nblayoutpack=nblayoutpack

Added: TableLayout/trunk/nb4.1/nblayoutpack/build.xml
===================================================================
--- TableLayout/trunk/nb4.1/nblayoutpack/build.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nblayoutpack/build.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+                Sun Public License Notice
+
+The contents of this file are subject to the Sun Public License
+Version 1.0 (the "License"). You may not use this file except in
+compliance with the License. A copy of the License is available at
+http://www.sun.com/
+
+The Original Code is NetBeans. The Initial Developer of the Original
+Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+Microsystems, Inc. All Rights Reserved.
+-->
+
+<project name="nblayoutpack-tablelayout" default="netbeans" basedir=".">
+
+    <property file="../../build.properties"/>
+    <tstamp>
+      <format property="buildnumbertimestamp" pattern="yyyyMMdd.HHmm"/>
+    </tstamp>
+    <property name="impl.version" value="${spec.version}.${buildnumbertimestamp}"/>
+
+    <property name="license.file" location="../../license.txt"/>
+
+    <import file="../nbbuild/module-scripts/projectized.xml"/>
+
+    <!-- inherited targets -->
+    <!--
+    compile: compiles source code
+    jar: creates module jar
+    netbeans: installs module to $NETBEANS_HOME
+    nbm: makes NBM file in build/
+    javadoc: generates javadocs
+    test: runs junit tests
+    clean: does the obvious
+    -->
+
+    <!-- 
+    If you're adding compile dependencies on 3rd party jars 
+    (jgraph, jdom, etc.), uncomment this section ...
+
+    Identifies all the files to be considered part of this module when deployed 
+    -->
+    <target name="files-init" depends="basic-init">
+        <echo>${module.jar}</echo>
+        <echo>${nb.system.dir}/Modules/${code.name.base.dashes}.xml</echo>
+        <echo>${nb.modules.dir}/ext/nblayoutpack/TableLayout-3.2.jar</echo>
+        <patternset id="module.files">
+            <include name="${module.jar}"/>
+            <include name="${nb.system.dir}/Modules/${code.name.base.dashes}.xml"/>
+            <include name="${nb.modules.dir}/ext/nblayoutpack/TableLayout-3.2.jar"/>
+        </patternset>
+    </target>
+
+    <!-- 
+    netbeans-extra is a hook provided to plug in file copying. 
+    If you're adding compile dependencies on 3rd party jars 
+    (jgraph, jdom, etc.), uncomment this section ...
+    This example assumes that jgraph.jar and jdom.jar are in snipe/lib/
+    -->
+         
+    <target name="netbeans-extra" depends="init">
+        <mkdir dir="${netbeans.dest.dir}/${cluster.dir}/${nb.modules.dir}/ext/nblayoutpack"/>
+        <copy todir="${netbeans.dest.dir}/${cluster.dir}/${nb.modules.dir}/ext/nblayoutpack">
+          <fileset dir="../../lib">
+            <include name="TableLayout-3.2.jar"/>
+          </fileset>
+        </copy>
+    </target>
+
+
+</project>

Added: TableLayout/trunk/nb4.1/nblayoutpack/manifest.mf
===================================================================
--- TableLayout/trunk/nb4.1/nblayoutpack/manifest.mf	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nblayoutpack/manifest.mf	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,7 @@
+Manifest-Version: 1.0
+OpenIDE-Module: de.berlios.nblayoutpack.tablelayout
+OpenIDE-Module-Localizing-Bundle: de/berlios/nblayoutpack/tablelayout/Bundle.properties
+OpenIDE-Module-Layer: de/berlios/nblayoutpack/tablelayout/nb4.0/layer.xml
+OpenIDE-Module-Install: de/berlios/nblayoutpack/tablelayout/TableLayoutModule.class
+OpenIDE-Module-Module-Dependencies: org.netbeans.modules.form/2 = 200505031930
+Class-Path: ext/nblayoutpack/TableLayout-3.2.jar

Added: TableLayout/trunk/nb4.1/nblayoutpack/nbproject/private/private.xml
===================================================================
--- TableLayout/trunk/nb4.1/nblayoutpack/nbproject/private/private.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nblayoutpack/nbproject/private/private.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project-private xmlns="http://www.netbeans.org/ns/project-private/1">
+    <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/1"/>
+    <open-files xmlns="http://www.netbeans.org/ns/projectui-open-files/1">
+        <file>file:/I:/projects/Java/NBLP/TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutSupport.java</file>
+    </open-files>
+</project-private>

Added: TableLayout/trunk/nb4.1/nblayoutpack/nbproject/project.properties
===================================================================
--- TableLayout/trunk/nb4.1/nblayoutpack/nbproject/project.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nblayoutpack/nbproject/project.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,27 @@
+#                 Sun Public License Notice
+# 
+# The contents of this file are subject to the Sun Public License
+# Version 1.0 (the "License"). You may not use this file except in
+# compliance with the License. A copy of the License is available at
+# http://www.sun.com/
+# 
+# The Original Code is NetBeans. The Initial Developer of the Original
+# Code is Sun Microsystems, Inc. Portions Copyright 1997-2004 Sun
+# Microsystems, Inc. All Rights Reserved.
+
+
+cp.extra=../../lib/TableLayout-3.2.jar
+
+src.dir=../../src
+
+build.package.compress=true
+build.package.index=true
+build.compiler.debug=false
+
+nbm.homepage=http://nblayoutpack.berlios.de
+nbm.distribution=http://nblayoutpack.berlios.de
+
+nbm=${name}-nb4.1-${impl.version}.nbm
+
+build.classes.dir=../../../output/classes
+build.dir=../../../output/nb4.1

Added: TableLayout/trunk/nb4.1/nblayoutpack/nbproject/project.xml
===================================================================
--- TableLayout/trunk/nb4.1/nblayoutpack/nbproject/project.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/nb4.1/nblayoutpack/nbproject/project.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://www.netbeans.org/ns/project/1">
+    <type>org.netbeans.modules.apisupport.project</type>
+    <configuration>
+        <data xmlns="http://www.netbeans.org/ns/nb-module-project/1">
+            <code-name-base>de.berlios.nblayoutpack.tablelayout</code-name-base>
+            <path>TableLayout/trunk/nb4.1</path>
+            <module-dependencies>
+                <dependency>
+                    <code-name-base>org.openide</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>1</release-version>
+                        <specification-version>4.39</specification-version>
+                    </run-dependency>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.openide.loaders</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency/>
+                </dependency>
+                <dependency>
+                    <code-name-base>org.netbeans.modules.form</code-name-base>
+                    <build-prerequisite/>
+                    <compile-dependency/>
+                    <run-dependency>
+                        <release-version>2</release-version>
+                    </run-dependency>
+                </dependency>
+            </module-dependencies>
+            <public-packages/>
+        </data>
+    </configuration>
+</project>

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/Bundle.properties
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/Bundle.properties	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/Bundle.properties	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,55 @@
+## Resource bundle for package de.berlios.nblayoutpack.tablelayout
+#Sun Dec 19 18:53:08 EET 2004
+OpenIDE-Module-Display-Category=NetBeans Layout Pack
+OpenIDE-Module-Name=TableLayout 3.2 support
+OpenIDE-Module-Long-Description=TableLayout layout manager support.
+Mount/java/tablelayout.xml=TableLayout 3.2
+Palette/Layouts/info-clearthought-layout-TableLayout.instance=TableLayout
+
+PROP_hGap=Horizontal Gap
+HINT_hGap=
+
+PROP_vGap=Vertical Gap
+HINT_vGap=
+
+PROP_columns=Columns
+HINT_columns=
+
+PROP_rows=Rows
+HINT_rows=
+
+PROP_left=Left
+HINT_left=Column in which the left side of the component lays
+
+PROP_top=Top
+HINT_top=Row in which the top side of the component lays
+
+PROP_right=Right
+HINT_right=Column in which the right side of the component lays
+
+PROP_bottom=Bottom
+HINT_bottom=Row in which the bottom side of the component lays
+
+PROP_colSpan=Column span
+HINT_colSpan=Number of columns the component occupies
+
+PROP_rowSpan=Row span
+HINT_rowSpan=Number of rows the component occupies
+
+PROP_hAlign=Horizontal alignment
+HINT_hAlign=
+
+PROP_vAlign=Vertical alignment
+HINT_vAlign=
+
+VALUE_hAlign_CENTER=CENTER
+VALUE_hAlign_FULL=FULL
+VALUE_hAlign_LEADING=LEADING
+VALUE_hAlign_LEFT=LEFT
+VALUE_hAlign_RIGHT=RIGHT
+VALUE_hAlign_TRAILING=TRAILING
+
+VALUE_vAlign_BOTTOM=BOTTOM
+VALUE_vAlign_CENTER=CENTER
+VALUE_vAlign_FULL=FULL
+VALUE_vAlign_TOP=TOP

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutCustomizer.form
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutCustomizer.form	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutCustomizer.form	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,1226 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<Form version="1.1" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
+  <AuxValues>
+    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,-127,0,0,1,86"/>
+  </AuxValues>
+
+  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
+    <Property name="columns" type="int" value="1"/>
+    <Property name="rows" type="int" value="2"/>
+  </Layout>
+  <SubComponents>
+    <Container class="javax.swing.JPanel" name="jPanel1">
+      <Properties>
+        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+          <Border info="org.netbeans.modules.form.compat2.border.MatteColorBorderInfo">
+            <MatteColorBorder bottom="1" left="0" right="0" top="0">
+              <Color PropertyName="color" blue="80" green="80" id="gray" palette="1" red="80" type="palette"/>
+            </MatteColorBorder>
+          </Border>
+        </Property>
+      </Properties>
+      <SubComponents>
+        <Component class="javax.swing.JLabel" name="columnLabel">
+          <Properties>
+            <Property name="displayedMnemonic" type="int" value="67"/>
+            <Property name="labelFor" type="java.awt.Component" editor="org.netbeans.modules.form.ComponentChooserEditor">
+              <ComponentRef name="columnTable"/>
+            </Property>
+            <Property name="text" type="java.lang.String" value="X Columns"/>
+          </Properties>
+        </Component>
+        <Container class="javax.swing.JScrollPane" name="jScrollPane1">
+
+          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+          <SubComponents>
+            <Component class="javax.swing.JTable" name="columnTable">
+              <Properties>
+                <Property name="toolTipText" type="java.lang.String" value="Doubleclick or press Enter to edit the value"/>
+                <Property name="preferredScrollableViewportSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
+                  <Dimension value="[100, 87]"/>
+                </Property>
+              </Properties>
+            </Component>
+          </SubComponents>
+        </Container>
+        <Component class="javax.swing.JComboBox" name="columnParamCombo">
+          <Properties>
+            <Property name="editable" type="boolean" value="true"/>
+            <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
+              <StringArray count="3">
+                <StringItem index="0" value="FILL"/>
+                <StringItem index="1" value="MINIMUM"/>
+                <StringItem index="2" value="PREFERRED"/>
+              </StringArray>
+            </Property>
+            <Property name="toolTipText" type="java.lang.String" value="Press Enter to apply the value to the selected columns"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JButton" name="addColumnsButton">
+          <Properties>
+            <Property name="mnemonic" type="int" value="65"/>
+            <Property name="text" type="java.lang.String" value="Add"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JTextField" name="columnCountTextField1">
+          <Properties>
+            <Property name="columns" type="int" value="3"/>
+            <Property name="text" type="java.lang.String" value="1"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JButton" name="insertColumnsButton">
+          <Properties>
+            <Property name="mnemonic" type="int" value="73"/>
+            <Property name="text" type="java.lang.String" value="Insert"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JTextField" name="columnCountTextField2">
+          <Properties>
+            <Property name="columns" type="int" value="3"/>
+            <Property name="text" type="java.lang.String" value="1"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JButton" name="removeColumnsButton">
+          <Properties>
+            <Property name="mnemonic" type="int" value="101"/>
+            <Property name="text" type="java.lang.String" value="Remove"/>
+          </Properties>
+        </Component>
+      </SubComponents>
+      <LayoutCode>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance1">
+            <CodeVariable name="_tableLayoutInstance1" type="20480" declaredType="info.clearthought.layout.TableLayout"/>
+            <ExpressionOrigin>
+              <ExpressionProvider type="CodeConstructor">
+                <CodeConstructor class="info.clearthought.layout.TableLayout" parameterTypes=""/>
+              </ExpressionProvider>
+            </ExpressionOrigin>
+          </CodeExpression>
+          <StatementProvider type="CodeExpression">
+            <CodeExpression id="1__tableLayoutInstance1"/>
+          </StatementProvider>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setHGap" class="info.clearthought.layout.TableLayout" parameterTypes="int"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="2">
+              <ExpressionOrigin>
+                <Value type="int" value="0"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setVGap" class="info.clearthought.layout.TableLayout" parameterTypes="int"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="3">
+              <ExpressionOrigin>
+                <Value type="int" value="0"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setColumn" class="info.clearthought.layout.TableLayout" parameterTypes="[D"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="4">
+              <ExpressionOrigin>
+                <Value type="[D" editor="de.berlios.nblayoutpack.tablelayout.TableLayoutSupport$DoubleArrayEditor">
+                  <SerializedValue value="-84,-19,0,5,117,114,0,2,91,68,62,-90,-116,20,-85,99,90,30,2,0,0,120,112,0,0,0,7,64,24,0,0,0,0,0,0,-65,-16,0,0,0,0,0,0,64,32,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0"/>
+                </Value>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setRow" class="info.clearthought.layout.TableLayout" parameterTypes="[D"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="5">
+              <ExpressionOrigin>
+                <Value type="[D" editor="de.berlios.nblayoutpack.tablelayout.TableLayoutSupport$DoubleArrayEditor">
+                  <SerializedValue value="-84,-19,0,5,117,114,0,2,91,68,62,-90,-116,20,-85,99,90,30,2,0,0,120,112,0,0,0,12,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,-65,-16,0,0,0,0,0,0,64,24,0,0,0,0,0,0"/>
+                </Value>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1">
+            <CodeVariable name="jPanel1" type="8194" declaredType="javax.swing.JPanel"/>
+            <ExpressionOrigin>
+              <ExpressionProvider type="ComponentRef">
+                <ComponentRef name="jPanel1"/>
+              </ExpressionProvider>
+            </ExpressionOrigin>
+          </CodeExpression>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setLayout" class="java.awt.Container" parameterTypes="java.awt.LayoutManager"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="1__tableLayoutInstance1"/>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="7_columnLabel">
+              <CodeVariable name="columnLabel" type="8194" declaredType="javax.swing.JLabel"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="columnLabel"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="8">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="9">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="10">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="11">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="12">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="13">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="14">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="15_jScrollPane1">
+              <CodeVariable name="jScrollPane1" type="8194" declaredType="javax.swing.JScrollPane"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="jScrollPane1"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="16">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="17">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="18">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="19">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="20">
+                    <ExpressionOrigin>
+                      <Value type="int" value="10"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="21">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="22">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="23_columnParamCombo">
+              <CodeVariable name="columnParamCombo" type="8194" declaredType="javax.swing.JComboBox"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="columnParamCombo"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="24">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="25">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="26">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="27">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="28">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="29">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="30">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="31_addColumnsButton">
+              <CodeVariable name="addColumnsButton" type="8194" declaredType="javax.swing.JButton"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="addColumnsButton"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="32">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="33">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="34">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="35">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="36">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="37">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="38">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="39_columnCountTextField1">
+              <CodeVariable name="columnCountTextField1" type="8194" declaredType="javax.swing.JTextField"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="columnCountTextField1"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="40">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="41">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="42">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="43">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="44">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="45">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="46">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="47_insertColumnsButton">
+              <CodeVariable name="insertColumnsButton" type="8194" declaredType="javax.swing.JButton"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="insertColumnsButton"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="48">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="49">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="50">
+                    <ExpressionOrigin>
+                      <Value type="int" value="7"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="51">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="52">
+                    <ExpressionOrigin>
+                      <Value type="int" value="7"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="53">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="54">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="55_columnCountTextField2">
+              <CodeVariable name="columnCountTextField2" type="8194" declaredType="javax.swing.JTextField"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="columnCountTextField2"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="56">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="57">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="58">
+                    <ExpressionOrigin>
+                      <Value type="int" value="7"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="59">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="60">
+                    <ExpressionOrigin>
+                      <Value type="int" value="7"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="61">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="62">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="63_removeColumnsButton">
+              <CodeVariable name="removeColumnsButton" type="8194" declaredType="javax.swing.JButton"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="removeColumnsButton"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="64">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="65">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="66">
+                    <ExpressionOrigin>
+                      <Value type="int" value="9"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="67">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="68">
+                    <ExpressionOrigin>
+                      <Value type="int" value="9"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="69">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="70">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+      </LayoutCode>
+    </Container>
+    <Container class="javax.swing.JPanel" name="jPanel2">
+      <Properties>
+        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
+          <Border info="org.netbeans.modules.form.compat2.border.MatteColorBorderInfo">
+            <MatteColorBorder bottom="0" left="0" right="0" top="1">
+              <Color PropertyName="color" blue="ff" green="ff" id="white" palette="1" red="ff" type="palette"/>
+            </MatteColorBorder>
+          </Border>
+        </Property>
+      </Properties>
+      <SubComponents>
+        <Component class="javax.swing.JLabel" name="rowLabel">
+          <Properties>
+            <Property name="displayedMnemonic" type="int" value="82"/>
+            <Property name="labelFor" type="java.awt.Component" editor="org.netbeans.modules.form.ComponentChooserEditor">
+              <ComponentRef name="rowTable"/>
+            </Property>
+            <Property name="text" type="java.lang.String" value="Y Rows"/>
+          </Properties>
+        </Component>
+        <Container class="javax.swing.JScrollPane" name="jScrollPane2">
+
+          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
+          <SubComponents>
+            <Component class="javax.swing.JTable" name="rowTable">
+              <Properties>
+                <Property name="toolTipText" type="java.lang.String" value="Doubleclick or press Enter to edit the value"/>
+                <Property name="preferredScrollableViewportSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
+                  <Dimension value="[100, 87]"/>
+                </Property>
+              </Properties>
+            </Component>
+          </SubComponents>
+        </Container>
+        <Component class="javax.swing.JComboBox" name="rowParamCombo">
+          <Properties>
+            <Property name="editable" type="boolean" value="true"/>
+            <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
+              <StringArray count="3">
+                <StringItem index="0" value="FILL"/>
+                <StringItem index="1" value="MINIMUM"/>
+                <StringItem index="2" value="PREFERRED"/>
+              </StringArray>
+            </Property>
+            <Property name="toolTipText" type="java.lang.String" value="Press Enter to apply the value to the selected rows"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JButton" name="addRowsButton">
+          <Properties>
+            <Property name="mnemonic" type="int" value="100"/>
+            <Property name="text" type="java.lang.String" value="Add"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JTextField" name="rowCountTextField1">
+          <Properties>
+            <Property name="columns" type="int" value="3"/>
+            <Property name="text" type="java.lang.String" value="1"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JButton" name="insertRowsButton">
+          <Properties>
+            <Property name="mnemonic" type="int" value="110"/>
+            <Property name="text" type="java.lang.String" value="Insert"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JTextField" name="rowCountTextField2">
+          <Properties>
+            <Property name="columns" type="int" value="3"/>
+            <Property name="text" type="java.lang.String" value="1"/>
+          </Properties>
+        </Component>
+        <Component class="javax.swing.JButton" name="removeRowsButton">
+          <Properties>
+            <Property name="mnemonic" type="int" value="109"/>
+            <Property name="text" type="java.lang.String" value="Remove"/>
+          </Properties>
+        </Component>
+      </SubComponents>
+      <LayoutCode>
+        <CodeStatement>
+          <CodeExpression id="71__tableLayoutInstance">
+            <CodeVariable name="_tableLayoutInstance" type="20480" declaredType="info.clearthought.layout.TableLayout"/>
+            <ExpressionOrigin>
+              <ExpressionProvider type="CodeConstructor">
+                <CodeConstructor class="info.clearthought.layout.TableLayout" parameterTypes=""/>
+              </ExpressionProvider>
+            </ExpressionOrigin>
+          </CodeExpression>
+          <StatementProvider type="CodeExpression">
+            <CodeExpression id="71__tableLayoutInstance"/>
+          </StatementProvider>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="71__tableLayoutInstance"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setHGap" class="info.clearthought.layout.TableLayout" parameterTypes="int"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="72">
+              <ExpressionOrigin>
+                <Value type="int" value="0"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="71__tableLayoutInstance"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setVGap" class="info.clearthought.layout.TableLayout" parameterTypes="int"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="73">
+              <ExpressionOrigin>
+                <Value type="int" value="0"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="71__tableLayoutInstance"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setColumn" class="info.clearthought.layout.TableLayout" parameterTypes="[D"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="74">
+              <ExpressionOrigin>
+                <Value type="[D" editor="de.berlios.nblayoutpack.tablelayout.TableLayoutSupport$DoubleArrayEditor">
+                  <SerializedValue value="-84,-19,0,5,117,114,0,2,91,68,62,-90,-116,20,-85,99,90,30,2,0,0,120,112,0,0,0,7,64,24,0,0,0,0,0,0,-65,-16,0,0,0,0,0,0,64,32,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0"/>
+                </Value>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="71__tableLayoutInstance"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setRow" class="info.clearthought.layout.TableLayout" parameterTypes="[D"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="75">
+              <ExpressionOrigin>
+                <Value type="[D" editor="de.berlios.nblayoutpack.tablelayout.TableLayoutSupport$DoubleArrayEditor">
+                  <SerializedValue value="-84,-19,0,5,117,114,0,2,91,68,62,-90,-116,20,-85,99,90,30,2,0,0,120,112,0,0,0,12,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,24,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,-65,-16,0,0,0,0,0,0,64,24,0,0,0,0,0,0"/>
+                </Value>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2">
+            <CodeVariable name="jPanel2" type="8194" declaredType="javax.swing.JPanel"/>
+            <ExpressionOrigin>
+              <ExpressionProvider type="ComponentRef">
+                <ComponentRef name="jPanel2"/>
+              </ExpressionProvider>
+            </ExpressionOrigin>
+          </CodeExpression>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setLayout" class="java.awt.Container" parameterTypes="java.awt.LayoutManager"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="71__tableLayoutInstance"/>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="77_rowLabel">
+              <CodeVariable name="rowLabel" type="8194" declaredType="javax.swing.JLabel"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="rowLabel"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="78">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="79">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="80">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="81">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="82">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="83">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="84">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="85_jScrollPane2">
+              <CodeVariable name="jScrollPane2" type="8194" declaredType="javax.swing.JScrollPane"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="jScrollPane2"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="86">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="87">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="88">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="89">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="90">
+                    <ExpressionOrigin>
+                      <Value type="int" value="10"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="91">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="92">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="93_rowParamCombo">
+              <CodeVariable name="rowParamCombo" type="8194" declaredType="javax.swing.JComboBox"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="rowParamCombo"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="94">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="95">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="96">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="97">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="98">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="99">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="100">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="101_addRowsButton">
+              <CodeVariable name="addRowsButton" type="8194" declaredType="javax.swing.JButton"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="addRowsButton"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="102">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="103">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="104">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="105">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="106">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="107">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="108">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="109_rowCountTextField1">
+              <CodeVariable name="rowCountTextField1" type="8194" declaredType="javax.swing.JTextField"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="rowCountTextField1"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="110">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="111">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="112">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="113">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="114">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="115">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="116">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="117_insertRowsButton">
+              <CodeVariable name="insertRowsButton" type="8194" declaredType="javax.swing.JButton"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="insertRowsButton"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="118">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="119">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="120">
+                    <ExpressionOrigin>
+                      <Value type="int" value="7"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="121">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="122">
+                    <ExpressionOrigin>
+                      <Value type="int" value="7"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="123">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="124">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="125_rowCountTextField2">
+              <CodeVariable name="rowCountTextField2" type="8194" declaredType="javax.swing.JTextField"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="rowCountTextField2"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="126">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="127">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="128">
+                    <ExpressionOrigin>
+                      <Value type="int" value="7"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="129">
+                    <ExpressionOrigin>
+                      <Value type="int" value="5"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="130">
+                    <ExpressionOrigin>
+                      <Value type="int" value="7"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="131">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="132">
+                    <ExpressionOrigin>
+                      <Value type="int" value="1"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="76_jPanel2"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="133_removeRowsButton">
+              <CodeVariable name="removeRowsButton" type="8194" declaredType="javax.swing.JButton"/>
+              <ExpressionOrigin>
+                <ExpressionProvider type="ComponentRef">
+                  <ComponentRef name="removeRowsButton"/>
+                </ExpressionProvider>
+              </ExpressionOrigin>
+            </CodeExpression>
+            <CodeExpression id="134">
+              <ExpressionOrigin>
+                <ExpressionProvider type="CodeConstructor">
+                  <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+                </ExpressionProvider>
+                <Parameters>
+                  <CodeExpression id="135">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="136">
+                    <ExpressionOrigin>
+                      <Value type="int" value="9"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="137">
+                    <ExpressionOrigin>
+                      <Value type="int" value="3"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="138">
+                    <ExpressionOrigin>
+                      <Value type="int" value="9"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="139">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                  <CodeExpression id="140">
+                    <ExpressionOrigin>
+                      <Value type="int" value="2"/>
+                    </ExpressionOrigin>
+                  </CodeExpression>
+                </Parameters>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+      </LayoutCode>
+    </Container>
+  </SubComponents>
+</Form>

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutCustomizer.java
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutCustomizer.java	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutCustomizer.java	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,799 @@
+package de.berlios.nblayoutpack.tablelayout;
+
+import java.awt.event.*;
+import java.util.*;
+
+import javax.swing.*;
+import javax.swing.event.*;
+import javax.swing.table.*;
+
+import org.openide.ErrorManager;
+
+import info.clearthought.layout.*;
+
+/**
+ * A customizer for TableLayout. It provides two tables for editing columns
+ * and rows settings of TableLayout. Note it works with TableLayoutSupport,
+ * not with TableLayout directly.
+ *
+ * @author Tomas Pavek
+ */
+
+public final class TableLayoutCustomizer extends javax.swing.JPanel {
+
+    private TableLayoutSupport layoutSupport;
+
+    private LayoutTableModel columnTableModel;
+    private LayoutTableModel rowTableModel;
+
+    private int[] selectedColumns;
+    private int[] selectedRows;
+
+    // --------
+    // initialization
+
+    /** Constructor - creates customizer instance for given TableLayoutSupport.
+     */
+    public TableLayoutCustomizer(TableLayoutSupport layoutSupport) {
+        this.layoutSupport = layoutSupport;
+
+        // setup GUI
+        initComponents();
+
+        // set bold font to column count and row count labels
+        java.awt.Font font = columnLabel.getFont();
+        if ((font.getStyle() & java.awt.Font.BOLD) == 0) {
+            font = font.deriveFont(java.awt.Font.BOLD);
+            columnLabel.setFont(font);
+            rowLabel.setFont(font);
+        }
+
+        // initialize table models displaying columns and rows data
+        columnTableModel = new LayoutTableModel();
+        columnTable.setModel(columnTableModel);
+        rowTableModel = new LayoutTableModel();
+        rowTable.setModel(rowTableModel);
+
+        // set width of the first columns (displaying numerical order)
+        columnTable.getColumnModel().getColumn(0).setPreferredWidth(36);
+        rowTable.getColumnModel().getColumn(0).setPreferredWidth(36);
+
+        // setup cell renderers
+        CellRenderer typeCellRenderer = new CellRenderer();
+        columnTable.setDefaultRenderer(Double.class, typeCellRenderer);
+        rowTable.setDefaultRenderer(Double.class, typeCellRenderer);
+
+        CellRenderer numberCellRenderer = new CellRenderer();
+        numberCellRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
+        columnTable.setDefaultRenderer(Integer.class, numberCellRenderer);
+        rowTable.setDefaultRenderer(Integer.class, numberCellRenderer);
+
+        // setup listener for columns
+        Listener columnListener = new Listener(true);
+        columnTable.addMouseListener(columnListener);
+        columnTable.addKeyListener(columnListener);
+        columnTable.getSelectionModel().addListSelectionListener(columnListener);
+        columnParamCombo.getEditor().getEditorComponent()
+            .addKeyListener(columnListener);
+        addColumnsButton.addActionListener(columnListener);
+        columnCountTextField1.addActionListener(columnListener);
+        insertColumnsButton.addActionListener(columnListener);
+        columnCountTextField2.addActionListener(columnListener);
+        removeColumnsButton.addActionListener(columnListener);
+
+        // setup listener for rows
+        Listener rowListener = new Listener(false);
+        rowTable.addMouseListener(rowListener);
+        rowTable.addKeyListener(rowListener);
+        rowTable.getSelectionModel().addListSelectionListener(rowListener);
+        rowParamCombo.getEditor().getEditorComponent()
+            .addKeyListener(rowListener);
+        addRowsButton.addActionListener(rowListener);
+        rowCountTextField1.addActionListener(rowListener);
+        insertRowsButton.addActionListener(rowListener);
+        rowCountTextField2.addActionListener(rowListener);
+        removeRowsButton.addActionListener(rowListener);
+
+        // fill in the tables
+        updateColumns();
+        updateRows();
+    }
+
+    /** Updates column table according to current data in the underlying
+     * TableLayoutSupport.
+     */
+    void updateColumns() {
+        // get new data from layout support
+        double[] columns = layoutSupport.getColumns();
+
+        // update info label
+        columnLabel.setText(Integer.toString(columns.length) + "  Column"
+                            + (columns.length == 1 ? "" : "s"));
+
+        if (selectedColumns == null
+            && columnTableModel.getData() != null
+            && columns.length == columnTableModel.getRowCount())
+        {   // remember current selection to restore it after new data is set
+            selectedColumns = getSelectedIndices(
+                                columnTable.getSelectionModel());
+        }
+
+        if ((selectedColumns == null || selectedColumns.length == 0)
+            && columns.length > 0)
+        {   // just the first row in the table will be selected
+            selectedColumns = new int[] { 0 };
+        }
+
+        // add new data to table
+        columnTableModel.setData(columns);
+
+        if (columns.length == 0)
+            columnParamCombo.getEditor().setItem("");
+        else { // restore selection
+            ListSelectionModel selection = columnTable.getSelectionModel();
+            for (int i=0; i < selectedColumns.length; i++) {
+                int sel = selectedColumns[i];
+                selection.addSelectionInterval(sel, sel);
+            }
+            columnTable.getColumnModel().getSelectionModel()
+                                          .setSelectionInterval(1, 1);
+        }
+
+        selectedColumns = null;
+    }
+
+    /** Updates row table according to current data in the underlying
+     * TableLayoutSupport.
+     */
+    void updateRows() {
+        // get new data layout support
+        double[] rows = layoutSupport.getRows();
+
+        // update info label
+        rowLabel.setText(Integer.toString(rows.length) + "  Row"
+                         + (rows.length == 1 ? "" : "s"));
+
+        if (selectedRows == null
+            && rowTableModel.getData() != null
+            && rows.length == rowTableModel.getRowCount())
+        {   // remember current selection to restore it after new data is set
+            selectedRows = getSelectedIndices(rowTable.getSelectionModel());
+        }
+
+        if ((selectedRows == null || selectedRows.length == 0)
+            && rows.length > 0)
+        {   // just the first row in the table will be selected
+            selectedRows = new int[] { 0 };
+        }
+
+        // add new data to table
+        rowTableModel.setData(rows);
+
+        if (rows.length == 0)
+            rowParamCombo.getEditor().setItem("");
+        else { // restore selection
+            ListSelectionModel selection = rowTable.getSelectionModel();
+            for (int i=0; i < selectedRows.length; i++) {
+                int sel = selectedRows[i];
+                selection.addSelectionInterval(sel, sel);
+            }
+            rowTable.getColumnModel().getSelectionModel()
+                                       .setSelectionInterval(1, 1);
+        }
+
+        selectedRows = null;
+    }
+
+    // ----------
+    // data setters
+
+    /** Changes selected columns or rows in the underlying TableLayoutSupport
+     * according to given value.
+     */
+    void changeData(boolean columns, double value, int[] selected) {
+        double[] oldData =
+            (columns ? columnTableModel : rowTableModel).getData();
+        double[] newData = new double[oldData.length];
+
+        int si = 0;
+        for (int i=0; i < oldData.length; i++)
+            if (si < selected.length && selected[si] == i) {
+                newData[i] = value;
+                si++;
+            }
+            else newData[i] = oldData[i];
+
+        setData(columns, newData, selected);
+    }
+
+    /** Adds new columns or rows to the underlying TableLayoutSupport.
+     */
+    void addData(boolean columns, double value, int fromIndex, int count) {
+        double[] oldData =
+            (columns ? columnTableModel : rowTableModel).getData();
+        double[] newData = new double[oldData.length + count];
+        int[] select = new int[count];
+
+        for (int i=0; i < fromIndex; i++)
+            newData[i] = oldData[i];
+        for (int i=0; i < count; i++) {
+            newData[i + fromIndex] = value;
+            select[i] = i + fromIndex;
+        }
+        for (int i=fromIndex; i < oldData.length; i++)
+            newData[i + count] = oldData[i];
+
+        setData(columns, newData, select);
+
+        // adjust components positions
+        for (int i=0, n=layoutSupport.getComponentCount(); i < n; i++) {
+            TableLayoutSupport.TableLayoutSupportConstraints constr =
+                (TableLayoutSupport.TableLayoutSupportConstraints)layoutSupport.getConstraints(i);
+            try {
+                if (columns) {
+                    if(constr.right >= fromIndex){
+                      constr.right += count;
+                    }
+                    if(constr.left >= fromIndex){
+                      constr.left += count;
+                    }
+                }
+                else {
+                    if(constr.bottom >= fromIndex){
+                      constr.bottom += count;
+                    }
+                    if(constr.top >= fromIndex){
+                      constr.top += count;
+                    }
+                }
+            }
+            catch (Exception ex) {} // ignore, should not happen
+        }
+    }
+
+    /** Removes selected columns or rows from the underlying TableLayoutSupport.
+     */
+    void removeData(boolean columns, int[] selected) {
+        double[] oldData =
+            (columns ? columnTableModel : rowTableModel).getData();
+        double[] newData = new double[oldData.length - selected.length];
+
+        int si = 0;
+        for (int i=0; i < oldData.length; i++)
+            if (si < selected.length && selected[si] == i)
+                si++;
+            else
+                newData[i - si] = oldData[i];
+
+        int[] select;
+        if (newData.length > 0) {
+            int selIndex = selected[0];
+            if (selIndex >= newData.length)
+                selIndex = newData.length - 1;
+            select = new int[] { selIndex };
+        }
+        else select = null;
+
+        setData(columns, newData, select);
+
+        // adjust components positions
+        for (int i=selected.length-1; i >= 0; i--) {
+            int removedIndex = selected[i];
+            for (int j=0, n=layoutSupport.getComponentCount(); j < n; j++) {
+                TableLayoutSupport.TableLayoutSupportConstraints constr =
+                    (TableLayoutSupport.TableLayoutSupportConstraints) layoutSupport.getConstraints(j);
+                try {
+                    if (columns) {
+                        if (constr.left > removedIndex){
+                          constr.left--;
+                        }
+                        if (constr.right > removedIndex){
+                          constr.right--;
+                        }
+                    }
+                    else {
+                        if (constr.top > removedIndex){
+                          constr.top--;
+                        }
+                        if (constr.bottom > removedIndex){
+                          constr.bottom--;
+                        }
+                    }
+                }
+                catch (Exception ex) {} // ignore, should not happen
+            }
+        }
+    }
+
+    private void setData(boolean columns, double[] data, int[] select) {
+      try{
+        if (columns) {
+            selectedColumns = select;
+            layoutSupport.getProperty("columns").setValue(data);
+        }
+        else {
+            selectedRows = select;
+            layoutSupport.getProperty("rows").setValue(data);
+        }
+      }
+      catch(Exception e){
+        ErrorManager.getDefault().notify(e);
+      }
+    }
+
+    // ----------
+    // data getters (static methods)
+
+    static String getStringFromValue(double value) {
+        String str;
+        if (value == TableLayout.PREFERRED)
+            str = "PREFERRED";
+        else if (value == TableLayout.FILL)
+            str = "FILL";
+        else if (value == TableLayout.MINIMUM)
+            str = "MINIMUM";
+        else
+            str = Double.toString(value);
+        return str;
+    }
+
+    static double getValueFromString(String str) {
+        double value;
+        if (str.equalsIgnoreCase("FILL"))
+            value = TableLayout.FILL;
+        else if (str.equalsIgnoreCase("PREF")
+                 || str.equalsIgnoreCase("PREFERRED"))
+            value = TableLayout.PREFERRED;
+        else if (str.equalsIgnoreCase("MIN")
+                 || str.equalsIgnoreCase("MINIMUM"))
+            value = TableLayout.MINIMUM;
+        else
+            value = Double.parseDouble(str);
+        return value;
+    }
+
+    static int[] getSelectedIndices(ListSelectionModel selection) {
+        int i1 = selection.getMinSelectionIndex();
+        int i2 = selection.getMaxSelectionIndex();
+        if (i1 < 0 || i2 < i1)
+            return new int[0]; // nothing selected
+
+        int[] indices = new int[i2 - i1 + 1];
+        int n = 0;
+        for (int i=i1; i <= i2; i++)
+            if (selection.isSelectedIndex(i))
+                indices[n++] = i;
+
+        if (n < indices.length) {
+            int[] temp = new int[n];
+            System.arraycopy(indices, 0, temp, 0, n);
+            indices = temp;
+        }
+
+        return indices;
+    }
+
+    // ----------
+    // inner classes
+
+    /* A model for tables displaying columns and rows of the customized
+     * TableLayout.
+     */
+    private static class LayoutTableModel extends AbstractTableModel{
+        private double[] layoutData;
+
+        void setData(double[] data){
+            layoutData = data;
+            fireTableDataChanged();
+        }
+
+        double[] getData() {
+            return layoutData;
+        }
+
+        // --------
+
+        public int getRowCount(){
+          return layoutData == null ? 0 : layoutData.length;
+        }
+
+        public int getColumnCount(){
+            return 2;
+        }
+
+        public Object getValueAt(int row, int column){
+            switch (column) {
+                case 0: return new Integer(row);
+                case 1: return new Double(layoutData[row]);
+            }
+            throw new ArrayIndexOutOfBoundsException();
+        }
+
+        public Class getColumnClass(int column){
+            switch (column) {
+                case 0: return Integer.class;
+                case 1: return Double.class;
+            }
+            throw new ArrayIndexOutOfBoundsException();
+        }
+
+        public String getColumnName(int column){
+            switch (column) {
+                case 0:
+                case 1: return "";
+            }
+            throw new ArrayIndexOutOfBoundsException();
+        }
+    }
+
+    // --------
+
+    /* A simple table cell renderer converting numbers to descriptive text.
+     */
+    private static class CellRenderer extends DefaultTableCellRenderer{
+      protected void setValue(Object value){
+        if (value instanceof Double) {
+          double val = ((Double)value).doubleValue();
+          if (val == TableLayout.PREFERRED)
+            value = "PREFERRED";
+          else if (val == TableLayout.FILL)
+            value = "FILL";
+          else if (val == TableLayout.MINIMUM)
+            value = "MINIMUM";
+          else if (val < 1.0)
+            value = Integer.toString((int)(val * 100.0)) + " %";
+          else
+            value = Integer.toString((int)val) + " pts";
+        }
+        String str = getHorizontalAlignment() == RIGHT ? value.toString() + "  " :
+                                                         "  " + value.toString();
+        super.setValue(str);
+      }
+    }
+    
+    // ----------
+    
+    /* A listener class - listening to various events on components.
+     */
+    private class Listener extends MouseAdapter
+    implements ListSelectionListener, KeyListener,
+    ActionListener {
+      private boolean onColumns; // watch columns (true) or rows (false)
+      
+      private Listener(boolean onColumns) {
+        this.onColumns = onColumns;
+      }
+      
+      // ------
+      
+      private JComboBox getParamCombo() {
+        return onColumns ? columnParamCombo : rowParamCombo;
+      }
+      private JTable getTable() {
+        return onColumns ? columnTable : rowTable;
+      }
+      private LayoutTableModel getTableModel() {
+        return onColumns ? columnTableModel : rowTableModel;
+      }
+      private JButton getAddButton() {
+        return onColumns ? addColumnsButton : addRowsButton;
+      }
+      private JTextField getAddTextField() {
+        return onColumns ? columnCountTextField1 : rowCountTextField1;
+      }
+      private JButton getInsertButton() {
+        return onColumns ? insertColumnsButton : insertRowsButton;
+      }
+      private JTextField getInsertTextField() {
+        return onColumns ? columnCountTextField2 : rowCountTextField2;
+      }
+      private JButton getRemoveButton() {
+        return onColumns ? removeColumnsButton : removeRowsButton;
+      }
+      
+      // -----
+      
+      // table selection change
+      public void valueChanged(ListSelectionEvent e) {
+        if (!e.getValueIsAdjusting()) {
+          ListSelectionModel selection = (ListSelectionModel) e.getSource();
+          int startSelect = selection.getMinSelectionIndex();
+          int endSelect = selection.getMaxSelectionIndex();
+          
+          if (startSelect >= 0) {
+            Object value = getTableModel().getValueAt(startSelect, 1);
+            double val = ((Double)value).doubleValue();
+            getParamCombo().getEditor().setItem(getStringFromValue(val));
+            
+            getInsertButton().setEnabled(startSelect == endSelect);
+            getInsertTextField().setEnabled(startSelect == endSelect);
+            getRemoveButton().setEnabled(true);
+          }
+          else {
+            getInsertButton().setEnabled(false);
+            getInsertTextField().setEnabled(false);
+            getRemoveButton().setEnabled(false);
+          }
+        }
+      }
+      
+      // mouse click on table
+      public void mouseClicked(MouseEvent e) {
+        if (e.getClickCount() == 2
+        && (e.getModifiers() & InputEvent.BUTTON1_MASK)
+        == InputEvent.BUTTON1_MASK) {   // left mouse button doubleclick
+          editValue();
+          e.consume();
+        }
+      }
+      
+      // key press in table or in editing combobox
+      public void keyPressed(KeyEvent e) {
+        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
+          if (e.getSource() == getTable())
+            editValue();
+          else if (e.getSource() == getParamCombo().getEditor()
+          .getEditorComponent())
+            applyValue();
+          
+          e.consume();
+        }
+        else if (e.getSource() == getTable()) {
+          if (e.getKeyCode() == KeyEvent.VK_DELETE) {
+            removeValues();
+            e.consume();
+          }
+          else if (e.getKeyCode() == KeyEvent.VK_INSERT) {
+            insertValue();
+            e.consume();
+          }
+        }
+      }
+      public void keyTyped(KeyEvent e) {} // not interested in
+      public void keyReleased(KeyEvent e) {} // not interested in
+      
+      // Add, Insert or Remove button press
+      public void actionPerformed(ActionEvent e) {
+        Object source = e.getSource();
+        if (source == getAddButton() || source == getAddTextField())
+          addValue();
+        else if (source == getInsertButton()
+        || source == getInsertTextField())
+          insertValue();
+        else if (source == getRemoveButton())
+          removeValues();
+      }
+      
+      // -------
+      
+      private void editValue() {
+        java.awt.Component editComp =
+        getParamCombo().getEditor().getEditorComponent();
+        
+        editComp.requestFocus();
+        if (editComp instanceof javax.swing.text.JTextComponent)
+          ((javax.swing.text.JTextComponent)editComp).selectAll();
+      }
+      
+      private void applyValue() {
+        int[] selected = getSelectedIndices(getTable().getSelectionModel());
+        if (selected.length > 0) {
+          Object obj = getParamCombo().getEditor().getItem();
+          double value;
+          try {
+            value = getValueFromString(obj.toString());
+          }
+          catch (NumberFormatException ex) { // silently ignore
+            return;
+          }
+          
+          changeData(onColumns, value, selected);
+          getTable().requestFocus();
+        }
+        else if (getTableModel().getRowCount() == 0)
+          addValue();
+      }
+      
+      private void addValue() {
+        Object obj = getParamCombo().getEditor().getItem();
+        double value;
+        try {
+          value = getValueFromString(obj.toString());
+        }
+        catch (NumberFormatException ex) { // silently ignore
+          return;
+        }
+        
+        int count;
+        try {
+          count = Integer.parseInt(getAddTextField().getText());
+        }
+        catch (NumberFormatException ex) { // silently ignore
+          return;
+        }
+        
+        addData(onColumns, value, getTableModel().getRowCount(), count);
+        getTable().requestFocus();
+      }
+      
+      private void insertValue() {
+        Object obj = getParamCombo().getEditor().getItem();
+        double value;
+        try {
+          value = getValueFromString(obj.toString());
+        }
+        catch (NumberFormatException ex) { // silently ignore
+          return;
+        }
+        
+        int count;
+        try {
+          count = Integer.parseInt(getInsertTextField().getText());
+        }
+        catch (NumberFormatException ex) { // silently ignore
+          return;
+        }
+        
+        int index = getTable().getSelectionModel().getMinSelectionIndex();
+        if (index >= 0) {
+          addData(onColumns, value, index, count);
+          getTable().requestFocus();
+        }
+      }
+      
+      private void removeValues() {
+        int[] selected = getSelectedIndices(getTable().getSelectionModel());
+        if (selected.length > 0) {
+          removeData(onColumns, selected);
+          getTable().requestFocus();
+        }
+      }
+    }
+    
+    // ---------
+    // GUI
+    
+    private void initComponents() {//GEN-BEGIN:initComponents
+      info.clearthought.layout.TableLayout _tableLayoutInstance;
+      info.clearthought.layout.TableLayout _tableLayoutInstance1;
+      
+      jPanel1 = new javax.swing.JPanel();
+      columnLabel = new javax.swing.JLabel();
+      jScrollPane1 = new javax.swing.JScrollPane();
+      columnTable = new javax.swing.JTable();
+      columnParamCombo = new javax.swing.JComboBox();
+      addColumnsButton = new javax.swing.JButton();
+      columnCountTextField1 = new javax.swing.JTextField();
+      insertColumnsButton = new javax.swing.JButton();
+      columnCountTextField2 = new javax.swing.JTextField();
+      removeColumnsButton = new javax.swing.JButton();
+      jPanel2 = new javax.swing.JPanel();
+      rowLabel = new javax.swing.JLabel();
+      jScrollPane2 = new javax.swing.JScrollPane();
+      rowTable = new javax.swing.JTable();
+      rowParamCombo = new javax.swing.JComboBox();
+      addRowsButton = new javax.swing.JButton();
+      rowCountTextField1 = new javax.swing.JTextField();
+      insertRowsButton = new javax.swing.JButton();
+      rowCountTextField2 = new javax.swing.JTextField();
+      removeRowsButton = new javax.swing.JButton();
+      
+      setLayout(new java.awt.GridLayout(2, 1));
+      
+      _tableLayoutInstance1 = new info.clearthought.layout.TableLayout();
+      _tableLayoutInstance1.setHGap(0);
+      _tableLayoutInstance1.setVGap(0);
+      _tableLayoutInstance1.setColumn(new double[]{6,info.clearthought.layout.TableLayout.FILL,8,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,6});
+      _tableLayoutInstance1.setRow(new double[]{6,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,info.clearthought.layout.TableLayout.FILL,6});
+      jPanel1.setLayout(_tableLayoutInstance1);
+      
+      jPanel1.setBorder(new javax.swing.border.MatteBorder(new java.awt.Insets(0, 0, 1, 0), java.awt.Color.gray));
+      columnLabel.setDisplayedMnemonic('C');
+      columnLabel.setLabelFor(columnTable);
+      columnLabel.setText("X Columns");
+      jPanel1.add(columnLabel, new info.clearthought.layout.TableLayoutConstraints(1, 1, 5, 1, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      columnTable.setToolTipText("Doubleclick or press Enter to edit the value");
+      columnTable.setPreferredScrollableViewportSize(new java.awt.Dimension(100, 87));
+      jScrollPane1.setViewportView(columnTable);
+      
+      jPanel1.add(jScrollPane1, new info.clearthought.layout.TableLayoutConstraints(1, 3, 1, 10, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      columnParamCombo.setEditable(true);
+      columnParamCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FILL", "MINIMUM", "PREFERRED" }));
+      columnParamCombo.setToolTipText("Press Enter to apply the value to the selected columns");
+      jPanel1.add(columnParamCombo, new info.clearthought.layout.TableLayoutConstraints(3, 3, 5, 3, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      addColumnsButton.setMnemonic('A');
+      addColumnsButton.setText("Add");
+      jPanel1.add(addColumnsButton, new info.clearthought.layout.TableLayoutConstraints(3, 5, 3, 5, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      columnCountTextField1.setColumns(3);
+      columnCountTextField1.setText("1");
+      jPanel1.add(columnCountTextField1, new info.clearthought.layout.TableLayoutConstraints(5, 5, 5, 5, info.clearthought.layout.TableLayout.CENTER, info.clearthought.layout.TableLayout.CENTER));
+      
+      insertColumnsButton.setMnemonic('I');
+      insertColumnsButton.setText("Insert");
+      jPanel1.add(insertColumnsButton, new info.clearthought.layout.TableLayoutConstraints(3, 7, 3, 7, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      columnCountTextField2.setColumns(3);
+      columnCountTextField2.setText("1");
+      jPanel1.add(columnCountTextField2, new info.clearthought.layout.TableLayoutConstraints(5, 7, 5, 7, info.clearthought.layout.TableLayout.CENTER, info.clearthought.layout.TableLayout.CENTER));
+      
+      removeColumnsButton.setMnemonic('e');
+      removeColumnsButton.setText("Remove");
+      jPanel1.add(removeColumnsButton, new info.clearthought.layout.TableLayoutConstraints(3, 9, 3, 9, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      add(jPanel1);
+      
+      _tableLayoutInstance = new info.clearthought.layout.TableLayout();
+      _tableLayoutInstance.setHGap(0);
+      _tableLayoutInstance.setVGap(0);
+      _tableLayoutInstance.setColumn(new double[]{6,info.clearthought.layout.TableLayout.FILL,8,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,6});
+      _tableLayoutInstance.setRow(new double[]{6,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,6,info.clearthought.layout.TableLayout.PREFERRED,info.clearthought.layout.TableLayout.FILL,6});
+      jPanel2.setLayout(_tableLayoutInstance);
+      
+      jPanel2.setBorder(new javax.swing.border.MatteBorder(new java.awt.Insets(1, 0, 0, 0), java.awt.Color.white));
+      rowLabel.setDisplayedMnemonic('R');
+      rowLabel.setLabelFor(rowTable);
+      rowLabel.setText("Y Rows");
+      jPanel2.add(rowLabel, new info.clearthought.layout.TableLayoutConstraints(1, 1, 5, 1, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      rowTable.setToolTipText("Doubleclick or press Enter to edit the value");
+      rowTable.setPreferredScrollableViewportSize(new java.awt.Dimension(100, 87));
+      jScrollPane2.setViewportView(rowTable);
+      
+      jPanel2.add(jScrollPane2, new info.clearthought.layout.TableLayoutConstraints(1, 3, 1, 10, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      rowParamCombo.setEditable(true);
+      rowParamCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FILL", "MINIMUM", "PREFERRED" }));
+      rowParamCombo.setToolTipText("Press Enter to apply the value to the selected rows");
+      jPanel2.add(rowParamCombo, new info.clearthought.layout.TableLayoutConstraints(3, 3, 5, 3, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      addRowsButton.setMnemonic('d');
+      addRowsButton.setText("Add");
+      jPanel2.add(addRowsButton, new info.clearthought.layout.TableLayoutConstraints(3, 5, 3, 5, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      rowCountTextField1.setColumns(3);
+      rowCountTextField1.setText("1");
+      jPanel2.add(rowCountTextField1, new info.clearthought.layout.TableLayoutConstraints(5, 5, 5, 5, info.clearthought.layout.TableLayout.CENTER, info.clearthought.layout.TableLayout.CENTER));
+      
+      insertRowsButton.setMnemonic('n');
+      insertRowsButton.setText("Insert");
+      jPanel2.add(insertRowsButton, new info.clearthought.layout.TableLayoutConstraints(3, 7, 3, 7, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      rowCountTextField2.setColumns(3);
+      rowCountTextField2.setText("1");
+      jPanel2.add(rowCountTextField2, new info.clearthought.layout.TableLayoutConstraints(5, 7, 5, 7, info.clearthought.layout.TableLayout.CENTER, info.clearthought.layout.TableLayout.CENTER));
+      
+      removeRowsButton.setMnemonic('m');
+      removeRowsButton.setText("Remove");
+      jPanel2.add(removeRowsButton, new info.clearthought.layout.TableLayoutConstraints(3, 9, 3, 9, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+      
+      add(jPanel2);
+      
+    }//GEN-END:initComponents
+
+    // Variables declaration - do not modify//GEN-BEGIN:variables
+    private javax.swing.JButton addColumnsButton;
+    private javax.swing.JButton addRowsButton;
+    private javax.swing.JTextField columnCountTextField1;
+    private javax.swing.JTextField columnCountTextField2;
+    private javax.swing.JLabel columnLabel;
+    private javax.swing.JComboBox columnParamCombo;
+    private javax.swing.JTable columnTable;
+    private javax.swing.JButton insertColumnsButton;
+    private javax.swing.JButton insertRowsButton;
+    private javax.swing.JPanel jPanel1;
+    private javax.swing.JPanel jPanel2;
+    private javax.swing.JScrollPane jScrollPane1;
+    private javax.swing.JScrollPane jScrollPane2;
+    private javax.swing.JButton removeColumnsButton;
+    private javax.swing.JButton removeRowsButton;
+    private javax.swing.JTextField rowCountTextField1;
+    private javax.swing.JTextField rowCountTextField2;
+    private javax.swing.JLabel rowLabel;
+    private javax.swing.JComboBox rowParamCombo;
+    private javax.swing.JTable rowTable;
+    // End of variables declaration//GEN-END:variables
+}

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutIntrospector.java
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutIntrospector.java	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutIntrospector.java	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,177 @@
+/*
+ * TableLayoutIntrospector.java
+ *
+ * Created on December 23, 2004, 11:37 PM
+ */
+
+package de.berlios.nblayoutpack.tablelayout;
+
+import java.awt.*;
+import java.lang.reflect.*;
+
+import org.openide.ErrorManager;
+
+import info.clearthought.layout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class TableLayoutIntrospector{
+
+  private static Constructor constrConstructor;
+  private static Constructor layoutConstructor;
+  private static Method setHGapMethod;
+  private static Method setVGapMethod;
+  private static Method setColumnMethod;
+  private static Method setRowMethod;
+  private static Method calculateSizeMethod;
+  private static Field crSizeField;
+  private static Field crOffsetField;
+
+  /** Creates a new instance of TableLayoutIntrospector */
+  private TableLayoutIntrospector(){
+  }
+  
+  public static Constructor getConstraintsConstructor(){
+    if(constrConstructor == null){
+      try{
+        constrConstructor = TableLayoutConstraints.class.getConstructor(
+            new Class[]{Integer.TYPE, Integer.TYPE, Integer.TYPE, Integer.TYPE,
+                        Integer.TYPE, Integer.TYPE});
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return constrConstructor;
+  }
+  
+  public static Constructor getLayoutConstructor(){
+    if(layoutConstructor == null){
+      try{
+        layoutConstructor = TableLayout.class.getConstructor(new Class[0]);
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return layoutConstructor;
+  }
+  
+  public static Method getSetHGapMethod(){
+    if(setHGapMethod == null){
+      try{
+        setHGapMethod = TableLayout.class.getMethod("setHGap", new Class[]{int.class});
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return setHGapMethod;
+  }
+  
+  public static Method getSetVGapMethod(){
+    if(setVGapMethod == null){
+      try{
+        setVGapMethod = TableLayout.class.getMethod("setVGap", new Class[]{int.class});
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return setVGapMethod;
+  }
+  
+  public static Method getSetColumnMethod(){
+    if(setColumnMethod == null){
+      try{
+        setColumnMethod = TableLayout.class.getMethod("setColumn", new Class[]{double[].class});
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return setColumnMethod;
+  }
+  
+  public static Method getSetRowMethod(){
+    if(setRowMethod == null){
+      try{
+        setRowMethod = TableLayout.class.getMethod("setRow", new Class[]{double[].class});
+      }
+      catch(NoSuchMethodException e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    return setRowMethod;
+  }
+  
+  public static int[][] getCrSize(TableLayout tableLayout){
+    if(crSizeField == null){
+      try{
+        crSizeField = TableLayout.class.getDeclaredField("crSize");
+        crSizeField.setAccessible(true);
+      }
+      catch(Exception e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    int[][] result = null;
+    try{
+      if(crSizeField == null){
+        return result;
+      }
+      result = (int[][])crSizeField.get(tableLayout);
+    }
+    catch(Exception e){
+      ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+    }
+    return result;
+  }
+  
+  public static int[][] getCrOffset(TableLayout tableLayout){
+    if(crOffsetField == null){
+      try{
+        crOffsetField = TableLayout.class.getDeclaredField("crOffset");
+        crOffsetField.setAccessible(true);
+      }
+      catch(Exception e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    int[][] result = null;
+    try{
+      if(crOffsetField == null){
+        return result;
+      }
+      result = (int[][])crOffsetField.get(tableLayout);
+    }
+    catch(Exception e){
+      ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+    }
+    return result;
+  }
+  
+  public static void calculateSize(TableLayout tableLayout, Container container){
+    if(calculateSizeMethod == null){
+      try{
+        calculateSizeMethod = TableLayout.class.getDeclaredMethod("calculateSize", new Class[]{Container.class});
+        calculateSizeMethod.setAccessible(true);
+      }
+      catch(Exception e){
+        ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+      }
+    }
+    try{
+      if(calculateSizeMethod == null){
+        return;
+      }
+      calculateSizeMethod.invoke(tableLayout, new Object[]{container});
+    }
+    catch(Exception e){
+      ErrorManager.getDefault().notify(ErrorManager.INFORMATIONAL, e);
+    }
+  }
+  
+}

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutModule.java
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutModule.java	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutModule.java	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,52 @@
+package de.berlios.nblayoutpack.tablelayout;
+
+import org.openide.modules.ModuleInstall;
+
+import org.netbeans.modules.form.layoutsupport.LayoutSupportRegistry;
+
+/** Manages a module's lifecycle.
+ * Remember that an installer is optional and often not needed at all.
+ *
+ * @author Illya Kysil
+ */
+public class TableLayoutModule extends ModuleInstall{
+  
+  public void restored(){
+    LayoutSupportRegistry.registerSupportForLayout(
+      "info.clearthought.layout.TableLayout",
+      "de.berlios.nblayoutpack.tablelayout.TableLayoutSupport"
+    );
+  }
+  
+  // Less commonly needed:
+    /*
+    public boolean closing() {
+        // return false if cannot close now
+        return true;
+    }
+    public void close() {
+        // shut down stuff
+    }
+     */
+  
+  // Generally the methods below should be avoided in favor of restored():
+    /*
+    // By default, do nothing but call restored().
+    public void installed() {
+  restored();
+    }
+     
+    // By default, do nothing.
+    public void uninstalled() {
+    }
+     
+    // By default, call restored().
+    public void updated(int release, String specVersion) {
+    }
+     */
+  
+  // It is no longer recommended to override Externalizable methods
+  // (readExternal and writeExternal). See the Modules API section on
+  // "installation-clean" modules for an explanation.
+  
+}

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutSupport.java
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutSupport.java	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/TableLayoutSupport.java	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,1286 @@
+/*
+ * TableLayoutSupport.java
+ *
+ * Created on December 19, 2004, 7:17 PM
+ */
+
+package de.berlios.nblayoutpack.tablelayout;
+
+import java.awt.*;
+import java.beans.*;
+import java.lang.reflect.*;
+import java.io.IOException;
+import java.text.*;
+import java.util.*;
+
+import javax.swing.*;
+
+import org.openide.ErrorManager;
+import org.openide.explorer.propertysheet.editors.*;
+import org.openide.nodes.*;
+import org.openide.util.Utilities;
+
+import org.netbeans.modules.form.*;
+import org.netbeans.modules.form.codestructure.*;
+import org.netbeans.modules.form.layoutsupport.*;
+
+import info.clearthought.layout.*;
+
+import de.berlios.nblayoutpack.tablelayout.converter.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class TableLayoutSupport extends AbstractLayoutSupport{
+  
+  /** The icon for TableLayout. */
+  private static String iconURL =
+      "de/berlios/nblayoutpack/tablelayout/resources/tablelayout16.png"; // NOI18N
+  /** The icon for TableLayout. */
+  private static String icon32URL =
+      "de/berlios/nblayoutpack/tablelayout/resources/tablelayout32.png"; // NOI18N
+
+  private TableLayoutCustomizer layoutCustomizer;
+  private JDialog customizerDialog;
+
+  /** Creates a new instance of TableLayoutSupport */
+  public TableLayoutSupport(){
+  }
+  
+  public Class getSupportedClass(){
+    return TableLayout.class;
+  }
+  
+  /** Provides an icon to be used for the layout node in Component
+   * Inspector. Only 16x16 color icon is required.
+   * @param type is one of BeanInfo constants: ICON_COLOR_16x16,
+   *        ICON_COLOR_32x32, ICON_MONO_16x16, ICON_MONO_32x32
+   * @return icon to be displayed for node in Component Inspector
+   */
+  public Image getIcon(int type){
+    switch (type) {
+      case BeanInfo.ICON_COLOR_16x16:
+      case BeanInfo.ICON_MONO_16x16:
+        return Utilities.loadImage(iconURL);
+      default:
+        return Utilities.loadImage(icon32URL);
+    }
+  }
+  
+  /** Returns a class of a customizer for the layout manager being used as
+   * a JavaBean. The class should be a java.awt.Component and
+   * java.beans.Customizer.
+   * @return layout bean customizer class, null if no customizer is provided
+   */
+  public Class getCustomizerClass() {
+    return TableLayoutCustomizer.class;
+  }
+  
+  /** Returns an instance of a special customizer provided by the layout
+   * support delegate. Since its creation is under full control, it can use
+   * any interface, not necessarily the cumbersome java.beans.Customizer.
+   * It can operate on metadata level (unlike the bean customizer which
+   * works only with layout manager bean instance).
+   * @return instance of layout support customizer
+   */
+  public Component getSupportCustomizer(){
+    if(layoutCustomizer == null || customizerDialog == null){
+      layoutCustomizer = new TableLayoutCustomizer(this);
+      customizerDialog = createCustomizerDialog();
+    }
+    return customizerDialog;
+  }
+  
+  /** This method is called after a property of the layout is changed by
+   * the user. Subclasses may check whether the layout is valid after the
+   * change and throw PropertyVetoException if the change should be reverted.
+   * We use this method just to notify the customizer about the change.
+   * @param ev PropertyChangeEvent object describing the change
+   */
+  public void acceptContainerLayoutChange(java.beans.PropertyChangeEvent ev)
+  throws java.beans.PropertyVetoException{
+    super.acceptContainerLayoutChange(ev);
+    if(layoutCustomizer != null){
+      layoutCustomizer.updateColumns();
+      layoutCustomizer.updateRows();
+    }
+  }
+  
+  public LayoutConstraints createDefaultConstraints(){
+    return new TableLayoutSupportConstraints();
+  }
+  
+  /** Called from createComponentCode method, creates code for a component
+   * layout constraints (opposite to readConstraintsCode).
+   * @param constrCode CodeGroup to be filled with constraints code; not
+   *        needed here because AbsoluteConstraints object is represented
+   *        only by a single constructor code expression and no statements
+   * @param constr layout constraints metaobject representing the constraints
+   * @param compExp CodeExpression object representing the component; not
+   *        needed here
+   * @return created CodeExpression representing the layout constraints
+   */
+  protected CodeExpression createConstraintsCode(CodeGroup constrCode,
+  LayoutConstraints constr, CodeExpression compExp, int index){
+    if(!(constr instanceof TableLayoutSupportConstraints))
+      return null;
+    
+    TableLayoutSupportConstraints tlsConstr = (TableLayoutSupportConstraints)constr;
+    // code expressions for constructor parameters are created in
+    // TableLayoutSupportConstraints
+    CodeExpression[] params = tlsConstr.createPropertyExpressions(getCodeStructure());
+    return getCodeStructure().createExpression(TableLayoutIntrospector.getConstraintsConstructor(), params);
+  }
+  
+  protected LayoutConstraints readConstraintsCode(CodeExpression constrExp, CodeGroup constrCode, CodeExpression compExp){
+    TableLayoutSupportConstraints constr = new TableLayoutSupportConstraints();
+    // reading is done in TableLayoutSupportConstraints
+    constr.readCodeExpression(constrExp, constrCode);
+    return constr;
+  }
+  
+  protected static ResourceBundle getBundle(){
+    return org.openide.util.NbBundle.getBundle(TableLayoutSupport.class);
+  }
+
+  private FormProperty[] properties;
+  
+  protected FormProperty[] getProperties(){
+    if(properties == null) {
+      properties = createProperties();
+    }
+    return properties;
+  }
+
+  public Node.Property getProperty(String propName){
+    FormProperty[] props = getProperties();
+    for(int i = 0; i < props.length; i++){
+      if(props[i].getName().equals(propName)){
+        return props[i];
+      }
+    }
+    return null;
+  }
+  
+  private int hGap;
+  private int vGap;
+  private double[] columns = new double[0];
+  private double[] rows = new double[0];
+  
+  protected FormProperty[] createProperties(){
+    FormProperty[] properties = new FormProperty[]{
+      new FormProperty("hGap", // NOI18N
+                       Integer.TYPE,
+                       getBundle().getString("PROP_hGap"), // NOI18N
+                       getBundle().getString("HINT_hGap")){ // NOI18N
+
+        public Object getTargetValue(){
+          return new Integer(hGap);
+        }
+        public void setTargetValue(Object value){
+          hGap = ((Integer)value).intValue();
+        }
+        public void setPropertyContext(FormPropertyContext ctx){
+          // disabling this method due to limited persistence
+          // capabilities (compatibility with previous versions)
+        } 
+      },
+
+      new FormProperty("vGap", // NOI18N
+                       Integer.TYPE,
+                       getBundle().getString("PROP_vGap"), // NOI18N
+                       getBundle().getString("HINT_vGap")){ // NOI18N
+
+        public Object getTargetValue(){
+          return new Integer(vGap);
+        }
+        public void setTargetValue(Object value){
+          vGap = ((Integer)value).intValue();
+        }
+        public void setPropertyContext(FormPropertyContext ctx){
+          // disabling this method due to limited persistence
+          // capabilities (compatibility with previous versions)
+        } 
+      },
+
+      new FormProperty("columns", // NOI18N
+                       double[].class,
+                       getBundle().getString("PROP_columns"), // NOI18N
+                       getBundle().getString("HINT_columns")){ // NOI18N
+
+        public Object getTargetValue(){
+          return columns;
+        }
+        public void setTargetValue(Object value){
+          columns = (double[])value;
+        }
+        public void setPropertyContext(FormPropertyContext ctx){
+          // disabling this method due to limited persistence
+          // capabilities (compatibility with previous versions)
+        } 
+        public PropertyEditor getExpliciteEditor(){
+          return new ColumnsEditor();
+        }
+      },
+
+      new FormProperty("rows", // NOI18N
+                       double[].class,
+                       getBundle().getString("PROP_rows"), // NOI18N
+                       getBundle().getString("HINT_rows")){ // NOI18N
+
+        public Object getTargetValue(){
+          return rows;
+        }
+        public void setTargetValue(Object value){
+          rows = (double[])value;
+        }
+        public void setPropertyContext(FormPropertyContext ctx){
+          // disabling this method due to limited persistence
+          // capabilities (compatibility with previous versions)
+        } 
+        public PropertyEditor getExpliciteEditor(){
+          return new RowsEditor();
+        }
+      },
+    };
+    properties[2].setValue("canEditAsText", Boolean.TRUE); // NOI18N
+    properties[3].setValue("canEditAsText", Boolean.TRUE); // NOI18N
+    return properties;
+  }
+
+  private static final String baseVarName = "_tableLayoutInstance";
+
+  /** Creates code structures for a new layout manager (opposite to
+   * readInitLayoutCode). As the TableLayout is not a bean, this method must
+   * override from AbstractLayoutSupport.
+   * @param layoutCode CodeGroup to be filled with relevant
+   *        initialization code;
+   * @return new CodeExpression representing the TableLayout
+   */
+  protected CodeExpression createInitLayoutCode(CodeGroup layoutCode){
+    CodeStructure codeStructure = getCodeStructure();
+    CodeExpression varExpression = codeStructure.createExpression(TableLayoutIntrospector.getLayoutConstructor(), new CodeExpression[0]);
+    String varName = baseVarName;
+    CodeVariable var = codeStructure.getVariable(varName);
+    int i = 1;
+    while(var != null){
+      varName = baseVarName + (i++);
+      var = codeStructure.getVariable(varName);
+    };
+    var = codeStructure.createVariable(CodeVariable.LOCAL | CodeVariable.EXPLICIT_DECLARATION, TableLayout.class, varName);
+    codeStructure.attachExpressionToVariable(varExpression, var);
+    layoutCode.addStatement(0, var.getAssignment(varExpression));
+    FormProperty[] properties = getProperties();
+    CodeExpression[] setHGapParams = new CodeExpression[1];
+    setHGapParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[0]));
+    layoutCode.addStatement(codeStructure.createStatement(varExpression, TableLayoutIntrospector.getSetHGapMethod(), setHGapParams));
+    CodeExpression[] setVGapParams = new CodeExpression[1];
+    setVGapParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[1]));
+    layoutCode.addStatement(codeStructure.createStatement(varExpression, TableLayoutIntrospector.getSetVGapMethod(), setVGapParams));
+    CodeExpression[] setColumnParams = new CodeExpression[1];
+    setColumnParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[2]));
+    layoutCode.addStatement(codeStructure.createStatement(varExpression, TableLayoutIntrospector.getSetColumnMethod(), setColumnParams));
+    CodeExpression[] setRowParams = new CodeExpression[1];
+    setRowParams[0] = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[3]));
+    layoutCode.addStatement(codeStructure.createStatement(varExpression, TableLayoutIntrospector.getSetRowMethod(), setRowParams));
+    return varExpression;
+  }
+
+  protected void readInitLayoutCode(CodeExpression codeExpression, CodeGroup layoutCode){
+    CodeVariable var = codeExpression.getVariable();
+    layoutCode.addStatement(0, var.getAssignment(codeExpression));
+    Iterator it = CodeStructure.getDefinedStatementsIterator(codeExpression);
+    FormProperty[] properties = getProperties();
+    while(it.hasNext()){
+      CodeStatement statement = (CodeStatement)it.next();
+      if(isMethod(statement, TableLayoutIntrospector.getSetHGapMethod())){
+        FormCodeSupport.readPropertyStatement(statement, properties[0], true);
+      }
+      if(isMethod(statement, TableLayoutIntrospector.getSetVGapMethod())){
+        FormCodeSupport.readPropertyStatement(statement, properties[1], true);
+      }
+      if(isMethod(statement, TableLayoutIntrospector.getSetColumnMethod())){
+        FormCodeSupport.readPropertyStatement(statement, properties[2], true);
+      }
+      if(isMethod(statement, TableLayoutIntrospector.getSetRowMethod())){
+        FormCodeSupport.readPropertyStatement(statement, properties[3], true);
+      }
+      layoutCode.addStatement(statement);
+    }
+    updateLayoutInstance();
+  }
+
+  public boolean isMethod(CodeStatement statement, Method method){
+    Object obj = statement.getMetaObject();
+    if (obj != null && obj instanceof Method) {
+      Method other = (Method)obj;
+      // Compare class names only since classes can be loaded by different ClassLoaders
+      if((method.getDeclaringClass().getName().equals(other.getDeclaringClass().getName()))
+         && (method.getName() == other.getName())) {
+        if(!method.getReturnType().equals(other.getReturnType())){
+          return false;
+        }
+        Class[] params1 = method.getParameterTypes();
+        Class[] params2 = other.getParameterTypes();
+        if (params1.length == params2.length) {
+          for (int i = 0; i < params1.length; i++) {
+            if (params1[i] != params2[i])
+              return false;
+          }
+          return true;
+        }
+      }
+    }
+    return false;
+  }
+
+  /** Sets up the layout (without adding components) on a real container,
+   * according to the internal metadata representation. This method must
+   * override AbstractLayoutSupport because TableLayout instance cannot
+   * be used universally - new instance must be created for each container.
+   * @param container instance of a real container to be set
+   * @param containerDelegate effective container delegate of the container;
+   *        for layout managers we always use container delegate instead of
+   *        the container
+   */
+  public void setLayoutToContainer(Container container, Container containerDelegate){
+    try{
+      containerDelegate.setLayout(cloneLayoutInstance(container, containerDelegate));
+    }
+    catch(Exception e){}
+  }
+
+  protected LayoutManager cloneLayoutInstance(Container container, Container containerDelegate){
+    TableLayout result = new TableLayout();
+    result.setHGap(hGap);
+    result.setVGap(vGap);
+    result.setColumn(columns);
+    result.setRow(rows);
+    return result;
+  }
+  
+  /** This method should calculate layout constraints for a component dragged
+   * over a container (or just for mouse cursor being moved over container).
+   * @param container instance of a real container over/in which the
+   *        component is dragged
+   * @param containerDelegate effective container delegate of the container
+   *        (e.g. like content pane of JFrame)
+   * @param component the real component being dragged, can be null
+   * @param index position (index) of the component in its current container;
+   *        -1 if there's no dragged component
+   * @param posInCont position of mouse in the container delegate
+   * @param posInComp position of mouse in the dragged component; null if
+   *        there's no dragged component
+   * @return new LayoutConstraints object corresponding to the position of
+   *         the component in the container; may return null if the layout
+   *         does not use component constraints, or if default constraints
+   *         should be used
+   */
+  public LayoutConstraints getNewConstraints(Container container, Container containerDelegate,
+  Component component, int index, Point posInCont, Point posInComp){
+    TableLayout tableLayout = (TableLayout) containerDelegate.getLayout();
+    TableLayoutSupportConstraints tlConstr = (TableLayoutSupportConstraints)getConstraints(index);
+    TableLayoutIntrospector.calculateSize(tableLayout, containerDelegate);
+    int[][] crSize = TableLayoutIntrospector.getCrSize(tableLayout);
+    int[][] crOffset = TableLayoutIntrospector.getCrOffset(tableLayout);
+    if((crSize == null) || (crOffset == null)){
+      return new TableLayoutSupportConstraints();
+    }
+    int[] columnSize = crSize[0];
+    int[] rowSize = crSize[1];
+    int[] columnOffset = crOffset[0];
+    int[] rowOffset = crOffset[1];
+    int x = posInCont.x;
+    int y = posInCont.y;
+    int column = 0;
+    int row = 0;
+    
+    int hGap = tableLayout.getHGap();
+    int vGap = tableLayout.getVGap();
+    int gap = 0;
+    for(int i = 0; i < columnSize.length; i++){
+      if(x >= columnOffset[i] + gap){
+        column = i;
+      }
+      if(x < columnOffset[i + 1] + gap){
+        break;
+      }
+      gap += hGap;
+    }
+    
+    gap = 0;
+    for(int i = 0; i < rowSize.length; i++){
+      if(y >= rowOffset[i] + gap){
+        row = i;
+      }
+      if(y < rowOffset[i + 1] + gap){
+        break;
+      }
+      gap += vGap;
+    }
+    
+    int hAlign = tlConstr != null ? tlConstr.hAlign : TableLayout.FULL;
+    int vAlign = tlConstr != null ? tlConstr.vAlign : TableLayout.FULL;
+    return new TableLayoutSupportConstraints(column, row, column, row, hAlign, vAlign);
+  }
+  
+  /** This method should paint a feedback for a component dragged over
+   * a container (or just for mouse cursor being moved over container).
+   * In principle, it should present given component layout constraints or
+   * index graphically.
+   * @param container instance of a real container over/in which the
+   *        component is dragged
+   * @param containerDelegate effective container delegate of the container
+   *        (e.g. like content pane of JFrame) - here the feedback is painted
+   * @param component the real component being dragged, can be null
+   * @param newConstraints component layout constraints to be presented
+   * @param newIndex component's index position to be presented
+   *        (if newConstraints == null)
+   * @param g Graphics object for painting (with color and line style set)
+   * @return whether any feedback was painted (may return false if the
+   *         constraints or index are invalid, or if the painting is not
+   *         implemented)
+   */
+  public boolean paintDragFeedback(Container container, Container containerDelegate,
+  Component component, LayoutConstraints newConstraints, int newIndex, Graphics g){
+    TableLayout tableLayout = (TableLayout)containerDelegate.getLayout();
+    TableLayoutSupportConstraints tlConstr = (TableLayoutSupportConstraints)newConstraints;
+    TableLayoutIntrospector.calculateSize(tableLayout, containerDelegate);
+    int[][] crSize = TableLayoutIntrospector.getCrSize(tableLayout);
+    if(crSize == null){
+      return false;
+    }
+    int[] columnSize = crSize[0];
+    int[] rowSize = crSize[1];
+
+    int counter;
+
+    Color defColor = g.getColor();
+    Rectangle sRect = new Rectangle(-1, -1, 0, 0);
+    int y = 0;
+    for(int row = 0; row < rowSize.length; row++){
+      if((row >= tlConstr.top) && (row <= tlConstr.bottom)){
+        if(sRect.y < 0){
+          sRect.y = y;
+        }
+        sRect.height += rowSize[row] + tableLayout.getVGap();
+      }
+      g.drawLine(0, y, containerDelegate.getWidth(), y);
+      y += rowSize[row] + tableLayout.getVGap();
+    }
+    g.drawLine(0, y, containerDelegate.getWidth(), y);
+    int x = 0;
+    for(int column = 0; column < columnSize.length; column++){
+      if((column >= tlConstr.left) && (column <= tlConstr.right)){
+        if(sRect.x < 0){
+          sRect.x = x;
+        }
+        sRect.width += columnSize[column] + tableLayout.getHGap();
+      }
+      g.drawLine(x, 0, x, containerDelegate.getHeight());
+      x += columnSize[column] + tableLayout.getHGap();
+    }
+    g.drawLine(x, 0, x, containerDelegate.getHeight());
+    g.setColor(Color.red);
+    g.drawRect(sRect.x, sRect.y, sRect.width, sRect.height);
+    return true;
+  }
+  
+  /** Provides resizing options for given component. It can combine the
+   * bit-flag constants RESIZE_UP, RESIZE_DOWN, RESIZE_LEFT, RESIZE_RIGHT.
+   * @param container instance of a real container in which the
+   *        component is to be resized
+   * @param containerDelegate effective container delegate of the container
+   *        (e.g. like content pane of JFrame)
+   * @param component real component to be resized
+   * @param index position of the component in its container
+   * @return resizing options for the component; 0 if no resizing is possible
+   */
+  public int getResizableDirections(Container container, Container containerDelegate,
+  Component component, int index){
+    TableLayout tableLayout = (TableLayout)containerDelegate.getLayout();
+    TableLayoutSupportConstraints tlConstr = (TableLayoutSupportConstraints)getConstraints(index);
+    
+    int resizable = 0;
+    
+    if((tlConstr.left > 0) || (tlConstr.left < tlConstr.right)){
+      resizable |= RESIZE_LEFT;
+    }
+    
+    if((tlConstr.right + 1 < tableLayout.getNumColumn()) ||
+       (tlConstr.right > tlConstr.left)){
+      resizable |= RESIZE_RIGHT;
+    }
+    
+    if((tlConstr.top > 0) || (tlConstr.top < tlConstr.bottom)){
+      resizable |= RESIZE_UP;
+    }
+    
+    if((tlConstr.bottom + 1 < tableLayout.getNumRow()) ||
+       (tlConstr.bottom > tlConstr.top)){
+      resizable |= RESIZE_DOWN;
+    }
+    
+    return resizable;
+  }
+  
+  /** This method should calculate layout constraints for a component being
+   * resized.
+   * @param container instance of a real container in which the
+   *        component is to be resized
+   * @param containerDelegate effective container delegate of the container
+   *        (e.g. like content pane of JFrame)
+   * @param component real component to be resized
+   * @param index position of the component in its container
+   * @param sizeChanges Insets object with size differences
+   * @param posInCont position of mouse in the container delegate
+   * @return component layout constraints for resized component; null if
+   *         resizing is not possible or not implemented
+   */
+  public LayoutConstraints getResizedConstraints(Container container, Container containerDelegate,
+  Component component, int index, Insets sizeChanges, Point posInCont){
+    TableLayout tableLayout = (TableLayout)containerDelegate.getLayout();
+    TableLayoutIntrospector.calculateSize(tableLayout, containerDelegate);
+    int[][] crSize = TableLayoutIntrospector.getCrSize(tableLayout);
+    int[][] crOffset = TableLayoutIntrospector.getCrOffset(tableLayout);
+    if((crSize == null) || (crOffset == null)){
+      return new TableLayoutSupportConstraints();
+    }
+    int[] columnSize = crSize[0];
+    int[] rowSize = crSize[1];
+    int[] columnOffset = crOffset[0];
+    int[] rowOffset = crOffset[1];
+    TableLayoutSupportConstraints tlConstr = (TableLayoutSupportConstraints) getConstraints(index);
+    
+    int left;
+    if(sizeChanges.left != 0){
+      left = 0;
+      for(int i = 0; i < columnSize.length; i++){
+        if(posInCont.x >= columnOffset[i]){
+          left = i;
+        }
+        if(posInCont.x < columnOffset[i + 1]){
+          break;
+        }
+      }
+      if(left > tlConstr.right)
+        left = tlConstr.right;
+    }
+    else{
+      left = tlConstr.left;
+    }
+    
+    int top;
+    if(sizeChanges.top != 0){
+      top = 0;
+      for(int i = 0; i < rowSize.length; i++){
+        if(posInCont.y >= rowOffset[i]){
+          top = i;
+        }
+        if(posInCont.y < rowOffset[i + 1]){
+          break;
+        }
+      }
+      if(top > tlConstr.bottom){
+        top = tlConstr.bottom;
+      }
+    }
+    else{
+      top = tlConstr.top;
+    }
+    
+    int right;
+    if(sizeChanges.right != 0) {
+      right = tableLayout.getNumColumn() - 1;
+      for(int i = columnSize.length; i > 0; i--){
+        if(posInCont.x < columnOffset[i]){
+          right = i - 1;
+        }
+        if(posInCont.x >= columnOffset[i - 1]){
+          break;
+        }
+      }
+      if(right < tlConstr.left){
+        right = tlConstr.left;
+      }
+    }
+    else{
+      right = tlConstr.right;
+    }
+    
+    int bottom;
+    if(sizeChanges.bottom != 0){
+      bottom = tableLayout.getNumRow() - 1;
+      for(int i = rowSize.length; i > 0; i--){
+        if(posInCont.y < rowOffset[i]){
+          bottom = i - 1;
+        }
+        if(posInCont.y >= rowOffset[i - 1]){
+          break;
+        }
+      }
+      if(bottom < tlConstr.top){
+        bottom = tlConstr.top;
+      }
+    }
+    else{
+      bottom = tlConstr.bottom;
+    }
+    return new TableLayoutSupportConstraints(left, top, right, bottom, tlConstr.hAlign, tlConstr.vAlign);
+  }
+
+  /** This method is called when switching layout - giving an opportunity to
+   * convert the previous constrainst of components to constraints of the new
+   * layout (this layout). The default implementation does nothing.
+   * @param previousConstraints [input] layout constraints of components in
+   *                                    the previous layout
+   * @param currentConstraints [output] array of converted constraints for
+   *                                    the new layout - to be filled
+   * @param components [input] real components in a real container having the
+   *                           previous layout
+   */
+  public void convertConstraints(LayoutConstraints[] previousConstraints,
+  LayoutConstraints[] currentConstraints, Component[] components){
+    if((components == null) || (components.length == 0)){
+      return;
+    }
+    ConstraintsConverter converter = new DefaultConstraintsConverter();
+    converter.convertConstraints(getLayoutContext(), this, previousConstraints, currentConstraints, components);
+  }
+
+  /**
+   * Getter for property columns.
+   * @return Value of property columns.
+   */
+  public double[] getColumns(){
+    return this.columns;
+  }
+  
+  /**
+   * Setter for property columns.
+   * @param columns New value of property columns.
+   */
+  public void setColumns(double[] columns){
+    this.columns = columns;
+  }
+  
+  /**
+   * Getter for property rows.
+   * @return Value of property rows.
+   */
+  public double[] getRows(){
+    return this.rows;
+  }
+  
+  /**
+   * Setter for property rows.
+   * @param rows New value of property rows.
+   */
+  public void setRows(double[] rows) {
+    this.rows = rows;
+  }
+  
+  private String getContainerName(){
+    CodeVariable var = getLayoutContext().getContainerCodeExpression().getVariable();
+    return var != null ? var.getName() : null;
+  }
+  
+  // ---------
+  // CustomizerDialog - a non-modal dialog holding the customizer itself.
+  // Some tweaks are required to obtain a non-modal dialog behaving like
+  // a floating window reasonably.
+  
+  private JDialog createCustomizerDialog() {
+    Frame dialogOwner = null;
+    Point designLocation = null;
+    
+    Component activeComp =
+    org.openide.windows.TopComponent.getRegistry().getActivated();
+    if (activeComp != null) {
+      Component comp = activeComp.getParent();
+      while (comp != null) {
+        if (comp instanceof Frame) {
+          dialogOwner = (Frame) comp;
+          break;
+        }
+        comp = comp.getParent();
+      }
+    }
+    
+    if (dialogOwner != null) {
+      designLocation = activeComp.getLocation();
+      SwingUtilities.convertPointToScreen(
+      designLocation, activeComp.getParent());
+    }
+    else dialogOwner = org.openide.windows.WindowManager.getDefault()
+    .getMainWindow();
+    
+    String title = getContainerName();
+    title = (title != null ? title : "Form") + " -> " + "TableLayout";
+    
+    JDialog dialog = new CustomizerDialog(dialogOwner, title, false);
+    dialog.getContentPane().add(layoutCustomizer);
+    dialog.pack();
+    
+    if (designLocation != null) {
+      designLocation.x -= dialog.getWidth() + 1;
+      if (designLocation.x < 0)
+        designLocation.x = 0;
+      if (designLocation.y < 0)
+        designLocation.y = 0;
+      dialog.setLocation(designLocation);
+    }
+    
+    return dialog;
+  }
+  
+  private class CustomizerDialog extends JDialog {
+    CustomizerDialog(Frame owner, String title, boolean modal) {
+      super(owner, title, modal);
+      setDefaultCloseOperation(DISPOSE_ON_CLOSE);
+    }
+    
+    public void setVisible(boolean value) {
+      super.setVisible(value);
+      if (value == false && layoutCustomizer != null) {
+        layoutCustomizer = null;
+        customizerDialog = null;
+      }
+    }
+  }
+
+  public class TableLayoutSupportConstraints implements LayoutConstraints{
+
+    private Node.Property[] properties;
+
+    public int left;
+    public int top;
+    public int right;
+    public int bottom;
+    public int hAlign;
+    public int vAlign;
+
+    /** Creates a new instance of TableLayoutConstraints */
+    public TableLayoutSupportConstraints(){
+      TableLayoutConstraints tlc = new TableLayoutConstraints();
+      left = tlc.col1;
+      top = tlc.row1;
+      right = tlc.col2;
+      bottom = tlc.row2;
+      hAlign = tlc.hAlign;
+      vAlign = tlc.vAlign;
+    }
+
+    public TableLayoutSupportConstraints(TableLayoutSupportConstraints prototype){
+      this.left = prototype.left;
+      this.top = prototype.top;
+      this.right = prototype.right;
+      this.bottom = prototype.bottom;
+      this.hAlign = prototype.hAlign;
+      this.vAlign = prototype.vAlign;
+    }
+
+    public TableLayoutSupportConstraints(int left, int top, int right, int bottom,
+    int hAlign, int vAlign){
+      this.left = left;
+      this.top = top;
+      this.right = right;
+      this.bottom = bottom;
+      this.hAlign = hAlign;
+      this.vAlign = vAlign;
+    }
+
+    public Node.Property[] getProperties(){
+      if(properties == null) {
+        properties = createProperties();
+        reinstateProperties();
+      }
+      return properties;
+    }
+
+    public Object getConstraintsObject(){
+      return new TableLayoutConstraints(left, top, right, bottom, hAlign, vAlign);
+    }
+
+    public LayoutConstraints cloneConstraints(){
+      return new TableLayoutSupportConstraints(this);
+    }
+
+    protected Node.Property[] createProperties(){
+      return new Node.Property[]{
+        new FormProperty("TableLayoutConstraints.left", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_left"), // NOI18N
+                         getBundle().getString("HINT_left")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(left);
+          }
+          public void setTargetValue(Object value){
+            left = ((Integer)value).intValue();
+            if(right < left){
+              right = left;
+            }
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        },
+
+        new FormProperty("TableLayoutConstraints.top", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_top"), // NOI18N
+                         getBundle().getString("HINT_top")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(top);
+          }
+          public void setTargetValue(Object value){
+            top = ((Integer)value).intValue();
+            if(bottom < top){
+              bottom = top;
+            }
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        },
+
+        new FormProperty("TableLayoutConstraints.right", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_right"), // NOI18N
+                         getBundle().getString("HINT_right")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(right);
+          }
+          public void setTargetValue(Object value){
+            right = ((Integer)value).intValue();
+            if(right < left){
+              left = right;
+            }
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          }
+        },
+
+        new FormProperty("TableLayoutConstraints.bottom", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_bottom"), // NOI18N
+                         getBundle().getString("HINT_bottom")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(bottom);
+          }
+          public void setTargetValue(Object value){
+            bottom = ((Integer)value).intValue();
+            if(bottom < top){
+              top = bottom;
+            }
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        },
+
+        new FormProperty("TableLayoutConstraints.colSpan", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_colSpan"), // NOI18N
+                         getBundle().getString("HINT_colSpan")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(right - left + 1);
+          }
+          public void setTargetValue(Object value){
+            int colSpan = ((Integer)value).intValue();
+            if(colSpan > 0){
+              right = left + colSpan - 1;
+            }
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        },
+
+        new FormProperty("TableLayoutConstraints.rowSpan", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_rowSpan"), // NOI18N
+                         getBundle().getString("HINT_rowSpan")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(bottom - top + 1);
+          }
+          public void setTargetValue(Object value){
+            int rowSpan = ((Integer)value).intValue();
+            if(rowSpan > 0){
+              bottom = top + rowSpan - 1;
+            }
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+        },
+
+        new FormProperty("TableLayoutConstraints.hAlign", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_hAlign"), // NOI18N
+                         getBundle().getString("HINT_hAlign")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(hAlign);
+          }
+          public void setTargetValue(Object value){
+            hAlign = ((Integer)value).intValue();
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+          public PropertyEditor getExpliciteEditor(){
+            return new HAlignEditor();
+          }
+        },
+
+        new FormProperty("TableLayoutConstraints.vAlign", // NOI18N
+                         Integer.TYPE,
+                         getBundle().getString("PROP_vAlign"), // NOI18N
+                         getBundle().getString("HINT_vAlign")){ // NOI18N
+
+          public Object getTargetValue(){
+            return new Integer(vAlign);
+          }
+          public void setTargetValue(Object value){
+            vAlign = ((Integer)value).intValue();
+          }
+          public void setPropertyContext(FormPropertyContext ctx){
+            // disabling this method due to limited persistence
+            // capabilities (compatibility with previous versions)
+          } 
+          public PropertyEditor getExpliciteEditor(){
+            return new VAlignEditor();
+          }
+        },
+      };
+    }
+
+    private void reinstateProperties(){
+      try{
+        for(int i = 0; i < properties.length; i++){
+          FormProperty prop = (FormProperty) properties[i];
+          prop.reinstateProperty();
+        }
+      }
+      catch(IllegalAccessException e1) {} // should not happen
+      catch(java.lang.reflect.InvocationTargetException e2) {} // should not happen
+    }
+
+    /** This method creates CodeExpression objects for properties of
+     * AbsoluteConstraints - this is used by the layout delegate's method
+     * createConstraintsCode which uses the expressions as parameters
+     * in AbsoluteConstraints constructor.
+     * @param codeStructure main CodeStructure object in which the code
+     *        expressions are created
+     * @param shift this parameter is used only by subclasses of
+     *        AbsoluteLayoutConstraints (which may insert another
+     *        constructor parameters before x, y, w and h)
+     * @return array of created code expressions
+     */
+    protected final CodeExpression[] createPropertyExpressions(CodeStructure codeStructure){
+      // first make sure properties are created...
+      getProperties();
+      
+      // ...then create code expressions based on the properties
+      CodeExpression xEl = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[0]));
+      CodeExpression yEl = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[1]));
+      CodeExpression wEl = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[2]));
+      CodeExpression hEl = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[3]));
+      CodeExpression hAlignEl = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[6]));
+      CodeExpression vAlignEl = codeStructure.createExpression(FormCodeSupport.createOrigin(properties[7]));
+      return new CodeExpression[]{xEl, yEl, wEl, hEl, hAlignEl, vAlignEl};
+    }
+    
+    protected final void readCodeExpression(CodeExpression constrExp, CodeGroup codeGroup){
+      // first make sure properties are created...
+      getProperties();
+      CodeExpression[] params = constrExp.getOrigin().getCreationParameters();
+      FormCodeSupport.readPropertyExpression(params[0], properties[0], false);
+      FormCodeSupport.readPropertyExpression(params[1], properties[1], false);
+      FormCodeSupport.readPropertyExpression(params[2], properties[2], false);
+      FormCodeSupport.readPropertyExpression(params[3], properties[3], false);
+      FormCodeSupport.readPropertyExpression(params[4], properties[6], false);
+      FormCodeSupport.readPropertyExpression(params[5], properties[7], false);
+    }
+
+  }
+
+  public static final class HAlignEditor extends PropertyEditorSupport{
+    private final String[] tags = {
+      getBundle().getString("VALUE_hAlign_CENTER"),  // NOI18N
+      getBundle().getString("VALUE_hAlign_FULL"),    // NOI18N
+      getBundle().getString("VALUE_hAlign_LEADING"), // NOI18N
+      getBundle().getString("VALUE_hAlign_LEFT"),    // NOI18N
+      getBundle().getString("VALUE_hAlign_RIGHT"),   // NOI18N
+      getBundle().getString("VALUE_hAlign_TRAILING") // NOI18N
+    };
+    private final Integer[] values = {
+      new Integer(TableLayoutConstants.CENTER),
+      new Integer(TableLayoutConstants.FULL),
+      new Integer(TableLayoutConstants.LEADING),
+      new Integer(TableLayoutConstants.LEFT),
+      new Integer(TableLayoutConstants.RIGHT),
+      new Integer(TableLayoutConstants.TRAILING)
+    };
+    private final String[] javaInitStrings = {
+      "info.clearthought.layout.TableLayout.CENTER",  // NOI18N
+      "info.clearthought.layout.TableLayout.FULL",    // NOI18N
+      "info.clearthought.layout.TableLayout.LEADING", // NOI18N
+      "info.clearthought.layout.TableLayout.LEFT",    // NOI18N
+      "info.clearthought.layout.TableLayout.RIGHT",   // NOI18N
+      "info.clearthought.layout.TableLayout.TRAILING" // NOI18N
+    };
+    
+    public String[] getTags(){
+      return tags;
+    }
+    
+    public String getAsText(){
+      Object value = getValue();
+      for(int i=0; i < values.length; i++){
+        if(values[i].equals(value)){
+          return tags[i];
+        }
+      }
+      return null;
+    }
+    
+    public void setAsText(String str){
+      for(int i=0; i < tags.length; i++){
+        if(tags[i].equals(str)){
+          setValue(values[i]);
+        }
+      }
+    }
+    
+    public String getJavaInitializationString(){
+      Object value = getValue();
+      for (int i=0; i < values.length; i++){
+        if (values[i].equals(value)){
+          return javaInitStrings[i];
+        }
+      }
+      return null;
+    }
+  }
+
+  public static final class VAlignEditor extends PropertyEditorSupport{
+    private final String[] tags = {
+      getBundle().getString("VALUE_vAlign_BOTTOM"),  // NOI18N
+      getBundle().getString("VALUE_vAlign_CENTER"),  // NOI18N
+      getBundle().getString("VALUE_vAlign_FULL"),    // NOI18N
+      getBundle().getString("VALUE_vAlign_TOP")      // NOI18N
+    };
+    private final Integer[] values = {
+      new Integer(TableLayoutConstants.BOTTOM),
+      new Integer(TableLayoutConstants.CENTER),
+      new Integer(TableLayoutConstants.FULL),
+      new Integer(TableLayoutConstants.TOP)
+    };
+    private final String[] javaInitStrings = {
+      "info.clearthought.layout.TableLayout.BOTTOM",  // NOI18N
+      "info.clearthought.layout.TableLayout.CENTER",  // NOI18N
+      "info.clearthought.layout.TableLayout.FULL",    // NOI18N
+      "info.clearthought.layout.TableLayout.TOP"      // NOI18N
+    };
+    
+    public String[] getTags(){
+      return tags;
+    }
+    
+    public String getAsText(){
+      Object value = getValue();
+      for(int i=0; i < values.length; i++){
+        if(values[i].equals(value)){
+          return tags[i];
+        }
+      }
+      return null;
+    }
+    
+    public void setAsText(String str){
+      for(int i=0; i < tags.length; i++){
+        if(tags[i].equals(str)){
+          setValue(values[i]);
+        }
+      }
+    }
+    
+    public String getJavaInitializationString(){
+      Object value = getValue();
+      for (int i=0; i < values.length; i++){
+        if (values[i].equals(value)){
+          return javaInitStrings[i];
+        }
+      }
+      return null;
+    }
+  }
+
+  public static class DoubleArrayEditor extends PropertyEditorSupport implements XMLPropertyEditor{
+
+    public String getAsText(){
+      double[] value = (double[])getValue();
+      NumberFormat numberFormat = NumberFormat.getNumberInstance(Locale.US);
+      numberFormat.setGroupingUsed(false);
+      numberFormat.setMaximumFractionDigits(3);
+      boolean firstValue = true;
+      StringBuffer sb = new StringBuffer();
+      for(int i = 0; i < value.length; i++){
+        String sValue = null;
+        if(value[i] == TableLayout.FILL){
+          sValue = "FILL";
+        }
+        if(value[i] == TableLayout.MINIMUM){
+          sValue = "MINIMUM";
+        }
+        if(value[i] == TableLayout.PREFERRED){
+          sValue = "PREFERRED";
+        }
+        if((sValue == null) && (value[i] >= 0)){
+          sValue = numberFormat.format(value[i]);
+        }
+        if(sValue != null){
+          if(!firstValue){
+            sb.append(",");
+          }
+          firstValue = false;
+          sb.append(sValue);
+        }
+      }
+      return sb.toString();
+    }
+    
+    public void setAsText(String str){
+      String[] tokens = str.split(",");
+      double[] value = new double[tokens.length];
+      int valueLength = 0;
+      NumberFormat numberFormat = NumberFormat.getNumberInstance(Locale.US);
+      numberFormat.setGroupingUsed(false);
+      numberFormat.setMaximumFractionDigits(3);
+      for(int i = 0; i < tokens.length; i++){
+        double dValue = 0;
+        boolean hasValue = false;
+        tokens[i] = tokens[i].trim();
+        if(tokens[i].equalsIgnoreCase("FILL")){
+          dValue = TableLayout.FILL;
+          hasValue = true;
+        }
+        if(tokens[i].equalsIgnoreCase("MINIMUM")){
+          dValue = TableLayout.MINIMUM;
+          hasValue = true;
+        }
+        if(tokens[i].equalsIgnoreCase("PREFERRED")){
+          dValue = TableLayout.PREFERRED;
+          hasValue = true;
+        }
+        if(!hasValue){
+          try{
+            dValue = numberFormat.parse(tokens[i]).doubleValue();
+            hasValue = true;
+          }
+          catch(Exception e){}
+        }
+        if(hasValue){
+          value[valueLength++] = dValue;
+        }
+      }
+      double[] rValue = new double[valueLength];
+      System.arraycopy(value, 0, rValue, 0, valueLength);
+      setValue(rValue);
+    }
+    
+    public String getJavaInitializationString(){
+      double[] value = (double[])getValue();
+      NumberFormat numberFormat = NumberFormat.getNumberInstance(Locale.US);
+      numberFormat.setGroupingUsed(false);
+      numberFormat.setMaximumFractionDigits(3);
+      boolean firstValue = true;
+      StringBuffer sb = new StringBuffer("new double[]{");
+      for(int i = 0; i < value.length; i++){
+        String sValue = null;
+        if(value[i] == TableLayoutConstants.FILL){
+          sValue = "info.clearthought.layout.TableLayout.FILL";
+        }
+        if(value[i] == TableLayoutConstants.MINIMUM){
+          sValue = "info.clearthought.layout.TableLayout.MINIMUM";
+        }
+        if(value[i] == TableLayoutConstants.PREFERRED){
+          sValue = "info.clearthought.layout.TableLayout.PREFERRED";
+        }
+        if((sValue == null) && (value[i] >= 0)){
+          sValue = numberFormat.format(value[i]);
+        }
+        if(sValue != null){
+          if(!firstValue){
+            sb.append(",");
+          }
+          firstValue = false;
+          sb.append(sValue);
+        }
+      }
+      sb.append("}");
+      return sb.toString();
+    }
+    
+    /** Called to load property value from specified XML subtree. If succesfully loaded,
+     * the value should be available via the getValue method.
+     * An IOException should be thrown when the value cannot be restored from the specified XML element
+     * @param element the XML DOM element representing a subtree of XML from which the value should be loaded
+     * @exception IOException thrown when the value cannot be restored from the specified XML element
+     */
+    public void readFromXML(org.w3c.dom.Node element) throws IOException{
+      org.w3c.dom.Node vNode = element.getAttributes().getNamedItem("value");
+      setAsText(vNode.getNodeValue());
+    }
+
+    /** Called to store current property value into XML subtree. The property value should be set using the
+     * setValue method prior to calling this method.
+     * @param doc The XML document to store the XML in - should be used for creating nodes only
+     * @return the XML DOM element representing a subtree of XML from which the value should be loaded
+     */
+    public org.w3c.dom.Node storeToXML(org.w3c.dom.Document doc){
+      org.w3c.dom.Element result = doc.createElement(getTag());
+      result.setAttribute("value", getAsText());
+      return result;
+    }
+
+    protected String getTag(){
+      return "Array";
+    }
+    
+  }
+
+  public static class ColumnsEditor extends DoubleArrayEditor{
+    
+    protected String getTag(){
+      return "Columns";
+    }
+
+  }
+
+  public static class RowsEditor extends DoubleArrayEditor{
+    
+    protected String getTag(){
+      return "Rows";
+    }
+
+  }
+
+}

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/ConstraintsConverter.java
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/ConstraintsConverter.java	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/ConstraintsConverter.java	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,23 @@
+/*
+ * ConstraintsConverter.java
+ *
+ * Created on January 8, 2005, 1:16 PM
+ */
+
+package de.berlios.nblayoutpack.tablelayout.converter;
+
+import java.awt.*;
+
+import org.netbeans.modules.form.layoutsupport.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public abstract class ConstraintsConverter{
+
+  public abstract void convertConstraints(LayoutSupportContext layoutSupportContext,
+  LayoutSupportDelegate layoutSupportDelegate, LayoutConstraints[] previousConstraints,
+  LayoutConstraints[] currentConstraints, Component[] components);
+
+}

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/DefaultConstraintsConverter.java
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/DefaultConstraintsConverter.java	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/converter/DefaultConstraintsConverter.java	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,247 @@
+/*
+ * DefaultConstraintsConverter.java
+ *
+ * Created on January 8, 2005, 1:19 PM
+ */
+
+package de.berlios.nblayoutpack.tablelayout.converter;
+
+import java.awt.Component;
+import java.awt.Container;
+import java.awt.Dimension;
+import java.awt.LayoutManager;
+import java.awt.Rectangle;
+import java.util.*;
+
+import org.openide.ErrorManager;
+
+import org.netbeans.modules.form.layoutsupport.*;
+
+import info.clearthought.layout.*;
+
+import de.berlios.nblayoutpack.tablelayout.*;
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class DefaultConstraintsConverter extends ConstraintsConverter{
+  
+  /** Creates a new instance of DefaultConstraintsConverter */
+  public DefaultConstraintsConverter(){
+  }
+  
+  public void convertConstraints(LayoutSupportContext layoutSupportContext,
+  LayoutSupportDelegate layoutSupportDelegate, LayoutConstraints[] previousConstraints,
+  LayoutConstraints[] currentConstraints, Component[] components){
+    TableLayoutSupport tableLayoutSupport = (TableLayoutSupport)layoutSupportDelegate;
+    ArrayList xsList = new ArrayList();
+    ArrayList ysList = new ArrayList();
+    int prevX = 0;
+    int prevY = 0;
+    int maxX = 0;
+    int maxY = 0;
+    for(int i = 0; i < components.length; i++){
+      Component comp = components[i];
+      Rectangle cRect = comp.getBounds();
+      xsList.add(new SpaceInfo(cRect.x, cRect.width));
+      ysList.add(new SpaceInfo(cRect.y, cRect.height));
+      if(cRect.x != prevX){
+        if(cRect.x > prevX){
+          xsList.add(new SpaceInfo(prevX, cRect.x - prevX));
+        }
+        else{
+          xsList.add(new SpaceInfo(cRect.x, prevX - cRect.x));
+        }
+      }
+      if(cRect.y != prevY){
+        if(cRect.y > prevY){
+          ysList.add(new SpaceInfo(prevY, cRect.y - prevY));
+        }
+        else{
+          ysList.add(new SpaceInfo(cRect.y, prevY - cRect.y));
+        }
+      }
+      prevX = cRect.x + cRect.width;
+      prevY = cRect.y + cRect.height;
+      maxX = Math.max(maxX, prevX);
+      maxY = Math.max(maxY, prevY);
+    }
+//    Container container = layoutSupportContext.getPrimaryContainerDelegate();
+//    Dimension cDim = container.getSize();
+//    ErrorManager.getDefault().log(ErrorManager.WARNING, "cDim: " + cDim);
+//    ErrorManager.getDefault().log(ErrorManager.WARNING, "maxX: " + maxX + ", maxY: " + maxY);
+//    if(cDim.width - maxX > 0){
+//      xsList.add(new SpaceInfo(maxX, cDim.width - maxX));
+//    }
+//    if(cDim.height - maxY > 0){
+//      ysList.add(new SpaceInfo(maxY, cDim.height - maxY));
+//    }
+//    ErrorManager.getDefault().log(ErrorManager.WARNING, "xsList: " + xsList);
+    splitSpace(xsList);
+    splitSpace(ysList);
+    SpaceInfo[] xsi = (SpaceInfo[])xsList.toArray(new SpaceInfo[xsList.size()]);
+    SpaceInfo[] ysi = (SpaceInfo[])ysList.toArray(new SpaceInfo[ysList.size()]);
+    double[] columns = new double[xsi.length];
+    double[] rows = new double[ysi.length];
+    copySize(xsi, columns);
+    copySize(ysi, rows);
+    for(int i = 0; i < components.length; i++){
+      Component comp = components[i];
+      Rectangle cRect = comp.getBounds();
+      Dimension prefSize = comp.getPreferredSize();
+      Dimension minSize = comp.getMinimumSize();
+      TableLayoutSupport.TableLayoutSupportConstraints constr = (TableLayoutSupport.TableLayoutSupportConstraints)tableLayoutSupport.createDefaultConstraints();
+      for(int j = 0; j < xsi.length; j++){
+        if(xsi[j].position == cRect.x){
+          constr.left = j;
+          constr.right = j;
+        }
+        if((cRect.width > 0) && (xsi[j].position >= cRect.x)){
+          constr.right = j;
+          cRect.width -= xsi[j].size;
+        }
+        if(cRect.width == 0){
+          if(constr.left == constr.right){
+            if(xsi[constr.left].size == minSize.width){
+              columns[constr.left] = TableLayout.MINIMUM;
+            }
+            if(xsi[constr.left].size == prefSize.width){
+              columns[constr.left] = TableLayout.PREFERRED;
+            }
+          }
+          break;
+        }
+      }
+      for(int j = 0; j < ysi.length; j++){
+        if(ysi[j].position == cRect.y){
+          constr.top = j;
+          constr.bottom = j;
+        }
+        if((cRect.height > 0) && (ysi[j].position >= cRect.y)){
+          constr.bottom = j;
+          cRect.height -= ysi[j].size;
+        }
+        if(cRect.height == 0){
+          if(constr.top == constr.bottom){
+            if(ysi[constr.top].size == minSize.height){
+              rows[constr.top] = TableLayout.MINIMUM;
+            }
+            if(ysi[constr.top].size == prefSize.height){
+              rows[constr.top] = TableLayout.PREFERRED;
+            }
+          }
+          break;
+        }
+      }
+      currentConstraints[i] = constr;
+    }
+    tableLayoutSupport.setColumns(columns);
+    tableLayoutSupport.setRows(rows);
+  }
+
+  private void copySize(SpaceInfo[] si, double[] size){
+    for(int i = 0; i < si.length; i++){
+      size[i] = si[i].size;
+    }
+  }
+  
+  private void splitSpace(List list){
+    List result = new ArrayList();
+    List list2 = new ArrayList(list);
+    Collections.reverse(list2);
+    for(Iterator iter = list.iterator(); iter.hasNext(); ){
+      SpaceInfo si1 = (SpaceInfo)iter.next();
+      int sipL1 = si1.position;
+      int sipR1 = si1.position + si1.size - 1;
+      boolean hasIntersections = false;
+      for(Iterator iter2 = list2.iterator(); iter2.hasNext(); ){
+        SpaceInfo si2 = (SpaceInfo)iter2.next();
+        if(si1 == si2){
+          break;
+        }
+        int sipL2 = si2.position;
+        int sipR2 = si2.position + si2.size - 1;
+        if((sipL1 > sipL2) && (sipL1 < sipR2) ||
+           (sipR1 > sipL2) && (sipR1 < sipR2) ||
+           (sipL2 > sipL1) && (sipL2 < sipR1) ||
+           (sipR2 > sipL1) && (sipR2 < sipR1)){
+          hasIntersections = true;
+          int L1 = Math.min(sipL1, sipL2);
+          int L2 = Math.max(sipL1, sipL2);
+          int R1 = Math.min(sipR1, sipR2);
+          int R2 = Math.max(sipR1, sipR2);
+          int[] sizes = new int[]{L2 - L1, R1 - L2 + 1, R2 - R1};
+          int position = L1;
+          for(int i = 0; i < sizes.length; i++){
+            if(sizes[i] > 0){
+              result.add(new SpaceInfo(position, sizes[i]));
+            }
+            position += sizes[i];
+          }
+        }
+      }
+      if(!hasIntersections){
+        result.add(si1);
+      }
+    }
+    list2 = new ArrayList(result);
+    Collection toRemove = new ArrayList();
+    for(Iterator iter = result.iterator(); iter.hasNext(); ){
+      SpaceInfo si1 = (SpaceInfo)iter.next();
+      int sipL1 = si1.position;
+      int sipR1 = si1.position + si1.size - 1;
+      for(Iterator iter2 = list2.iterator(); iter2.hasNext(); ){
+        SpaceInfo si2 = (SpaceInfo)iter2.next();
+        if(si1 == si2){
+          continue;
+        }
+        if((si1.position == si2.position) && (si1.size >= si2.size) && !toRemove.contains(si2)){
+          toRemove.add(si1);
+          break;
+        }
+      }
+    }
+    result.removeAll(toRemove);
+    Collections.sort(result);
+    list.clear();
+    list.addAll(result);
+  }
+  
+  private static class SpaceInfo implements Comparable{
+    int position;
+    int size;
+
+    public SpaceInfo(int position, int size){
+      this.position = position;
+      this.size = size;
+    }
+
+    public int compareTo(Object o){
+      SpaceInfo si = (SpaceInfo)o;
+      return position - si.position;
+    }
+
+    public String toString(){
+      StringBuffer sb = new StringBuffer(getClass().getName()).append("[");
+      sb.append("position=").append(position).append(",");
+      sb.append("size=").append(size).append("]");
+      return sb.toString();
+    }
+    
+  }
+
+  public static void main(String[] args){
+    List sil = new ArrayList();
+    sil.add(new SpaceInfo(4, 8));
+    sil.add(new SpaceInfo(0, 10));
+    sil.add(new SpaceInfo(2, 4));
+    sil.add(new SpaceInfo(1, 10));
+    new DefaultConstraintsConverter().splitSpace(sil);
+    for(Iterator iter = sil.iterator(); iter.hasNext(); ){
+      SpaceInfo si = (SpaceInfo)iter.next();
+      System.out.println(si);
+    }
+  }
+  
+}

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/layer.xml
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/layer.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/layer.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xml" href="http://openide.netbeans.org/fs/filesystem.xsl"?>
+<!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.1//EN" "http://www.netbeans.org/dtds/filesystem-1_1.dtd">
+<filesystem>
+  <folder name="Mount">
+    <folder name="java">
+      <file name="tablelayout.xml" url="tablelayout.xml">
+        <attr name="SystemFileSystem.localizingBundle" stringvalue="de.berlios.nblayoutpack.tablelayout.Bundle"/>
+      </file>
+    </folder>
+  </folder>
+
+  <folder name="Palette">
+    <folder name="Layouts">
+      <file name="info-clearthought-layout-TableLayout.instance">
+        <attr name="SystemFileSystem.localizingBundle" stringvalue="de.berlios.nblayoutpack.tablelayout.Bundle" />
+        <attr name="SystemFileSystem.icon" urlvalue="nbres:/de/berlios/nblayoutpack/tablelayout/resources/tablelayout16.png" />
+        <attr name="beaninfo" boolvalue="false"/>
+      </file>
+    </folder>
+  </folder>
+</filesystem>

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/tablelayout.xml
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/tablelayout.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb3.6/tablelayout.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!DOCTYPE library PUBLIC "-//NetBeans//DTD Java Library 1.1//EN" "http://www.netbeans.org/dtds/java-library-1_1.dtd">
+<library>
+  <archive name="modules/ext/nblayoutpack/TableLayout-3.2.jar"/>
+</library>

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/layer.xml
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/layer.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/layer.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?xml-stylesheet type="text/xml" href="http://openide.netbeans.org/fs/filesystem.xsl"?>
+<!DOCTYPE filesystem PUBLIC "-//NetBeans//DTD Filesystem 1.1//EN" "http://www.netbeans.org/dtds/filesystem-1_1.dtd">
+<filesystem>
+
+  <folder name="org-netbeans-api-project-libraries">
+    <folder name="Libraries">
+      <file name="tablelayout.xml" url="tablelayout.xml"/>
+    </folder>
+  </folder>
+
+  <folder name="Palette">
+    <folder name="Layouts">
+      <attr name="SystemFileSystem.localizingBundle" stringvalue="de.berlios.nblayoutpack.tablelayout.Bundle"/>
+      <file name="TableLayout.palette_item" url="palette/TableLayout.palette_item" />
+    </folder>
+  </folder>
+
+</filesystem>

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/palette/TableLayout.palette_item
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/palette/TableLayout.palette_item	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/palette/TableLayout.palette_item	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<palette_item version="1.0">
+  <component classname="info.clearthought.layout.TableLayout" type="layout" />
+  <icon16 urlvalue="nbres:/de/berlios/nblayoutpack/tablelayout/resources/tablelayout16.png" />
+  <description localizing-bundle="de.berlios.nblayoutpack.tablelayout.Bundle"
+               display-name-key="Palette/Layouts/info-clearthought-layout-TableLayout.instance" />
+  <classpath>
+      <resource type="library" name="tablelayout" />
+  </classpath>
+</palette_item>

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/tablelayout.xml
===================================================================
--- TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/tablelayout.xml	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/nb4.0/tablelayout.xml	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<!DOCTYPE library PUBLIC "-//NetBeans//DTD Library Declaration 1.0//EN" "http://www.netbeans.org/dtds/library-declaration-1_0.dtd">
+
+<library version="1.0">
+    <name>TableLayout 3.2</name>
+    <type>j2se</type>
+    <localizing-bundle>de/berlios/nblayoutpack/tablelayout/Bundle</localizing-bundle>
+    <volume>
+        <type>classpath</type>
+        <resource>jar:nbinst:///modules/ext/nblayoutpack/TableLayout-3.2.jar!/</resource>
+    </volume>
+</library>

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/resources/tablelayout16.png
===================================================================
(Binary files differ)


Property changes on: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/resources/tablelayout16.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/resources/tablelayout32.png
===================================================================
(Binary files differ)


Property changes on: TableLayout/trunk/src/de/berlios/nblayoutpack/tablelayout/resources/tablelayout32.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: TableLayout/trunk/testsrc/Main.form
===================================================================
--- TableLayout/trunk/testsrc/Main.form	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/testsrc/Main.form	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,552 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<Form version="1.1" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
+  <SyntheticProperties>
+    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
+  </SyntheticProperties>
+  <Events>
+    <EventHandler event="windowClosing" listener="java.awt.event.WindowListener" parameters="java.awt.event.WindowEvent" handler="exitForm"/>
+  </Events>
+  <AuxValues>
+    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,3,0,0,1,-104"/>
+  </AuxValues>
+  <SubComponents>
+    <Component class="javax.swing.JButton" name="jButton2">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jButton2"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JButton" name="jButton3">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jButton3"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JList" name="jList1">
+      <Properties>
+        <Property name="model" type="javax.swing.ListModel" editor="org.netbeans.modules.form.editors2.ListModelEditor">
+          <StringArray count="3">
+            <StringItem index="0" value="1"/>
+            <StringItem index="1" value="2"/>
+            <StringItem index="2" value="3"/>
+          </StringArray>
+        </Property>
+        <Property name="debugGraphicsOptions" type="int" value="-1"/>
+      </Properties>
+    </Component>
+    <Component class="javax.swing.JButton" name="jButton4">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jButton4"/>
+      </Properties>
+    </Component>
+    <Container class="javax.swing.JPanel" name="jPanel1">
+      <LayoutCode>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance">
+            <CodeVariable name="_tableLayoutInstance" type="20480" declaredType="info.clearthought.layout.TableLayout"/>
+            <ExpressionOrigin>
+              <ExpressionProvider type="CodeConstructor">
+                <CodeConstructor class="info.clearthought.layout.TableLayout" parameterTypes=""/>
+              </ExpressionProvider>
+            </ExpressionOrigin>
+          </CodeExpression>
+          <StatementProvider type="CodeExpression">
+            <CodeExpression id="1__tableLayoutInstance"/>
+          </StatementProvider>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setHGap" class="info.clearthought.layout.TableLayout" parameterTypes="int"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="2">
+              <ExpressionOrigin>
+                <Value type="int" value="0"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setVGap" class="info.clearthought.layout.TableLayout" parameterTypes="int"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="3">
+              <ExpressionOrigin>
+                <Value type="int" value="0"/>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setColumn" class="info.clearthought.layout.TableLayout" parameterTypes="[D"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="4">
+              <ExpressionOrigin>
+                <Value type="[D" editor="de.berlios.nblayoutpack.tablelayout.TableLayoutSupport$DoubleArrayEditor">
+                  <SerializedValue value="-84,-19,0,5,117,114,0,2,91,68,62,-90,-116,20,-85,99,90,30,2,0,0,120,112,0,0,0,0"/>
+                </Value>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="1__tableLayoutInstance"/>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setRow" class="info.clearthought.layout.TableLayout" parameterTypes="[D"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="5">
+              <ExpressionOrigin>
+                <Value type="[D" editor="de.berlios.nblayoutpack.tablelayout.TableLayoutSupport$DoubleArrayEditor">
+                  <SerializedValue value="-84,-19,0,5,117,114,0,2,91,68,62,-90,-116,20,-85,99,90,30,2,0,0,120,112,0,0,0,0"/>
+                </Value>
+              </ExpressionOrigin>
+            </CodeExpression>
+          </Parameters>
+        </CodeStatement>
+        <CodeStatement>
+          <CodeExpression id="6_jPanel1">
+            <CodeVariable name="jPanel1" type="8194" declaredType="javax.swing.JPanel"/>
+            <ExpressionOrigin>
+              <ExpressionProvider type="ComponentRef">
+                <ComponentRef name="jPanel1"/>
+              </ExpressionProvider>
+            </ExpressionOrigin>
+          </CodeExpression>
+          <StatementProvider type="CodeMethod">
+            <CodeMethod name="setLayout" class="java.awt.Container" parameterTypes="java.awt.LayoutManager"/>
+          </StatementProvider>
+          <Parameters>
+            <CodeExpression id="1__tableLayoutInstance"/>
+          </Parameters>
+        </CodeStatement>
+      </LayoutCode>
+    </Container>
+    <Component class="javax.swing.JButton" name="jButton1">
+      <Properties>
+        <Property name="text" type="java.lang.String" value="jButton1"/>
+      </Properties>
+    </Component>
+  </SubComponents>
+  <LayoutCode>
+    <CodeStatement>
+      <CodeExpression id="7__tableLayoutInstance1">
+        <CodeVariable name="_tableLayoutInstance1" type="20480" declaredType="info.clearthought.layout.TableLayout"/>
+        <ExpressionOrigin>
+          <ExpressionProvider type="CodeConstructor">
+            <CodeConstructor class="info.clearthought.layout.TableLayout" parameterTypes=""/>
+          </ExpressionProvider>
+        </ExpressionOrigin>
+      </CodeExpression>
+      <StatementProvider type="CodeExpression">
+        <CodeExpression id="7__tableLayoutInstance1"/>
+      </StatementProvider>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="7__tableLayoutInstance1"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setHGap" class="info.clearthought.layout.TableLayout" parameterTypes="int"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="8">
+          <ExpressionOrigin>
+            <Value type="int" value="0"/>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="7__tableLayoutInstance1"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setVGap" class="info.clearthought.layout.TableLayout" parameterTypes="int"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="9">
+          <ExpressionOrigin>
+            <Value type="int" value="0"/>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="7__tableLayoutInstance1"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setColumn" class="info.clearthought.layout.TableLayout" parameterTypes="[D"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="10">
+          <ExpressionOrigin>
+            <Value type="[D" editor="de.berlios.nblayoutpack.tablelayout.TableLayoutSupport$DoubleArrayEditor">
+              <SerializedValue value="-84,-19,0,5,117,114,0,2,91,68,62,-90,-116,20,-85,99,90,30,2,0,0,120,112,0,0,0,11,64,83,-128,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,20,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,20,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,20,0,0,0,0,0,0,-64,0,0,0,0,0,0,0,64,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-64,0,0,0,0,0,0,0"/>
+            </Value>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="7__tableLayoutInstance1"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setRow" class="info.clearthought.layout.TableLayout" parameterTypes="[D"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="11">
+          <ExpressionOrigin>
+            <Value type="[D" editor="de.berlios.nblayoutpack.tablelayout.TableLayoutSupport$DoubleArrayEditor">
+              <SerializedValue value="-84,-19,0,5,117,114,0,2,91,68,62,-90,-116,20,-85,99,90,30,2,0,0,120,112,0,0,0,5,64,20,0,0,0,0,0,0,64,42,0,0,0,0,0,0,64,40,0,0,0,0,0,0,64,42,0,0,0,0,0,0,64,42,0,0,0,0,0,0"/>
+            </Value>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="12">
+        <ExpressionOrigin>
+          <CodeExpression id="13">
+            <ExpressionOrigin>
+              <ExpressionProvider type="ComponentRef">
+                <ComponentRef name="."/>
+              </ExpressionProvider>
+            </ExpressionOrigin>
+          </CodeExpression>
+          <ExpressionProvider type="CodeMethod">
+            <CodeMethod name="getContentPane" class="javax.swing.JFrame" parameterTypes=""/>
+          </ExpressionProvider>
+        </ExpressionOrigin>
+      </CodeExpression>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="setLayout" class="java.awt.Container" parameterTypes="java.awt.LayoutManager"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="7__tableLayoutInstance1"/>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="12"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="14_jButton2">
+          <CodeVariable name="jButton2" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="jButton2"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="15">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="16">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="17">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="18">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="19">
+                <ExpressionOrigin>
+                  <Value type="int" value="3"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="20">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="21">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="12"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="22_jButton3">
+          <CodeVariable name="jButton3" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="jButton3"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="23">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="24">
+                <ExpressionOrigin>
+                  <Value type="int" value="3"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="25">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="26">
+                <ExpressionOrigin>
+                  <Value type="int" value="3"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="27">
+                <ExpressionOrigin>
+                  <Value type="int" value="3"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="28">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="29">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="12"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="30_jList1">
+          <CodeVariable name="jList1" type="8194" declaredType="javax.swing.JList"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="jList1"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="31">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="32">
+                <ExpressionOrigin>
+                  <Value type="int" value="5"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="33">
+                <ExpressionOrigin>
+                  <Value type="int" value="1"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="34">
+                <ExpressionOrigin>
+                  <Value type="int" value="5"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="35">
+                <ExpressionOrigin>
+                  <Value type="int" value="4"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="36">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="37">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="12"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="38_jButton4">
+          <CodeVariable name="jButton4" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="jButton4"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="39">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="40">
+                <ExpressionOrigin>
+                  <Value type="int" value="7"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="41">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="42">
+                <ExpressionOrigin>
+                  <Value type="int" value="7"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="43">
+                <ExpressionOrigin>
+                  <Value type="int" value="3"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="44">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="45">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="12"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="6_jPanel1"/>
+        <CodeExpression id="46">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="47">
+                <ExpressionOrigin>
+                  <Value type="int" value="0"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="48">
+                <ExpressionOrigin>
+                  <Value type="int" value="0"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="49">
+                <ExpressionOrigin>
+                  <Value type="int" value="0"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="50">
+                <ExpressionOrigin>
+                  <Value type="int" value="0"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="51">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="52">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+    <CodeStatement>
+      <CodeExpression id="12"/>
+      <StatementProvider type="CodeMethod">
+        <CodeMethod name="add" class="java.awt.Container" parameterTypes="java.awt.Component, java.lang.Object"/>
+      </StatementProvider>
+      <Parameters>
+        <CodeExpression id="53_jButton1">
+          <CodeVariable name="jButton1" type="8194" declaredType="javax.swing.JButton"/>
+          <ExpressionOrigin>
+            <ExpressionProvider type="ComponentRef">
+              <ComponentRef name="jButton1"/>
+            </ExpressionProvider>
+          </ExpressionOrigin>
+        </CodeExpression>
+        <CodeExpression id="54">
+          <ExpressionOrigin>
+            <ExpressionProvider type="CodeConstructor">
+              <CodeConstructor class="info.clearthought.layout.TableLayoutConstraints" parameterTypes="int, int, int, int, int, int"/>
+            </ExpressionProvider>
+            <Parameters>
+              <CodeExpression id="55">
+                <ExpressionOrigin>
+                  <Value type="int" value="10"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="56">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="57">
+                <ExpressionOrigin>
+                  <Value type="int" value="10"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="58">
+                <ExpressionOrigin>
+                  <Value type="int" value="3"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="59">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+              <CodeExpression id="60">
+                <ExpressionOrigin>
+                  <Value type="int" value="2"/>
+                </ExpressionOrigin>
+              </CodeExpression>
+            </Parameters>
+          </ExpressionOrigin>
+        </CodeExpression>
+      </Parameters>
+    </CodeStatement>
+  </LayoutCode>
+</Form>

Added: TableLayout/trunk/testsrc/Main.java
===================================================================
--- TableLayout/trunk/testsrc/Main.java	2005-05-25 06:51:45 UTC (rev 2)
+++ TableLayout/trunk/testsrc/Main.java	2005-05-25 06:54:07 UTC (rev 3)
@@ -0,0 +1,100 @@
+/*
+ * Main.java
+ *
+ * Created on December 22, 2004, 9:36 AM
+ */
+
+/**
+ *
+ * @author  Illya Kysil
+ */
+public class Main extends javax.swing.JFrame {
+  
+  /** Creates new form Main */
+  public Main() {
+    initComponents();
+  }
+  
+  /** This method is called from within the constructor to
+   * initialize the form.
+   * WARNING: Do NOT modify this code. The content of this method is
+   * always regenerated by the Form Editor.
+   */
+  private void initComponents() {//GEN-BEGIN:initComponents
+    info.clearthought.layout.TableLayout _tableLayoutInstance;
+    info.clearthought.layout.TableLayout _tableLayoutInstance1;
+    
+    jButton2 = new javax.swing.JButton();
+    jButton3 = new javax.swing.JButton();
+    jList1 = new javax.swing.JList();
+    jButton4 = new javax.swing.JButton();
+    jPanel1 = new javax.swing.JPanel();
+    jButton1 = new javax.swing.JButton();
+    
+    _tableLayoutInstance1 = new info.clearthought.layout.TableLayout();
+    _tableLayoutInstance1.setHGap(0);
+    _tableLayoutInstance1.setVGap(0);
+    _tableLayoutInstance1.setColumn(new double[]{78,info.clearthought.layout.TableLayout.PREFERRED,5,info.clearthought.layout.TableLayout.PREFERRED,5,info.clearthought.layout.TableLayout.PREFERRED,5,info.clearthought.layout.TableLayout.PREFERRED,5,0,info.clearthought.layout.TableLayout.PREFERRED});
+    _tableLayoutInstance1.setRow(new double[]{5,13,12,13,13});
+    getContentPane().setLayout(_tableLayoutInstance1);
+    
+    addWindowListener(new java.awt.event.WindowAdapter() {
+      public void windowClosing(java.awt.event.WindowEvent evt) {
+        exitForm(evt);
+      }
+    });
+    
+    jButton2.setText("jButton2");
+    getContentPane().add(jButton2, new info.clearthought.layout.TableLayoutConstraints(1, 2, 1, 3, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+    
+    jButton3.setText("jButton3");
+    getContentPane().add(jButton3, new info.clearthought.layout.TableLayoutConstraints(3, 2, 3, 3, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+    
+    jList1.setModel(new javax.swing.AbstractListModel() {
+      String[] strings = { "1", "2", "3" };
+      public int getSize() { return strings.length; }
+      public Object getElementAt(int i) { return strings[i]; }
+    });
+    jList1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
+    getContentPane().add(jList1, new info.clearthought.layout.TableLayoutConstraints(5, 1, 5, 4, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+    
+    jButton4.setText("jButton4");
+    getContentPane().add(jButton4, new info.clearthought.layout.TableLayoutConstraints(7, 2, 7, 3, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+    
+    _tableLayoutInstance = new info.clearthought.layout.TableLayout();
+    _tableLayoutInstance.setHGap(0);
+    _tableLayoutInstance.setVGap(0);
+    _tableLayoutInstance.setColumn(new double[]{});
+    _tableLayoutInstance.setRow(new double[]{});
+    jPanel1.setLayout(_tableLayoutInstance);
+    
+    getContentPane().add(jPanel1, new info.clearthought.layout.TableLayoutConstraints(0, 0, 0, 0, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+    
+    jButton1.setText("jButton1");
+    getContentPane().add(jButton1, new info.clearthought.layout.TableLayoutConstraints(10, 2, 10, 3, info.clearthought.layout.TableLayout.FULL, info.clearthought.layout.TableLayout.FULL));
+    
+    pack();
+  }//GEN-END:initComponents
+  
+  /** Exit the Application */
+  private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
+    System.exit(0);
+  }//GEN-LAST:event_exitForm
+  
+  /**
+   * @param args the command line arguments
+   */
+  public static void main(String args[]) {
+    new Main().show();
+  }
+  
+  // Variables declaration - do not modify//GEN-BEGIN:variables
+  private javax.swing.JButton jButton1;
+  private javax.swing.JButton jButton2;
+  private javax.swing.JButton jButton3;
+  private javax.swing.JButton jButton4;
+  private javax.swing.JList jList1;
+  private javax.swing.JPanel jPanel1;
+  // End of variables declaration//GEN-END:variables
+  
+}



